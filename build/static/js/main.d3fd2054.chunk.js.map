{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","components/NavSide.js","actions/alert.js","actions/types.js","utills/setAuthToken.js","actions/auth.js","components/NavMain.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/HeroUnit.js","components/CardGrid.js","pages/LandingPage.js","components/SignInForm.js","pages/SignInPage.js","components/SignUpForm.js","pages/SignUpPage.js","pages/DashboardPage.js","components/PostForm.js","pages/AddPostPage.js","pages/Alert.js","actions/job.js","pages/sales/AddJob.js","pages/sales/JobList.js","pages/sales/exportCsv.js","pages/sales/adminJobList.js","pages/sales/JobEdit.js","pages/sales/salesDetail.js","actions/user.js","pages/sales/UserList.js","pages/sales/EditUser.js","pages/sales/leads/LeadList.js","pages/sales/leads/LeadDetails.js","pages/sales/leads/LeadEdit.js","pages/sales/leads/MyLead.js","pages/sales/leads/LeadCallList.js","pages/sales/user/UserReport.js","pages/sales/user/UserDetails.js","routers/AppRouter.js","reducers/auth.js","reducers/user.js","reducers/alert.js","reducers/job.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","compose","withStyles","theme","root","color","withTheme","user","classes","useState","open","setOpen","userOpen","setuserOpen","leadsOpen","setleadsOpen","i","length","raceName","role","name","ListItem","button","component","Link","to","ListItemIcon","className","ListItemText","primary","onClick","Collapse","in","timeout","unmountOnExit","List","disablePadding","Fragment","setAlert","msg","alert_type","dispatch","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","BASE_URL","process","loadUser","a","localStorage","get","res","data","logIn","registration_number","password","history","config","body","JSON","stringify","post","push","errors","response","forEach","error","NavMain","state","anchor","renderButtons","props","auth","profile","h4","Button","handleLogout","rightMostButton","pushRight","logout","handleDrawerOpen","setState","handleDrawerClose","handleChangeAnchor","event","target","value","this","children","registrationNumber","drawer","Drawer","variant","paper","drawerPaper","drawerHeader","header","IconButton","direction","Divider","before","after","appFrame","AppBar","classNames","appBar","appBarShift","Toolbar","disableGutters","aria-label","menuButton","hide","Typography","logoText","noWrap","content","contentShift","React","Component","flexGrow","fontSize","height","width","zIndex","overflow","position","display","backgroundColor","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","marginLeft","marginRight","textDecoration","alignItems","justifyContent","padding","mixins","toolbar","palette","background","default","spacing","unit","margin","withRouter","connect","authReducer","isAuth","rest","Route","render","Redirect","icon","heroUnit","heroContent","maxWidth","heroButtons","marginTop","layout","breakpoints","up","align","gutterBottom","paragraph","Grid","container","justify","item","cardGrid","card","flexDirection","cardMedia","paddingTop","cardContent","footer","map","key","sm","md","lg","Card","CardMedia","image","CardContent","CardActions","size","avatar","secondary","main","form","submit","formData","setFormData","onChangesHandler","Paper","Avatar","onSubmit","preventDefault","FormControl","fullWidth","InputLabel","htmlFor","Input","autoComplete","onChange","autoFocus","LoginPage","SignInForm","gutters","paddingBottom","minHeight","textField","signUp","designation","elevation","TextField","label","Select","MenuItem","SignUpPage","SignUpForm","h1","fontFamily","jumbo","ul","fontWeight","job","SetJob","lead","SetLead","goodLead","SetGoodLead","hotLead","SetHotLead","closedLead","SetClosedLead","rejectlead","SetRejectLead","mJob","SetMJob","mLead","SetMLead","mGoodLead","SetMGoodLead","mHotLead","SetMHotLead","mClosedLead","SetMClosedLead","mRejectlead","SetMRejectLead","useEffect","then","result","class","style","undefined","PostForm","placeholder","multiline","rows","marginBottom","AddPostPage","divStyle","opacity","top","left","border","borderRadius","alerts","alertReducer","alert","fetchJob","deleteJob","useStyles","makeStyles","modal","boxShadow","shadows","compExist","float","buttonform","typography","error1","right","error2","textAlign","addJob","company_name","job_title","url","location","salary","count","setExistComp","setCompExist","onChangeHandler","console","log","noValidate","for","exist","filter","companyName","toLowerCase","listStyleType","comp","index","createdAt","columns","minWidth","format","toLocaleString","toFixed","tableWrapper","jobHeader","JobReducer","useAlert","dailyJob","setDailyJob","setCount","page","setPage","rowsPerPage","setRowsPerPage","success","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","row","status","scope","TablePagination","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","CsvDataService","filename","Object","csvContent","join","k","cell","Date","toString","replace","search","blob","Blob","navigator","msSaveBlob","link","document","createElement","download","URL","createObjectURL","setAttribute","visibility","appendChild","click","removeChild","desc","b","orderBy","headCells","numeric","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","Checkbox","indeterminate","checked","inputProps","headCell","sortDirection","TableSortLabel","active","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","text","dark","title","flex","EnhancedTableToolbar","exportData","clsx","Tooltip","table","overflowX","clip","setOrder","setOrderBy","selected","setSelected","dense","setDense","match","setMatch","setJob","handleChange","message","handleClose","handleOpen","emptyRows","Math","min","lists","newList","list","includes","window","confirm","filteredItems","exportItems","UserName","CompanyName","JobTitle","Profile","Status","exportToCsv","aria-labelledby","newSelecteds","n","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","isItemSelected","indexOf","labelId","selectedIndex","newSelected","concat","handleClick","aria-checked","tabIndex","jobId","onClose","onOpen","pathname","detail","colSpan","parseInt","FormControlLabel","control","updateJob","center","salesDetail","SetData","Total","reduce","prev","cur","Badge","badgeContent","userId","fetchUser","maxHeight","delete","users","userReducer","deleteUser","hover","updateUser","setRole","setProfile","disabled","assigToHandler","assignTo","callHandleChange","call_status","client_name","ref","createRef","li","listStyle","borderBottom","divider","flexWrap","toolbarTitle","cardHeader","grey","cardPricing","cardHeader1","cardBody1","cardContentRight","borderRight","cardContentLeft","cardContentInner","Pricing","targetRef","toPdf","email","website","phone_number","call_time","time_zone","lead_status","updateLead","source","call_date","leadId","weeklyuserData","monthlyuserData","userDetails","createBrowserHistory","Router","Switch","exact","path","SignInPage","DashboardPage","UserList","EditUser","JobList","AdminJobList","EditJob","SalesDetails","LeadsList","LeadDetails","EditLead","MyLeads","LeadSchedule","UserReport","UserDetails","initialState","getItem","loading","newjob","rootReducer","combineReducers","action","setItem","removeItem","middel","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","options","positions","TOP_RIGHT","Boolean","hostname","createMuiTheme","contrastText","deepOrange","ReactDOM","CssBaseline","template","AlertTemplate","AppRouter","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d3fd2054.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 111;","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState}from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport compose from \"recompose/compose\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport List from \"@material-ui/core/List\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport WorkOutlineIcon from \"@material-ui/icons/WorkOutline\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    color: \"white\"\r\n  }\r\n});\r\nconst mailFolderListItems = ({ user, classes }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [userOpen, setuserOpen] = useState(false);\r\n  const [leadsOpen, setleadsOpen] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n  const userHandleClick = () => {\r\n    setuserOpen(!userOpen);\r\n  };\r\n\r\n  const leadsHandleClick = () => {\r\n    setleadsOpen(!leadsOpen);\r\n  };\r\n\r\n  if (user) {\r\n    for (var i = 0; i < user.length; i++) {\r\n      var raceName = user[i].role;\r\n      var name = user[i].name;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <ListItem button component={Link} to=\"/dashboard\">\r\n        <ListItemIcon>\r\n          <DashboardIcon className={classes.root} />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      {raceName == \"user\" || raceName == \"super_admin\" ? (\r\n        <ListItem button onClick={handleClick}>\r\n          <ListItemIcon>\r\n            <WorkOutlineIcon className={classes.root} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Sales\" />\r\n          {open ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {raceName == \"user\" || raceName == \"super_admin\" ? (\r\n            <ListItem button component={Link} to=\"/job_list\">\r\n              <ListItemIcon>\r\n                <ListIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Job List\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {raceName == \"super_admin\" ? (\r\n            <ListItem button component={Link} to=\"/admin_job_list\">\r\n              <ListItemIcon>\r\n                <SupervisorAccountIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Sales Admin\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {raceName == \"super_admin\" ? (\r\n            <ListItem button component={Link} to=\"/sales_daily_details\">\r\n              <ListItemIcon>\r\n                <WorkIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Daily Job\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n      {raceName == \"super_admin\" || raceName == \"admin\" ? (\r\n        <ListItem button onClick={userHandleClick}>\r\n          <ListItemIcon>\r\n            <PersonIcon className={classes.root} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"User\" />\r\n          {userOpen ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <Collapse in={userOpen} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {raceName == \"super_admin\" ? (\r\n            <ListItem button component={Link} to=\"/user_list\">\r\n              <ListItemIcon>\r\n                <ListIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"User List\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {raceName == \"admin\" && name == \"Muddasir Ahmed\" ? (\r\n            <ListItem button component={Link} to=\"/user_report\">\r\n              <ListItemIcon>\r\n                <ListIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"User Report\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n      {raceName == \"admin\" || raceName == \"super_admin\" ? (\r\n        <React.Fragment>\r\n          <ListItem button onClick={leadsHandleClick}>\r\n            <ListItemIcon>\r\n              <WorkOutlineIcon className={classes.root} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Leads\" />\r\n            {leadsOpen ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={leadsOpen} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {raceName == \"super_admin\" ? (\r\n                <ListItem button component={Link} to=\"/leads_list\">\r\n                  <ListItemIcon>\r\n                    <ListIcon className={classes.root} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Leads List\" />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {raceName == \"super_admin\" || raceName == \"admin\" ? (\r\n                <ListItem button component={Link} to=\"/my_leads\">\r\n                  <ListItemIcon>\r\n                    <ListIcon className={classes.root} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"My Leads\" />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {raceName == \"super_admin\" || raceName == \"admin\" ? (\r\n                <ListItem button component={Link} to=\"/lead_scedule\">\r\n                  <ListItemIcon>\r\n                    <ListIcon className={classes.root} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Lead Scheduler\" />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </List>\r\n          </Collapse>\r\n        </React.Fragment>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default compose(withStyles(styles, { withTheme: true }))(\r\n  mailFolderListItems\r\n);\r\n","import uuid from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\nexport const setAlert = (msg, alert_type) => dispatch => {\r\n  const id = uuid.v4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alert_type, id }\r\n  });\r\n\r\n  setTimeout(\r\n    () =>\r\n      dispatch({\r\n        type: REMOVE_ALERT,\r\n        payload: id\r\n      }),\r\n    2000\r\n  );\r\n};\r\n","export const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n//Job\r\nexport const JOB_ADD_SUCCESS = \"JOB_ADD_SUCCESS\";\r\nexport const JOB_ADD_FAIL = \"JOB_ADD_FAIL\";\r\nexport const FETCH_JOB_DATA_SUCCESS = \"FETCH_JOB_DATA_SUCCESS\";\r\nexport const FETCH_JOB_DATA_FAIL = \"FETCH_JOB_DATA_FAIL\";\r\nexport const JOB_DELETE_SUCCESS = \"JOB_DELETE_SUCCESS\";\r\nexport const JOB_DELETE_FAIL = \"JOB_DELETE_FAIL\";\r\nexport const JOB_UPDATE_SUCCESS = \"JOB_UPDATE_SUCCESS\";\r\nexport const JOB_UPDATE_FAIL = \"JOB_UPDATE_FAIL\";\r\n//User\r\nexport const FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\";\r\nexport const FETCH_USER_FAIL = \"FETCH_USER_FAIL\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_MONTHLY_DETAILS_SUCCESS = \"USER_MONTHLY_DETAILS_SUCCESS\";\r\nexport const USER_MONTHLY_DETAILS_FAIL = \"USER_MONTHLY_DETAILS_FAIL\";\r\nexport const USER_WEEKLY_DETAILS_SUCCESS = \"USER_WEEKLY_DETAILS_SUCCESS\";\r\nexport const USER_WEEKLY_DETAILS_FAIL = \"USER_WEEKLY_DETAILS_FAIL\";\r\n//Lead\r\nexport const LEAD_UPDATE_SUCCESS = \"LEAD_UPDATE_SUCCESS\";\r\nexport const LEAD_UPDATE_FAIL = \"LEAD_UPDATE_FAIL\";\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGOUT\r\n} from \"../actions/types\";\r\nimport setAuthToken from \"../utills/setAuthToken\";\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(BASE_URL + \"/api/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\nexport const signUp = (\r\n  registration_number,\r\n  name,\r\n  designation,\r\n  password,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    registration_number,\r\n    name,\r\n    designation,\r\n    password\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(BASE_URL + \"/api/user\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n    history.push(\"/dashboard\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    const error1 = error.response.data.msg;\r\n    if (error1) {\r\n      dispatch(setAlert(error));\r\n    }\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const logIn = (\r\n  registration_number,\r\n  password,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    registration_number,\r\n    password\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(BASE_URL + \"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    const error1 = error.response.data.msg;\r\n    if (error1) {\r\n      dispatch(setAlert(error));\r\n    }\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport MailFolderListItemsfrom from \"./NavSide\";\r\n\r\nimport { logout } from \"../actions/auth\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  header: {\r\n    fontSize: \"12px\"\r\n  },\r\n  appFrame: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    zIndex: 1,\r\n    overflow: \"scroll\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    width: \"100%\"\r\n  },\r\n  appBar: {\r\n    position: \"absolute\",\r\n    width: \"100vw\",\r\n    backgroundColor: \"#1c304e\",\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  \"appBarShift-left\": {\r\n    marginLeft: drawerWidth\r\n  },\r\n  \"appBarShift-right\": {\r\n    marginRight: drawerWidth\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20\r\n  },\r\n  logoText: {\r\n    textDecoration: \"none\",\r\n    marginLeft: \"21px\"\r\n  },\r\n  rightMostButton: {\r\n    marginRight: 12\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    width: drawerWidth,\r\n    backgroundColor: \"#1c304e\",\r\n    color: \"white\"\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar\r\n  },\r\n  pushRight: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing.unit * 3,\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  \"content-left\": {\r\n    marginLeft: -drawerWidth\r\n  },\r\n  \"content-right\": {\r\n    marginRight: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  \"contentShift-left\": {\r\n    marginLeft: 0\r\n  },\r\n  \"contentShift-right\": {\r\n    marginRight: 0\r\n  },\r\n  color: {\r\n    color: \"white\"\r\n  },\r\n  h4: {\r\n    margin: \"0 auto\"\r\n  }\r\n});\r\n\r\nclass NavMain extends React.Component {\r\n  state = {\r\n    open: false,\r\n    anchor: \"left\"\r\n  };\r\n\r\n  renderButtons = () => {\r\n    const { auth, classes, user } = this.props;\r\n\r\n    if (user) {\r\n      for (var i = 0; i < user.length; i++) {\r\n        var name = user[i].name;\r\n        var profile = user[i].profile;\r\n      }\r\n    }\r\n    if (auth) {\r\n      return (\r\n        <React.Fragment>\r\n          <h4 className={classes.h4}>Profile name :{profile}</h4>\r\n\r\n          <Button\r\n            onClick={this.handleLogout}\r\n            color=\"inherit\"\r\n            to=\"/\"\r\n            component={Link}\r\n            className={classes.rightMostButton}\r\n          >\r\n            Log Out\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Button\r\n            color=\"inherit\"\r\n            to=\"/\"\r\n            component={Link}\r\n            className={classes.pushRight}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Button\r\n            to=\"/signup\"\r\n            component={Link}\r\n            color=\"inherit\"\r\n            className={classes.rightMostButton}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  handleLogout = () => {\r\n    this.props.logout();\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleChangeAnchor = event => {\r\n    this.setState({\r\n      anchor: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme, children, user, auth } = this.props;\r\n    const { anchor, open } = this.state;\r\n    if (user) {\r\n      for (var i = 0; i < user.length; i++) {\r\n        var name = user[i].name;\r\n        var profile = user[i].profile;\r\n        var registrer = user[i].registrationNumber;\r\n      }\r\n    }\r\n    var drawer = (\r\n      <Drawer\r\n        variant=\"persistent\"\r\n        anchor={anchor}\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <h4 className={classes.header}>{name}</h4>\r\n          <IconButton\r\n            className={classes.color}\r\n            onClick={this.handleDrawerClose}\r\n          >\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <MailFolderListItemsfrom user={user} />\r\n        </List>\r\n      </Drawer>\r\n    );\r\n\r\n    let before = null;\r\n    let after = null;\r\n\r\n    if (anchor === \"left\") {\r\n      before = drawer;\r\n    } else {\r\n      after = drawer;\r\n    }\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.appFrame}>\r\n          <AppBar\r\n            className={classNames(classes.appBar, {\r\n              [classes.appBarShift]: open,\r\n              [classes[`appBarShift-${anchor}`]]: open\r\n            })}\r\n          >\r\n            <Toolbar disableGutters={!open}>\r\n              {auth ? (\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"Open drawer\"\r\n                  onClick={this.handleDrawerOpen}\r\n                  className={classNames(\r\n                    classes.menuButton,\r\n                    open && classes.hide\r\n                  )}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              ) : (\r\n                \" \"\r\n              )}\r\n              <Typography\r\n                component={Link}\r\n                className={classes.logoText}\r\n                to=\"/\"\r\n                variant=\"title\"\r\n                color=\"inherit\"\r\n                noWrap\r\n              >\r\n                Cloud Tek\r\n              </Typography>\r\n\r\n              {this.renderButtons()}\r\n            </Toolbar>\r\n          </AppBar>\r\n          {before}\r\n          <main\r\n            className={classNames(\r\n              classes.content,\r\n              classes[`content-${anchor}`],\r\n              {\r\n                [classes.contentShift]: open,\r\n                [classes[`contentShift-${anchor}`]]: open\r\n              }\r\n            )}\r\n          >\r\n            <div className={classes.drawerHeader} />\r\n            {children}\r\n          </main>\r\n          {after}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNavMain.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  auth: PropTypes.bool.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n  user: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.authReducer.isAuth,\r\n  user: state.authReducer.user\r\n});\r\n\r\nexport default compose(\r\n  withStyles(styles, { withTheme: true }),\r\n  withRouter,\r\n  connect(mapStateToProps, { logout })\r\n)(NavMain);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport NavMain from \"../components/NavMain\";\r\n\r\nexport const PrivateRoute = ({ auth, component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth ? (\r\n        <NavMain>\r\n          <Component {...props} />\r\n        </NavMain>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.authReducer.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NavMain from \"../components/NavMain\";\r\n\r\nexport const PublicRoute = ({ isAuth, component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuth ? (\r\n        <Redirect to=\"/dashboard\" />\r\n      ) : (\r\n        <NavMain>\r\n          <Component {...props} />\r\n        </NavMain>\r\n      )\r\n    }\r\n  />\r\n);\r\nPublicRoute.propTypes = {\r\n  auth: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.authReducer.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  icon: {\r\n    marginRight: theme.spacing.unit * 2\r\n  },\r\n  heroUnit: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  heroContent: {\r\n    maxWidth: 600,\r\n    margin: \"0 auto\",\r\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing.unit * 4\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  }\r\n});\r\n\r\nexport const HeroUnit = props => {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main>\r\n        <div className={classes.heroContent}>\r\n          <Typography\r\n            variant=\"display3\"\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n          >\r\n            Landing page\r\n          </Typography>\r\n          <Typography\r\n            variant=\"title\"\r\n            align=\"center\"\r\n            color=\"textSecondary\"\r\n            paragraph\r\n          >\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean\r\n            congue orci sit amet tortor semper, sit amet pretium odio dignissim.\r\n            Quisque odio lacus, ullamcorper sit amet ultrices sed, placerat a\r\n            orci odio lacus.\r\n          </Typography>\r\n          <div className={classes.heroButtons}>\r\n            <Grid container spacing={16} justify=\"center\">\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  Main call to action\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" color=\"primary\">\r\n                  Secondary action\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nHeroUnit.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HeroUnit);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  icon: {\r\n    marginRight: theme.spacing.unit * 2\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  cardGrid: {\r\n    padding: `${theme.spacing.unit * 8}px 0`\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing.unit * 6\r\n  }\r\n});\r\n\r\nexport const CardGrid = props => {\r\n  const { classes } = props;\r\n  const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  return (\r\n    <div className={classNames(classes.layout, classes.cardGrid)}>\r\n      <Grid container spacing={40}>\r\n        {cards.map(card => (\r\n          <Grid item key={card} sm={6} md={4} lg={3}>\r\n            <Card className={classes.card}>\r\n              <CardMedia\r\n                className={classes.cardMedia}\r\n                image=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n              />\r\n\r\n              <CardContent className={classes.cardContent}>\r\n                <Typography gutterBottom variant=\"headline\" component=\"h2\">\r\n                  Heading\r\n                </Typography>\r\n                <Typography>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                  Aenean congue orci sit amet tortor semper, sit amet pretium\r\n                  odio dignissim.\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                  Read More\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nCardGrid.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CardGrid);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport NavMain from \"../components/NavMain\";\r\nimport HeroUnit from \"../components/HeroUnit\";\r\nimport CardGrid from \"../components/CardGrid\";\r\n\r\nconst LandingPage = ({ auth }) => {\r\n  // if (auth) {\r\n  //   return <Redirect to=\"/addpost\" />;\r\n  // }\r\n  return (\r\n    <React.Fragment>\r\n      <NavMain>\r\n        <HeroUnit />\r\n        <CardGrid />\r\n      </NavMain>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nLandingPage.propTypes = {\r\n  auth: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.authReducer.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps)(LandingPage);\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport LockIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { logIn } from \"../actions/auth\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    display: \"block\", // Fix IE11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE11 issue.\r\n    marginTop: theme.spacing.unit\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3\r\n  }\r\n});\r\n\r\nconst SignIn = ({ logIn, history, classes, auth }) => {\r\n  // if (auth) {\r\n  //    return <Redirect to=\"/dashboard\" />;\r\n  // }\r\n  const [formData, setFormData] = useState({\r\n    registration_number: null,\r\n    password: null\r\n  });\r\n\r\n  const { registration_number, password } = formData;\r\n  const onChangesHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    logIn(registration_number, password, history);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockIcon />\r\n          </Avatar>\r\n          <Typography variant=\"headline\">Sign in</Typography>\r\n          <form onSubmit={submitHandler} className={classes.form}>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n              <InputLabel htmlFor=\"registration_number\">\r\n                Registration Number\r\n              </InputLabel>\r\n              <Input\r\n                id=\"registration_number\"\r\n                type=\"text\"\r\n                name=\"registration_number\"\r\n                autoComplete=\"registration_number\"\r\n                onChange={onChangesHandler}\r\n                autoFocus\r\n              />\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={onChangesHandler}\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"raised\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onChange={onChangesHandler}\r\n            >\r\n              Sign in\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  logIn: PropTypes.func.isRequired,\r\n  auth: PropTypes.bool.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.authReducer.isAuth\r\n});\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(mapStateToProps, { logIn })\r\n)(withRouter(SignIn));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SignInForm from \"../components/SignInForm\";\r\nimport { logIn } from \"../actions/auth\";\r\n\r\nexport class LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  // onSubmit = e => {\r\n  //   e.preventDefault();\r\n  //   this.props.login();\r\n  //   //this.props.history.push(\"/dashboard\");\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <SignInForm onSubmit={this.onSubmit} /> */}\r\n        <SignInForm />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { logIn })(LoginPage);\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport HowToReg from \"@material-ui/icons/HowToReg\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { signUp } from \"../actions/auth\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    width: \"50%\",\r\n    margin: \"0 auto\",\r\n    minHeight: \"250px\"\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    display: \"block\", // Fix IE11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    marginTop: \"5%\",\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nconst PaperSheet = ({ signUp, classes, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    registration_number: null,\r\n    name: null,\r\n    designation: null,\r\n    password: null\r\n  });\r\n\r\n  const { registration_number, name, designation, password } = formData;\r\n  const onChangesHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const setSelectHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      designation: e.target.value\r\n    });\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    signUp(registration_number, name, designation, password, history);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper} elevation={1}>\r\n          <Avatar className={classes.avatar}>\r\n            <HowToReg />\r\n          </Avatar>\r\n          <Typography variant=\"headline\">Sign Up</Typography>\r\n          <form\r\n            onSubmit={submitHandler}\r\n            className={classes.container}\r\n            autoComplete=\"on\"\r\n          >\r\n            <TextField\r\n              autoFocus\r\n              id=\"registration_number\"\r\n              label=\"Registration Number\"\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              onChange={onChangesHandler}\r\n            />\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              onChange={onChangesHandler}\r\n            />\r\n            <br></br>\r\n            <br></br>\r\n            <Select\r\n              id=\"select\"\r\n              label=\"Designation\"\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              onChange={setSelectHandler}\r\n            >\r\n              <MenuItem value=\"Developer\">Developer</MenuItem>\r\n\r\n              <MenuItem value=\"Project Manger\">Project Manger</MenuItem>\r\n              <MenuItem value=\"Sales Manger\">Sales Manger</MenuItem>\r\n              <MenuItem value=\"Sales\">Sales User</MenuItem>\r\n            </Select>\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              onChange={onChangesHandler}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nPaperSheet.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  signUp: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(null, { signUp })\r\n)(withRouter(PaperSheet));\r\n","import React from \"react\";\r\n\r\nimport SignUpForm from \"../components/SignUpForm\";\r\n\r\nexport const SignUpPage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <SignUpForm />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n","import React, { useEffect } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { List } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nconst h1 = {\r\n  marginTop: \"-45px\",\r\n  fontFamily: \"serif\",\r\n  color: \"white\"\r\n};\r\n\r\nconst jumbo = {\r\n  backgroundColor: \"#285151\"\r\n};\r\nconst ul = {\r\n  fontWeight: \"bold\",\r\n  fontFamily: \"serif\",\r\n  fontSize: \"15px\"\r\n};\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst DashboardPage = ({ user }) => {\r\n  //week state\r\n  const [job, SetJob] = React.useState([]);\r\n  const [lead, SetLead] = React.useState([]);\r\n  const [goodLead, SetGoodLead] = React.useState([]);\r\n  const [hotLead, SetHotLead] = React.useState([]);\r\n  const [closedLead, SetClosedLead] = React.useState([]);\r\n  const [rejectlead, SetRejectLead] = React.useState([]);\r\n\r\n  //month state\r\n  const [mJob, SetMJob] = React.useState([]);\r\n  const [mLead, SetMLead] = React.useState([]);\r\n  const [mGoodLead, SetMGoodLead] = React.useState([]);\r\n  const [mHotLead, SetMHotLead] = React.useState([]);\r\n  const [mClosedLead, SetMClosedLead] = React.useState([]);\r\n  const [mRejectlead, SetMRejectLead] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    // jobs count\r\n    axios.get(BASE_URL + \"/api/job/status_job_count\").then(res => {\r\n      SetJob(res.data.result);\r\n    });\r\n    //leads count\r\n    axios.get(BASE_URL + \"/api/job/status_lead_count\").then(res => {\r\n      SetLead(res.data.result);\r\n    });\r\n    // good leads count\r\n    axios.get(BASE_URL + \"/api/job/status_good_lead_count\").then(res => {\r\n      SetGoodLead(res.data.result);\r\n    });\r\n    // hot leads count\r\n    axios.get(BASE_URL + \"/api/job/status_hot_lead_count\").then(res => {\r\n      SetHotLead(res.data.result);\r\n    });\r\n    // closed lead count\r\n    axios.get(BASE_URL + \"/api/job/status_closed_lead_count\").then(res => {\r\n      SetClosedLead(res.data.result);\r\n    });\r\n    //rejected lead count\r\n    axios.get(BASE_URL + \"/api/job/status_rejected_lead_count\").then(res => {\r\n      SetRejectLead(res.data.result);\r\n    });\r\n\r\n    // Previous Monthly Job Report\r\n    axios.get(BASE_URL + \"/api/job/status_job_monthly_count\").then(res => {\r\n      SetMJob(res.data.result);\r\n    });\r\n\r\n    // Previous Monthly Lead Report\r\n    axios.get(BASE_URL + \"/api/job/status_lead_monthly_count\").then(res => {\r\n      SetMLead(res.data.result);\r\n    });\r\n\r\n    // Previous Monthly Good Lead Report\r\n    axios\r\n      .get(BASE_URL + \"/api/job/status_good_lead_monthly_count\")\r\n      .then(res => {\r\n        SetMGoodLead(res.data.result);\r\n      });\r\n\r\n    // Previous Monthly Good Lead Report\r\n    axios.get(BASE_URL + \"/api/job/status_hot_lead_month_count\").then(res => {\r\n      SetMHotLead(res.data.result);\r\n    });\r\n\r\n    // Previous Monthly Good Lead Report\r\n    axios\r\n      .get(BASE_URL + \"/api/job/status_closed_lead_monthly_count\")\r\n      .then(res => {\r\n        SetMClosedLead(res.data.result);\r\n      });\r\n\r\n    // Previous Monthly Good Lead Report\r\n    axios\r\n      .get(BASE_URL + \"/api/job/status_rejected_lead_monthly_count\")\r\n      .then(res => {\r\n        SetMRejectLead(res.data.result);\r\n      });\r\n  }, []);\r\n\r\n  if (user) {\r\n    for (var i = 0; i < user.length; i++) {\r\n      var raceName = user[i].role;\r\n      var name = user[i].name;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {raceName == \"super_admin\" ? (\r\n        <div class=\"row\">\r\n          <div class=\"col-md-5 offset-md-1\">\r\n            <div style={jumbo} class=\"jumbotron jumbotron-fluid\">\r\n              <h1 style={h1} class=\"text-center\">\r\n                Previous Week Report\r\n              </h1>\r\n              <ul style={ul} class=\"list-group\">\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Applied Job\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {job.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {lead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Good Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {goodLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Hot Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {hotLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Closed Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {closedLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Rejected Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {rejectlead.length}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-5\">\r\n            <div style={jumbo} class=\"jumbotron jumbotron-fluid\">\r\n              <h1 style={h1} class=\"text-center\">\r\n                Previous Month Report\r\n              </h1>\r\n              <ul style={ul} class=\"list-group\">\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Applied Job\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mJob.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Good Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mGoodLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Hot Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mHotLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Closed Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mClosedLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Rejected Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mRejectlead.length}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h1>Welcome \"{name}\" to Sales CRM</h1>\r\n      )}\r\n      {raceName == undefined ? (\r\n        <p>Thanks for Registration wait Untill an Admin Verified you</p>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  user: state.authReducer.user\r\n});\r\nexport default connect(mapStateToProps, {})(DashboardPage);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n  \r\n  layout: {\r\n    width: '100%',\r\n    display: 'block',\r\n    margin: '0 auto',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '80%'\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '65%'\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '45%'\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: '300px',\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    marginTop: '5%'\r\n  }\r\n});\r\n\r\nclass PostForm extends React.Component {\r\n  render() {\r\n    const { classes, children } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <Edit />\r\n            </Avatar>\r\n            <Typography align=\"center\" variant=\"headline\">Add Post</Typography>\r\n            <form>\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Title\"\r\n                placeholder=\"Enter a title\"\r\n           \r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Category\"\r\n                placeholder=\"Enter a category\"\r\n                \r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />{' '}\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Thumbnail URL\"\r\n                placeholder=\"http://www.website.com/thumbnail.jpg\"\r\n                \r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Main Image URL\"\r\n                \r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />{' '}\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Body\"\r\n                placeholder=\"Write your post here\"\r\n                multiline\r\n                rows={6}\r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />\r\n              <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              className={classes.button}\r\n              >Save Post</Button>\r\n            </form>\r\n          </Paper>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPostForm.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PostForm);\r\n","import React from 'react';\r\n\r\nimport PostForm from '../components/PostForm';\r\n\r\nexport const AddPostPage = () => {\r\n  return (\r\n    <div>\r\n      <PostForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddPostPage;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n//import \"./alert.css\";\r\n\r\nconst divStyle = {\r\n  padding: \"10px 0px 10px 28px\",\r\n  width: \"405px\",\r\n  opacity: \"0.9\",\r\n  color: \"white\",\r\n  background: \"red\",\r\n  position: \"absolute\",\r\n  top: \"34px\",\r\n  left: \"561px\",\r\n  zIndex: \"11111\",\r\n  border: \"5px solid #780c0c\",\r\n  borderRadius: \"20px\",\r\n  zIndex: \"10000\"\r\n};\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 && (\r\n    <ul style={divStyle} key={alert.id}>\r\n      {alerts.map(alert => (\r\n        <li> {alert.msg}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  alerts: state.alertReducer\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { setAlert } from \"../actions/alert\";\r\n\r\nimport {\r\n  JOB_ADD_SUCCESS,\r\n  JOB_ADD_FAIL,\r\n  FETCH_JOB_DATA_SUCCESS,\r\n  FETCH_JOB_DATA_FAIL,\r\n  JOB_DELETE_SUCCESS,\r\n  JOB_DELETE_FAIL,\r\n  JOB_UPDATE_SUCCESS,\r\n  JOB_UPDATE_FAIL,\r\n  LEAD_UPDATE_SUCCESS,\r\n  LEAD_UPDATE_FAIL\r\n} from \"../actions/types\";\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nexport const fetchJob = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(BASE_URL + \"/api/job\");\r\n\r\n    dispatch({\r\n      type: FETCH_JOB_DATA_SUCCESS,\r\n      payload: res.data.result\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_JOB_DATA_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const addJob = (\r\n  company_name,\r\n  job_title,\r\n  url,\r\n  profile,\r\n  location,\r\n  salary,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    company_name,\r\n    job_title,\r\n    url,\r\n    profile,\r\n    location,\r\n    salary\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(BASE_URL + \"/api/job\", body, config);\r\n\r\n    dispatch({\r\n      type: JOB_ADD_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    return 1;\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_ADD_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteJob = id => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    id\r\n  });\r\n  try {\r\n    const res = await axios.post(BASE_URL + \"/api/job/delete\", body, config);\r\n\r\n    dispatch({\r\n      type: JOB_DELETE_SUCCESS\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: JOB_DELETE_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateJob = (\r\n  id,\r\n  company_name,\r\n  url,\r\n  profile,\r\n  job_title,\r\n  salary,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    id,\r\n    company_name,\r\n    url,\r\n    profile,\r\n    job_title,\r\n    salary\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(BASE_URL + \"/api/job/edit\", body, config);\r\n\r\n    dispatch({\r\n      type: JOB_UPDATE_SUCCESS\r\n    });\r\n\r\n    history.push(\"/admin_job_list/\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_UPDATE_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n//update lead\r\n\r\nexport const updateLead = (\r\n  id,\r\n  profile,\r\n  job_title,\r\n  salary,\r\n  source,\r\n  email,\r\n  website,\r\n  client_name,\r\n  phone_number,\r\n  call_time,\r\n  time_zone,\r\n  call_date,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    id,\r\n    profile,\r\n    job_title,\r\n    salary,\r\n    source,\r\n    email,\r\n    website,\r\n    client_name,\r\n    phone_number,\r\n    call_time,\r\n    time_zone,\r\n    call_date\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(BASE_URL + \"/api/job/lead/edit\", body, config);\r\n\r\n    dispatch({\r\n      type: LEAD_UPDATE_SUCCESS\r\n    });\r\n\r\n    history.push(\"/leads_list/\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: LEAD_UPDATE_FAIL\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport HowToReg from \"@material-ui/icons/HowToReg\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addJob } from \"../../actions/job\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager\r\n} from \"react-notifications\";\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid 6c697859\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    width: \"58%\"\r\n  },\r\n  compExist: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid 6c697859\",\r\n    boxShadow: theme.shadows[5],\r\n\r\n    width: \"41%\",\r\n    float: \"right\",\r\n    marginTop: \"-481px\"\r\n  },\r\n  button: {\r\n    position: \"relative\"\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: 200\r\n    }\r\n  },\r\n  h1: {\r\n    fontSize: \"25px\",\r\n    fontFamily: \"auto\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: \"31\"\r\n  },\r\n  buttonform: {\r\n    marginTop: \"5%\",\r\n    width: \"100%\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    margin: \" 0 auto\"\r\n  },\r\n  typography: {\r\n    fontFamily: \"initial\",\r\n    fontSize: \"25px\",\r\n    position: \"relative\",\r\n    left: \"260px\"\r\n  },\r\n  error1: {\r\n    position: \"absolute\",\r\n    right: \"777px\",\r\n    top: \"226px\",\r\n    color: \"red\"\r\n  },\r\n  error2: {\r\n    position: \"absolute\",\r\n    top: \"227px\",\r\n    color: \"red\"\r\n  },\r\n  profile: {\r\n    marginTop: \"24px\"\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n    fontSize: \"20px\",\r\n    color: \"red\"\r\n  }\r\n}));\r\n\r\nconst AddJob = ({ addJob, history, job, count }) => {\r\n  const [dailyJob, setDailyJob] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    job_title: null,\r\n    profile: null,\r\n    location: null,\r\n    salary: null,\r\n    company_name: null,\r\n    url: null\r\n  });\r\n\r\n  const [exist, setExist] = useState(\"\");\r\n  const [existComp, setExistComp] = useState(\"\");\r\n  const [compExist, setCompExist] = useState([]);\r\n\r\n  const { company_name, job_title, url, profile, location, salary } = formData;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onChangeHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const selectHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      profile: e.target.value\r\n    });\r\n  };\r\n\r\n  const searchHandler = e => {\r\n    if (e.target.value) {\r\n      setFormData({\r\n        ...formData,\r\n        company_name: e.target.value\r\n      });\r\n      const exist = job.filter(item => {\r\n        return item.companyName.toLowerCase() == e.target.value.toLowerCase();\r\n      });\r\n\r\n      if (exist.length > 0) {\r\n        setExistComp(\"Company Name Already Exist\");\r\n        setCompExist(exist);\r\n      } else {\r\n        setCompExist([]);\r\n        setExistComp(\"\");\r\n      }\r\n    } else {\r\n      setCompExist([]);\r\n      setExistComp(\"\");\r\n    }\r\n  };\r\n\r\n  const searchHandlerUrl = e => {\r\n    if (e.target.value) {\r\n      setFormData({\r\n        ...formData,\r\n        url: e.target.value\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    addJob(company_name, job_title, url, profile, location, salary, history);\r\n    count(company_name, job_title, url);\r\n  };\r\n\r\n  console.log(compExist, \"eeeeeeee\");\r\n  return (\r\n    <div>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <HowToReg />\r\n        </Avatar>\r\n        <Typography\r\n          className={classes.typography}\r\n          align=\"center\"\r\n          variant=\"headline\"\r\n        >\r\n          Add new Job\r\n        </Typography>\r\n\r\n        <form onSubmit={onSubmitHandler} noValidate autoComplete=\"off\">\r\n          <div className=\"form-group\">\r\n            <label for=\"company_name\">Company Name:</label>\r\n            <input\r\n              autoFocus\r\n              id=\"company_name\"\r\n              onChange={searchHandler}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"job_title\">Job Title:</label>\r\n            <input\r\n              id=\"job_title\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              onChange={onChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"url\">URL:</label>\r\n            <input\r\n              id=\"url\"\r\n              type=\"text\"\r\n              name=\"url\"\r\n              onChange={searchHandlerUrl}\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"location\">Location:</label>\r\n            <input\r\n              id=\"location\"\r\n              type=\"text\"\r\n              name=\"location\"\r\n              onChange={onChangeHandler}\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Add Job\r\n          </button>\r\n        </form>\r\n        {/* <form onSubmit={onSubmitHandler} noValidate autoComplete=\"off\">\r\n          <span className={classes.error2}>{existComp}</span>\r\n          <TextField\r\n            autoFocus\r\n            id=\"company_name\"\r\n            label=\"Company Name\"\r\n            margin=\"normal\"\r\n            onChange={searchHandler}\r\n          />\r\n          <TextField\r\n            id=\"job_title\"\r\n            label=\"Job Title\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            onChange={onChangeHandler}\r\n          />\r\n          <TextField\r\n            id=\"url\"\r\n            label=\"URL\"\r\n            type=\"text\"\r\n            name=\"url\"\r\n            margin=\"normal\"\r\n            onChange={searchHandlerUrl}\r\n          />\r\n          <span className={classes.error1}>{exist}</span>\r\n          <br></br>\r\n          <TextField\r\n            id=\"location\"\r\n            label=\"Location\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            onChange={onChangeHandler}\r\n          />\r\n          <TextField\r\n            id=\"salary\"\r\n            label=\"Salary\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            onChange={onChangeHandler}\r\n          />\r\n          <Button\r\n            className={classes.profile}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Add Job\r\n          </Button>\r\n        </form> */}\r\n      </div>\r\n      {compExist.length > 0 ? (\r\n        <div className={classes.compExist}>\r\n          <h1 className={classes.header}>Job Alredy Exist</h1>\r\n          <ul style={{ listStyleType: \"none\", textAlign: \"left\", margin: \"0\" }}>\r\n            {compExist.map((comp, index) => {\r\n              return (\r\n                <Fragment>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}>Company Name:</b>\r\n                    <span>{comp.companyName}</span>\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}>URL:</b>\r\n                    <span>{comp.url}</span>\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}>Job Title:</b>\r\n                    <span>{comp.job_title}</span>\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}>Profile:</b>{\" \"}\r\n                    <span>{comp.profile}</span>\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}> CreateAt:</b>\r\n                    <span>{comp.createdAt}</span>\r\n                  </li>\r\n                  <hr></hr>\r\n                </Fragment>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nAddJob.propTypes = {\r\n  addJob: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addJob })(withRouter(AddJob));\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport AddJob from \"./AddJob\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { fetchJob } from \"../../actions/job\";\r\nimport axios from \"axios\";\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst columns = [\r\n  { id: \"name\", label: \"Company Name\", minWidth: 170 },\r\n  { id: \"code\", label: \"Job Title\", minWidth: 100, align: \"center\" },\r\n  { id: \"code\", label: \"URL\", minWidth: 100, align: \"center\" },\r\n  {\r\n    id: \"population\",\r\n    label: \"Profile\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"size\",\r\n    label: \"Location\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n\r\n  {\r\n    id: \"density\",\r\n    label: \"Status\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toFixed(2)\r\n  },\r\n  {\r\n    id: \"density\",\r\n    label: \"Applied Date\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toFixed(2)\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  tableWrapper: {\r\n    overflow: \"auto\"\r\n  },\r\n  jobHeader: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"initial\",\r\n    color: \"blue\"\r\n  }\r\n});\r\nconst jobList = ({ fetchJob, job }) => {\r\n  const alert = useAlert();\r\n  const [dailyJob, setDailyJob] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchJob();\r\n    axios.get(BASE_URL + \"/api/job/user_daily_job_created\").then(res => {\r\n      setDailyJob(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  console.log(dailyJob, \"dailyyyyyyyy\");\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const countAdd = (company_name, job_title, url) => {\r\n    if (company_name && url) {\r\n      alert.success(\"Job Successfully Added !\");\r\n    }\r\n    setCount(count + 1);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <AddJob job={job} count={countAdd} />\r\n      <div className={classes.tableWrapper}>\r\n        <h1 className={classes.jobHeader}>Job List</h1>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {dailyJob\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => {\r\n                return (\r\n                  <TableRow\r\n                    className={\r\n                      row.status === \"job\"\r\n                        ? classes.job\r\n                        : row.status === \"lead\"\r\n                        ? classes.lead\r\n                        : \"\"\r\n                    }\r\n                    key={row.id}\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.companyName}\r\n                    </TableCell>\r\n\r\n                    <TableCell align=\"right\">{row.job_title}</TableCell>\r\n                    <TableCell align=\"right\">{row.url}</TableCell>\r\n                    <TableCell align=\"right\">{row.profile}</TableCell>\r\n                    <TableCell align=\"right\">{row.location}</TableCell>\r\n\r\n                    <TableCell align=\"right\">{row.status}</TableCell>\r\n                    <TableCell align=\"right\">{row.createdAt}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={dailyJob.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"previous page\"\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"next page\"\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  job: state.JobReducer.job\r\n});\r\njobList.propTypes = {\r\n  fetchJob: PropTypes.func.isRequired,\r\n  job: PropTypes.array.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchJob })(jobList);\r\n","export class CsvDataService {\r\n  static exportToCsv(filename, rows) {\r\n    if (!rows || !rows.length) {\r\n      return;\r\n    }\r\n    const separator = \",\";\r\n    const keys = Object.keys(rows[0]);\r\n    const csvContent =\r\n      keys.join(separator) +\r\n      \"\\n\" +\r\n      rows\r\n        .map(row => {\r\n          return keys\r\n            .map(k => {\r\n              let cell = row[k] === null || row[k] === undefined ? \"\" : row[k];\r\n              cell =\r\n                cell instanceof Date\r\n                  ? cell.toLocaleString()\r\n                  : cell.toString().replace(/\"/g, '\"\"');\r\n              if (cell.search(/(\"|,|\\n)/g) >= 0) {\r\n                cell = `\"${cell}\"`;\r\n              }\r\n              return cell;\r\n            })\r\n            .join(separator);\r\n        })\r\n        .join(\"\\n\");\r\n\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n    if (navigator.msSaveBlob) {\r\n      // IE 10+\r\n      navigator.msSaveBlob(blob, filename);\r\n    } else {\r\n      const link = document.createElement(\"a\");\r\n      if (link.download !== undefined) {\r\n        // Browsers that support HTML5 download attribute\r\n        const url = URL.createObjectURL(blob);\r\n        link.setAttribute(\"href\", url);\r\n        link.setAttribute(\"download\", filename);\r\n        link.style.visibility = \"hidden\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { CsvDataService } from \"./exportCsv\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { fetchJob } from \"../../actions/job\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteJob } from \"../../actions/job\";\r\nimport { useAlert } from \"react-alert\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Username\"\r\n  },\r\n  {\r\n    id: \"calories\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Company Name\"\r\n  },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"URL\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Status\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Action\" }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={order}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\"\r\n  }\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, deleteJob, exportData } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Job List\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Fragment>\r\n          <Tooltip title=\"Delete\" onClick={deleteJob}>\r\n            <IconButton aria-label=\"delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Export\" onClick={exportData}>\r\n            <IconButton aria-label=\"export\">\r\n              <GetAppIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Fragment>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  deleteJob: PropTypes.func.isRequired,\r\n  exportData: PropTypes.func.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 750\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1\r\n  },\r\n  textField: {\r\n    marginTop: \"12px\",\r\n    marginRight: \"22px\",\r\n    width: \"100%\"\r\n  },\r\n  job: {\r\n    backgroundColor: \"white\",\r\n    fontFamily: \"monospace\"\r\n  },\r\n  lead: {\r\n    backgroundColor: \"#008000bf\",\r\n    fontFamily: \"monospace\"\r\n  }\r\n}));\r\n\r\nconst adminjobList = ({ deleteJob, history }) => {\r\n  const alert = useAlert();\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"calories\");\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [dense, setDense] = useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [match, setMatch] = useState(\"Search\");\r\n  const [count, setCount] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [job, setJob] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(BASE_URL + \"/api/job\").then(res => {\r\n      setJob(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isDesc = orderBy === property && order === \"desc\";\r\n    setOrder(isDesc ? \"asc\" : \"desc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = job.map(n => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    var confirm = window.confirm(\"Do you want to Delete this Items ?\");\r\n    if (confirm == true) {\r\n      const filteredItems = job.filter(item => !selected.includes(item.id));\r\n      setJob(filteredItems);\r\n      deleteJob(selected);\r\n      alert.success(\"Job Successfully Deleted !\");\r\n    }\r\n  };\r\n\r\n  const ExportHandler = () => {\r\n    const exportItems = job.filter(item => selected.includes(item.id));\r\n    var download = [];\r\n\r\n    exportItems.forEach(user => {\r\n      download.push({\r\n        UserName: user.user.name,\r\n        CompanyName: user.companyName,\r\n        JobTitle: user.job_title,\r\n        URL: user.url,\r\n        Profile: user.profile,\r\n        Status: user.status\r\n      });\r\n    });\r\n\r\n    CsvDataService.exportToCsv(\"jobList.csv\", download);\r\n  };\r\n\r\n  const searchHandler = e => {\r\n    let lists = job;\r\n    console.log(\"search\", lists);\r\n    if (e.target.value) {\r\n      const newList = lists.filter(item => {\r\n        const list = item.companyName.toLowerCase();\r\n        const filter = e.target.value.toLowerCase();\r\n        return list.includes(filter);\r\n      });\r\n      if (newList.length > 0) {\r\n        console.log(\"in newlist\", lists);\r\n        setJob(newList);\r\n        setMatch(\"Match\");\r\n      } else {\r\n        setCount(count + 1);\r\n        setMatch(\"Does not Match\");\r\n      }\r\n    } else {\r\n      setCount(count + 1);\r\n      setMatch(\"Search\");\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      status: e.target.value\r\n    });\r\n    try {\r\n      const res = axios\r\n        .post(BASE_URL + \"/api/job/changed_staus\", body, config)\r\n        .then(response => {\r\n          alert.success(\"Job Status Changed !\");\r\n          setCount(count + 1);\r\n          setSelected(\"\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const isSelected = id => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, job.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"search\"\r\n        label={match}\r\n        margin=\"normal\"\r\n        type=\"text\"\r\n        className={classes.textField}\r\n        placeholder=\"Search by Company Name ....\"\r\n        onChange={searchHandler}\r\n      />\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          deleteJob={handleDelete}\r\n          exportData={ExportHandler}\r\n        />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={job.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(job, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      onClick={event => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                      className={\r\n                        row.status == \"job\"\r\n                          ? classes.job\r\n                          : row.status === \"lead\"\r\n                          ? classes.lead\r\n                          : \" \"\r\n                      }\r\n                      key={row.id}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.jobId.name}\r\n                      </TableCell>\r\n                      <TableCell>{row.companyName}</TableCell>\r\n                      <TableCell>{row.url}</TableCell>\r\n                      <TableCell>\r\n                        <Select\r\n                          labelId=\"demo-controlled-open-select-label\"\r\n                          name={row.id}\r\n                          key={index}\r\n                          onClose={handleClose}\r\n                          onOpen={handleOpen}\r\n                          value={row.status}\r\n                          onChange={handleChange}\r\n                        >\r\n                          <MenuItem value=\"\"></MenuItem>\r\n                          <MenuItem value=\"job\">Job</MenuItem>\r\n                          <MenuItem value=\"lead\">Lead</MenuItem>\r\n                        </Select>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <IconButton aria-label=\"edit\">\r\n                          <EditIcon\r\n                            fontSize=\"large\"\r\n                            onClick={() =>\r\n                              history.push({\r\n                                pathname: \"/job_edit\",\r\n                                state: { detail: row }\r\n                              })\r\n                            }\r\n                          />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={job.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  job: state.JobReducer.job\r\n});\r\nadminjobList.propTypes = {\r\n  fetchJob: PropTypes.func,\r\n  deleteJob: PropTypes.func.isRequired,\r\n  fetchUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchJob, deleteJob })(adminjobList);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport compose from \"recompose/compose\";\r\nimport { updateJob } from \"../../actions/job\";\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"65%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"45%\"\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: \"300px\",\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    marginTop: \"5%\"\r\n  }\r\n});\r\n\r\nconst editJob = ({ classes, children, history, location, updateJob }) => {\r\n  const [formData, setFormData] = useState(location.state.detail);\r\n\r\n  const { id, companyName, url, profile, job_title, salary } = formData;\r\n  const onChangeHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    updateJob(id, companyName, url, profile, job_title, salary, history);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <IconButton aria-label=\"edit\">\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              onClick={() => history.push(\"/admin_job_list/\")}\r\n            />\r\n          </IconButton>\r\n          <Avatar className={classes.avatar}>\r\n            <Edit />\r\n          </Avatar>\r\n\r\n          <Typography align=\"center\" variant=\"headline\">\r\n            Edit Job\r\n          </Typography>\r\n          <form onSubmit={onSubmitHandler}>\r\n            <TextField\r\n              id=\"companyName\"\r\n              label=\"Company Name\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.companyName}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"job_title\"\r\n              label=\"Job Title\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.job_title}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"url\"\r\n              label=\"Url\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.url}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"profile\"\r\n              label=\"Profile\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.profile}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"salary\"\r\n              label=\"Salary\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.salary}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Update Job\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\neditJob.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  updateJob: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(null, { updateJob })\r\n)(editJob);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  text: {\r\n    padding: \"28px\",\r\n    fontFamily: \"initial\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n\r\nexport default function salesDetail() {\r\n  const [data, SetData] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    axios.get(BASE_URL + \"/api/job/count\").then(res => {\r\n      SetData(res.data.result);\r\n    });\r\n  }, []);\r\n  if (data.length > 0) {\r\n    var Total = data.reduce(\r\n      (prev, cur) => parseInt(prev) + parseInt(cur.count),\r\n      0\r\n    );\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.center}>Daily Applied Job Details</h1>\r\n      <span className={classes.text}>Total Applied Job:</span>\r\n      <Badge badgeContent={Total} color=\"secondary\"></Badge>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Registration Number</TableCell>\r\n            <TableCell>Job Applied</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                User\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.userId}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Badge badgeContent={row.count} color=\"primary\"></Badge>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"../actions/alert\";\r\n\r\nimport {\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAIL,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_MONTHLY_DETAILS_SUCCESS,\r\n  USER_MONTHLY_DETAILS_FAIL,\r\n  USER_WEEKLY_DETAILS_SUCCESS,\r\n  USER_WEEKLY_DETAILS_FAIL\r\n} from \"../actions/types\";\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nexport const fetchUser = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(BASE_URL + \"/api/user\");\r\n\r\n    dispatch({\r\n      type: FETCH_USER_SUCCESS,\r\n      payload: res.data.result\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_USER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(BASE_URL + `/api/user/${id}`);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (\r\n  registration_number,\r\n  name,\r\n  designation,\r\n  id,\r\n  role,\r\n  profile,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    registration_number,\r\n    name,\r\n    designation,\r\n    id,\r\n    role,\r\n    profile\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(BASE_URL + \"/api/user/edit\", body, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS\r\n    });\r\n    history.push(\"/user_list/\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const userDetails = (registration_number, role) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    registration_number,\r\n    role\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(BASE_URL + \"/api/user/details\", body, config);\r\n\r\n    dispatch({\r\n      type: USER_WEEKLY_DETAILS_SUCCESS,\r\n      payload: res.data.result\r\n    });\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_WEEKLY_DETAILS_FAIL\r\n    });\r\n  }\r\n\r\n  //\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      BASE_URL + \"/api/user/monthly_details\",\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_MONTHLY_DETAILS_SUCCESS,\r\n      payload: res.data.result\r\n    });\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_MONTHLY_DETAILS_FAIL\r\n    });\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport AddJob from \"./AddJob\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser } from \"../../actions/user\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { deleteUser } from \"../../actions/user\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Registration Number\",\r\n    minWidth: 100,\r\n\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Name\",\r\n    minWidth: 100,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Designation\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Role\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Created At\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Action\",\r\n    label: \"Action\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  tableWrapper: {\r\n    maxHeight: 622,\r\n    overflow: \"auto\"\r\n  },\r\n  jobHeader: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"initial\",\r\n    color: \"blue\"\r\n  },\r\n  delete: {\r\n    backgroundColor: \"red,\"\r\n  }\r\n});\r\n\r\nconst userList = ({ fetchUser, users, deleteUser, history }) => {\r\n  //const alert = useAlert();\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [count]);\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const userDelete = id => {\r\n    deleteUser(id);\r\n    setCount(count + 1);\r\n    alert.success(\"User Deleted !\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.jobHeader}>User List</h1>\r\n      <div className={classes.tableWrapper}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => {\r\n                return (\r\n                  <TableRow hover key={row.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.registrationNumber}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{row.designation}</TableCell>\r\n                    <TableCell align=\"right\">{row.role}</TableCell>\r\n                    <TableCell align=\"right\">{row.createdAt}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon\r\n                          fontSize=\"large\"\r\n                          onClick={() => userDelete(row.registrationNumber)}\r\n                        />\r\n                      </IconButton>\r\n\r\n                      <IconButton aria-label=\"edit\">\r\n                        <EditIcon\r\n                          fontSize=\"large\"\r\n                          onClick={() =>\r\n                            history.push({\r\n                              pathname: \"/edit\",\r\n                              state: { detail: row }\r\n                            })\r\n                          }\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={users.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"previous page\"\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"next page\"\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.userReducer.users\r\n});\r\nuserList.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n  users: PropTypes.array.isRequired,\r\n  deleteUser: PropTypes.func.isRequired\r\n};\r\n//\r\nexport default connect(mapStateToProps, { fetchUser, deleteUser })(userList);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { updateUser } from \"../../actions/user\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport compose from \"recompose/compose\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"65%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"45%\"\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: \"300px\",\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    marginTop: \"5%\"\r\n  }\r\n});\r\n\r\nconst editUser = ({ classes, children, history, location, updateUser }) => {\r\n  //const alert = useAlert();\r\n  const [formData, setFormData] = useState(location.state.detail);\r\n  const [open, setOpen] = useState(false);\r\n  const { registrationNumber, name, designation, id } = formData;\r\n  const [role, setRole] = useState(formData.role);\r\n  const [profile, setProfile] = useState(formData.profile);\r\n  const onChangeHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    updateUser(\r\n      registrationNumber,\r\n      name,\r\n      designation,\r\n      id,\r\n      role,\r\n      profile,\r\n      history\r\n    );\r\n    alert.success(\"User Updated !\");\r\n  };\r\n\r\n  const roleHandler = e => {\r\n    console.log(\"roleHandler ::::::::::::: \", e.target.value);\r\n    setRole(e.target.value);\r\n  };\r\n\r\n  const profileHandler = e => {\r\n    setProfile(e.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <IconButton aria-label=\"edit\">\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              onClick={() => history.push(\"/user_list/\")}\r\n            />\r\n          </IconButton>\r\n          <Avatar className={classes.avatar}>\r\n            <Edit />\r\n          </Avatar>\r\n\r\n          <Typography align=\"center\" variant=\"headline\">\r\n            Edit User\r\n          </Typography>\r\n          <form onSubmit={onSubmitHandler}>\r\n            <TextField\r\n              disabled\r\n              id=\"registrationNumber\"\r\n              label=\"Registration Number\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.registrationNumber}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.name}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"designation\"\r\n              label=\"Designation\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.designation}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <InputLabel id=\"demo-controlled-open-select-label\">Role</InputLabel>\r\n            <Select\r\n              // open={open}\r\n              // onClose={handleClose}\r\n              // onOpen={handleOpen}\r\n              onChange={roleHandler}\r\n              className={classes.textField}\r\n              value={role}\r\n            >\r\n              <MenuItem value=\"None\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"super_admin\">Super Admin</MenuItem>\r\n              <MenuItem value=\"admin\">Admin</MenuItem>\r\n              <MenuItem value=\"user\">User</MenuItem>\r\n            </Select>\r\n\r\n            <InputLabel id=\"demo-controlled-open-select-label\">\r\n              Profile\r\n            </InputLabel>\r\n            <Select\r\n              // open={open}\r\n              // onClose={handleClose}\r\n              // onOpen={handleOpen}\r\n              onChange={profileHandler}\r\n              className={classes.textField}\r\n              value={profile}\r\n            >\r\n              <MenuItem value=\"None\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"Ali Muhammad\">Ali Muhammad</MenuItem>\r\n              <MenuItem value=\"Amir Khan\">Amir Khan</MenuItem>\r\n              <MenuItem value=\"Kevan Jay\">Kevn Jay</MenuItem>\r\n            </Select>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Update User\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\neditUser.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  updateUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(null, { updateUser })\r\n)(editUser);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { CsvDataService } from \"../exportCsv\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { fetchJob } from \"../../../actions/job\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteJob } from \"../../../actions/job\";\r\nimport { useAlert } from \"react-alert\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { fetchUser } from \"../../../actions/user\";\r\nimport { Document, Page } from \"react-pdf\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Client Name\"\r\n  },\r\n  {\r\n    id: \"calories\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Company Name\"\r\n  },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Job Title\" },\r\n\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Assigned To\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Status\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Call\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Action\" }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={order}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\"\r\n  }\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, deleteJob, exportData } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Job List\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Fragment>\r\n          <Tooltip title=\"Delete\" onClick={deleteJob}>\r\n            <IconButton aria-label=\"delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Export\" onClick={exportData}>\r\n            <IconButton aria-label=\"export\">\r\n              <GetAppIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Fragment>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  deleteJob: PropTypes.func.isRequired,\r\n  exportData: PropTypes.func.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 750\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1\r\n  },\r\n  textField: {\r\n    marginTop: \"12px\",\r\n    marginRight: \"22px\",\r\n    width: \"100%\"\r\n  },\r\n  job: {\r\n    backgroundColor: \"#818675\",\r\n    fontFamily: \"monospace\"\r\n  },\r\n  lead: {\r\n    backgroundColor: \"#008000bf\",\r\n    fontFamily: \"monospace\"\r\n  }\r\n}));\r\n\r\nconst adminjobList = ({ deleteJob, history, fetchUser, users }) => {\r\n  const alert = useAlert();\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"calories\");\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [dense, setDense] = useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [match, setMatch] = useState(\"Search\");\r\n  const [count, setCount] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [job, setJob] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(BASE_URL + \"/api/job/leads\").then(res => {\r\n      setJob(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isDesc = orderBy === property && order === \"desc\";\r\n    setOrder(isDesc ? \"asc\" : \"desc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = job.map(n => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    var confirm = window.confirm(\"Do you want to Delete this Items ?\");\r\n    if (confirm == true) {\r\n      const filteredItems = job.filter(item => !selected.includes(item.id));\r\n      setJob(filteredItems);\r\n      deleteJob(selected);\r\n      alert.success(\"Job Successfully Deleted !\");\r\n    }\r\n  };\r\n\r\n  const ExportHandler = () => {\r\n    const exportItems = job.filter(item => selected.includes(item.id));\r\n    var download = [];\r\n\r\n    exportItems.forEach(user => {\r\n      download.push({\r\n        UserName: user.user.name,\r\n        CompanyName: user.companyName,\r\n        JobTitle: user.job_title,\r\n        URL: user.url,\r\n        Profile: user.profile,\r\n        Status: user.status\r\n      });\r\n    });\r\n\r\n    CsvDataService.exportToCsv(\"jobList.csv\", download);\r\n  };\r\n\r\n  const searchHandler = e => {\r\n    let lists = job;\r\n    console.log(\"search\", lists);\r\n    if (e.target.value) {\r\n      const newList = lists.filter(item => {\r\n        const list = item.companyName.toLowerCase();\r\n        const filter = e.target.value.toLowerCase();\r\n        return list.includes(filter);\r\n      });\r\n      if (newList.length > 0) {\r\n        console.log(\"in newlist\", lists);\r\n        setJob(newList);\r\n        setMatch(\"Match\");\r\n      } else {\r\n        setCount(count + 1);\r\n        setMatch(\"Does not Match\");\r\n      }\r\n    } else {\r\n      setCount(count + 1);\r\n      setMatch(\"Search\");\r\n    }\r\n  };\r\n\r\n  const assigToHandler = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      assignTo: e.target.value\r\n    });\r\n\r\n    try {\r\n      const res = axios\r\n        .post(BASE_URL + \"/api/job/assign_to\", body, config)\r\n        .then(response => {\r\n          alert.success(\"Successfully Assigned !\");\r\n          setCount(count + 1);\r\n          setSelected(\"\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const callHandleChange = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      call_status: e.target.value\r\n    });\r\n    try {\r\n      const res = axios\r\n        .post(BASE_URL + \"/api/job/call_status\", body, config)\r\n        .then(response => {\r\n          alert.success(\"Call Status Changed !\");\r\n          setCount(count + 1);\r\n          setSelected(\"\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      status: e.target.value\r\n    });\r\n    try {\r\n      const res = axios\r\n        .post(BASE_URL + \"/api/job/changed_staus\", body, config)\r\n        .then(response => {\r\n          alert.success(\"Job Status Changed !\");\r\n          setCount(count + 1);\r\n          setSelected(\"\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const isSelected = id => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, job.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"search\"\r\n        label={match}\r\n        margin=\"normal\"\r\n        type=\"text\"\r\n        className={classes.textField}\r\n        placeholder=\"Search by Company Name ....\"\r\n        onChange={searchHandler}\r\n      />\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          deleteJob={handleDelete}\r\n          exportData={ExportHandler}\r\n        />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={job.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(job, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                      key={row.id}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                        onClick={() =>\r\n                          history.push({\r\n                            pathname: \"/lead_details\",\r\n                            state: { detail: row }\r\n                          })\r\n                        }\r\n                      >\r\n                        {row.client_name}\r\n                      </TableCell>\r\n                      <TableCell>{row.companyName}</TableCell>\r\n                      <TableCell>{row.job_title}</TableCell>\r\n\r\n                      <TableCell>\r\n                        <Select\r\n                          labelId=\"demo-controlled-open-select-label\"\r\n                          name={row.id}\r\n                          value={row.assignTo}\r\n                          key={index}\r\n                          onClose={handleClose}\r\n                          onOpen={handleOpen}\r\n                          onChange={assigToHandler}\r\n                        >\r\n                          <MenuItem value=\"\"></MenuItem>\r\n                          {users.map(user => {\r\n                            {\r\n                              return (\r\n                                <MenuItem value={user.registrationNumber}>\r\n                                  {user.name}\r\n                                </MenuItem>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </Select>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Select\r\n                          labelId=\"demo-controlled-open-select-label\"\r\n                          name={row.id}\r\n                          key={index}\r\n                          value={row.status}\r\n                          onClose={handleClose}\r\n                          onOpen={handleOpen}\r\n                          onChange={handleChange}\r\n                        >\r\n                          <MenuItem value=\"\"></MenuItem>\r\n                          <MenuItem value=\"job\">Job</MenuItem>\r\n                          <MenuItem value=\"lead\">Lead</MenuItem>\r\n                          <MenuItem value=\"good_lead\">Good Lead</MenuItem>\r\n                          <MenuItem value=\"hot\">Hot</MenuItem>\r\n                          <MenuItem value=\"rejected\">Rejected</MenuItem>\r\n                          <MenuItem value=\"closed\">Closed</MenuItem>\r\n                        </Select>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Select\r\n                          labelId=\"demo-controlled-open-select-label\"\r\n                          name={row.id}\r\n                          key={index}\r\n                          value={row.call_status}\r\n                          onClose={handleClose}\r\n                          onOpen={handleOpen}\r\n                          onChange={callHandleChange}\r\n                        >\r\n                          <MenuItem value=\"\"></MenuItem>\r\n                          <MenuItem value=\"first_interview\">\r\n                            First Interview\r\n                          </MenuItem>\r\n                          <MenuItem value=\"technical_interview\">\r\n                            Technical Interview\r\n                          </MenuItem>\r\n                          <MenuItem value=\"follow_up\">Follow Up</MenuItem>\r\n                        </Select>\r\n                      </TableCell>\r\n\r\n                      <TableCell>\r\n                        <IconButton aria-label=\"edit\">\r\n                          <EditIcon\r\n                            fontSize=\"large\"\r\n                            onClick={() =>\r\n                              history.push({\r\n                                pathname: \"/lead_edit\",\r\n                                state: { detail: row }\r\n                              })\r\n                            }\r\n                          />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={job.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  users: state.userReducer.users\r\n});\r\nadminjobList.propTypes = {\r\n  deleteJob: PropTypes.func.isRequired,\r\n  fetchUser: PropTypes.func.isRequired,\r\n  users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteJob, fetchUser })(adminjobList);\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport StarIcon from \"@material-ui/icons/StarBorder\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Pdf from \"react-to-pdf\";\r\nconst ref = React.createRef();\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0\r\n    },\r\n    li: {\r\n      listStyle: \"none\"\r\n    }\r\n  },\r\n  appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`\r\n  },\r\n  toolbar: {\r\n    flexWrap: \"wrap\"\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5)\r\n  },\r\n  heroContent: {\r\n    padding: theme.spacing(8, 0, 6)\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.palette.grey[700]\r\n        : theme.palette.grey[200]\r\n  },\r\n  cardPricing: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"baseline\",\r\n    marginBottom: theme.spacing(2),\r\n    fontSize: \"2rem\"\r\n  },\r\n  card: {\r\n    maxWidth: \"623px\",\r\n    margin: \"0 auto\"\r\n  },\r\n  cardHeader1: {\r\n    border: \"2px solid #000\",\r\n    marginBottom: \"23px\",\r\n    padding: \"10px\"\r\n  },\r\n  cardBody1: {\r\n    border: \"1px solid #000\"\r\n  },\r\n  cardContentRight: {\r\n    padding: \"20px\",\r\n    borderRight: \"1px solid\"\r\n  },\r\n  cardContentLeft: {\r\n    padding: \"20px\"\r\n  },\r\n  cardContentInner: {\r\n    marginBottom: \"8px\"\r\n  }\r\n}));\r\n\r\nconst Pricing = ({ history, location }) => {\r\n  const classes = useStyles();\r\n\r\n  const [formData, setFormData] = React.useState(location.state.detail);\r\n  return (\r\n    <React.Fragment>\r\n      <div class=\"container\">\r\n        <Pdf targetRef={ref} filename=\"code-example.pdf\">\r\n          {({ toPdf }) => <button onClick={toPdf}>Generate Pdf</button>}\r\n        </Pdf>\r\n        <div class=\"card\" className={classes.card} ref={ref}>\r\n          <div class=\"card-header\" className={classes.cardHeader1}>\r\n            <strong>Appllied at :</strong>\r\n            {formData.createdAt}\r\n\r\n            <span class=\"float-right\">\r\n              <strong>Status:</strong> {formData.status}\r\n            </span>\r\n          </div>\r\n          <div class=\"card-body\" className={classes.cardBody1}>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <div className={classes.cardContentRight}>\r\n                  <div className={classes.cardContentInner}>\r\n                    <strong>Name :</strong>\r\n                    {formData.client_name}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Company Name :</b>\r\n                    {formData.companyName}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Location :</b>\r\n                    {formData.location}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Email:</b> {formData.email}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Website:</b> {formData.website}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-sm-6\">\r\n                <div className={classes.cardContentLeft}>\r\n                  <div className={classes.cardContentInner}>\r\n                    <strong>Phone Number:</strong>\r\n                    {formData.phone_number}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <strong>Call Time:</strong>\r\n                    {formData.call_time}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Time Zone:</b>\r\n                    {formData.time_zone}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Call Status:</b>\r\n                    {formData.call_status}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Lead Status:</b>\r\n                    {formData.lead_status}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Pricing;\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport compose from \"recompose/compose\";\r\nimport { updateLead } from \"../../../actions/job\";\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"65%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"45%\"\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: \"300px\",\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n\r\n  button: {\r\n    width: \"100%\",\r\n    marginTop: \"5%\"\r\n  }\r\n});\r\n\r\nconst editLead = ({ classes, children, history, location, updateLead }) => {\r\n  const [formData, setFormData] = useState(location.state.detail);\r\n\r\n  const {\r\n    id,\r\n    profile,\r\n    job_title,\r\n    salary,\r\n    source,\r\n    email,\r\n    website,\r\n    client_name,\r\n    phone_number,\r\n    call_time,\r\n    time_zone,\r\n    call_date\r\n  } = formData;\r\n  const onChangeHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    updateLead(\r\n      id,\r\n      profile,\r\n      job_title,\r\n      salary,\r\n      source,\r\n      email,\r\n      website,\r\n      client_name,\r\n      phone_number,\r\n      call_time,\r\n      time_zone,\r\n      call_date,\r\n      history\r\n    );\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <IconButton aria-label=\"edit\">\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              onClick={() => history.push(\"/leads_list/\")}\r\n            />\r\n          </IconButton>\r\n          <Avatar className={classes.avatar}>\r\n            <Edit />\r\n          </Avatar>\r\n\r\n          <Typography align=\"center\" variant=\"headline\">\r\n            Edit Lead\r\n          </Typography>\r\n          <form onSubmit={onSubmitHandler}>\r\n            <TextField\r\n              id=\"job_title\"\r\n              label=\"Job Title\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.job_title}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <TextField\r\n              id=\"profile\"\r\n              label=\"Profile\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.profile}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"salary\"\r\n              label=\"Salary\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.salary}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"client_name\"\r\n              label=\"Client Name\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              placeholder=\"enter client name\"\r\n              className={classes.textField}\r\n              value={formData.client_name}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"source\"\r\n              label=\"Source\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              placeholder=\"enter source\"\r\n              className={classes.textField}\r\n              value={formData.source}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              placeholder=\"enter @mail\"\r\n              className={classes.textField}\r\n              value={formData.email}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"website\"\r\n              label=\"Website\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.website}\r\n              placeholder=\"enter website\"\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <TextField\r\n              id=\"phone_number\"\r\n              label=\"Phone Number\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.phone_number}\r\n              placeholder=\"enter phone number\"\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"call_time\"\r\n              label=\"Call Time\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.call_time}\r\n              placeholder=\"enter call time\"\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <TextField\r\n              id=\"time_zone\"\r\n              label=\"Time Zone\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.time_zone}\r\n              placeholder=\"enter time zone\"\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <TextField\r\n              id=\"call_date\"\r\n              margin=\"normal\"\r\n              type=\"date\"\r\n              className={classes.textField}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Update Lead\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\neditLead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  updateJob: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(null, { updateLead })\r\n)(editLead);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  text: {\r\n    padding: \"28px\",\r\n    fontFamily: \"initial\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n\r\nexport default function salesDetail({ history }) {\r\n  const [data, SetData] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const alert = useAlert();\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  useEffect(() => {\r\n    axios.get(BASE_URL + \"/api/job/my_leads\").then(res => {\r\n      SetData(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  const callHandleChange = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      lead_status: e.target.value\r\n    });\r\n    try {\r\n      const res = axios\r\n        .post(BASE_URL + \"/api/job/lead_status\", body, config)\r\n        .then(response => {\r\n          alert.success(\" Lead Status Changed !\");\r\n          setCount(count + 1);\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.center}>My Leads</h1>\r\n\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Company Name</TableCell>\r\n            <TableCell>Client Name</TableCell>\r\n            <TableCell>Profile</TableCell>\r\n            <TableCell>Call Date</TableCell>\r\n            <TableCell>Call Time</TableCell>\r\n            <TableCell>Time Zone</TableCell>\r\n            <TableCell>Call Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(row => (\r\n            <TableRow hover key={row.id}>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.companyName}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.client_name}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.profile}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.call_date}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.call_time}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.time_zone}\r\n              </TableCell>\r\n              <TableCell>\r\n                <Select\r\n                  labelId=\"demo-controlled-open-select-label\"\r\n                  name={row.id}\r\n                  value={row.lead_status}\r\n                  onClose={handleClose}\r\n                  onOpen={handleOpen}\r\n                  onChange={callHandleChange}\r\n                >\r\n                  <MenuItem value=\"\"></MenuItem>\r\n                  <MenuItem value=\"done\">Done</MenuItem>\r\n                  <MenuItem value=\"not done\">Not Done</MenuItem>\r\n                  <MenuItem value=\"Need to Rescedule\">\r\n                    Need To Reschedule\r\n                  </MenuItem>\r\n                </Select>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, Fragment, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  text: {\r\n    padding: \"28px\",\r\n    fontFamily: \"initial\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n\r\nexport default function salesDetail({ history }) {\r\n  const [data, SetData] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    axios.get(BASE_URL + \"/api/job/lead_scedule\").then(res => {\r\n      SetData(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.center}>Leads Scheduler</h1>\r\n\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Call Time</TableCell>\r\n            <TableCell>Time Zone</TableCell>\r\n            <TableCell>Call Date</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(row => (\r\n            <TableRow>\r\n              <TableCell>{row.leadId.name}</TableCell>\r\n              <TableCell>{row.call_time}</TableCell>\r\n              <TableCell>{row.time_zone}</TableCell>\r\n\r\n              <TableCell>{row.call_date}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser } from \"../../../actions/user\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { deleteUser } from \"../../../actions/user\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Registration Number\",\r\n    minWidth: 100,\r\n\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Name\",\r\n    minWidth: 100,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Designation\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Role\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  tableWrapper: {\r\n    maxHeight: 622,\r\n    overflow: \"auto\"\r\n  },\r\n  jobHeader: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"initial\",\r\n    color: \"blue\"\r\n  },\r\n  delete: {\r\n    backgroundColor: \"red,\"\r\n  }\r\n});\r\n\r\nconst userList = ({ fetchUser, users, history }) => {\r\n  //const alert = useAlert();\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [count]);\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.jobHeader}>User List</h1>\r\n      <div className={classes.tableWrapper}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    key={row.id}\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: \"/user_details\",\r\n                        state: { detail: row }\r\n                      })\r\n                    }\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.registrationNumber}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{row.designation}</TableCell>\r\n                    <TableCell align=\"right\">{row.role}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={users.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"previous page\"\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"next page\"\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.userReducer.users\r\n});\r\nuserList.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n  users: PropTypes.array.isRequired\r\n};\r\n//\r\nexport default connect(mapStateToProps, { fetchUser })(userList);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { userDetails } from \"../../../actions/user\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport compose from \"recompose/compose\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"65%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"45%\"\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: \"300px\",\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    marginTop: \"5%\"\r\n  },\r\n  list: {\r\n    margin: \"0px -139px\"\r\n  }\r\n});\r\n\r\nconst userDetail = ({\r\n  classes,\r\n  children,\r\n  history,\r\n  location,\r\n  userDetails,\r\n  weeklyuserData,\r\n  monthlyuserData\r\n}) => {\r\n  //const alert = useAlert();\r\n  const [formData, setFormData] = useState(location.state.detail);\r\n\r\n  useEffect(() => {\r\n    console.log(\"user Details\");\r\n    userDetails(formData.registrationNumber, formData.role);\r\n  });\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <IconButton aria-label=\"edit\">\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              onClick={() => history.push(\"/user_report/\")}\r\n            />\r\n          </IconButton>\r\n          <Avatar className={classes.avatar}>\r\n            <Edit />\r\n          </Avatar>\r\n\r\n          <Typography align=\"center\" variant=\"headline\">\r\n            User Details\r\n            <h2>{formData.name}</h2>\r\n            {formData.role == \"user\" ? (\r\n              <ul class=\"list-group\" className={classes.list}>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Role\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {formData.role}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Previous Week Applied Job\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {weeklyuserData}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Previous Month Applied Job\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {monthlyuserData}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            ) : (\r\n              <ul class=\"list-group\" className={classes.list}>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Role\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {formData.role}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Previous Week Calls\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {weeklyuserData}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Previous Month Calls\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {monthlyuserData}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            )}\r\n          </Typography>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nuserDetail.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  userDetails: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  weeklyuserData: state.userReducer.weeklyuserData,\r\n  monthlyuserData: state.userReducer.monthlyuserData\r\n});\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(mapStateToProps, { userDetails })\r\n)(userDetail);\r\n","import React, { Fragment } from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport createBrowserHistory from \"history/createBrowserHistory\";\r\n\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport LandingPage from \"../pages/LandingPage\";\r\nimport SignInPage from \"../pages/SignInPage\";\r\nimport SignUpPage from \"../pages/SignUpPage\";\r\nimport DashboardPage from \"../pages/DashboardPage\";\r\nimport AddPostPage from \"../pages/AddPostPage\";\r\nimport Alert from \"../pages/Alert\";\r\nimport JobList from \"../pages/sales/JobList\";\r\nimport AdminJobList from \"../pages/sales/adminJobList\";\r\nimport EditJob from \"../pages/sales/JobEdit\";\r\nimport SalesDetails from \"../pages/sales/salesDetail\";\r\nimport UserList from \"../pages/sales/UserList\";\r\nimport EditUser from \"../pages/sales/EditUser\";\r\nimport LeadsList from \"../pages/sales/leads/LeadList\";\r\nimport LeadDetails from \"../pages/sales/leads/LeadDetails\";\r\nimport EditLead from \"../pages/sales/leads/LeadEdit\";\r\nimport MyLeads from \"../pages/sales/leads/MyLead\";\r\nimport LeadSchedule from \"../pages/sales/leads/LeadCallList\";\r\nimport UserReport from \"../pages/sales/user/UserReport\";\r\nimport UserDetails from \"../pages/sales/user/UserDetails\";\r\nconst history = createBrowserHistory();\r\n\r\nexport default () => {\r\n  return (\r\n    <Fragment>\r\n      <Alert />\r\n      <Router history={history}>\r\n        <Switch>\r\n          <PublicRoute exact path=\"/\" component={SignInPage} />\r\n          <PublicRoute path=\"/signup\" component={SignUpPage} />\r\n          <PrivateRoute path=\"/dashboard\" component={DashboardPage} />\r\n          <PrivateRoute path=\"/addpost\" component={AddPostPage} />\r\n          <PrivateRoute path=\"/user_list\" component={UserList} />\r\n          <PrivateRoute path=\"/edit\" component={EditUser} />\r\n          <PrivateRoute path=\"/job_list\" component={JobList} />\r\n          <PrivateRoute path=\"/admin_job_list\" component={AdminJobList} />\r\n          <PrivateRoute path=\"/job_edit\" component={EditJob} />\r\n          <PrivateRoute path=\"/sales_daily_details\" component={SalesDetails} />\r\n          <PrivateRoute path=\"/leads_list\" component={LeadsList} />\r\n          <PrivateRoute path=\"/lead_details\" component={LeadDetails} />\r\n          <PrivateRoute path=\"/lead_edit\" component={EditLead} />\r\n          <PrivateRoute path=\"/my_leads\" component={MyLeads} />\r\n          <PrivateRoute path=\"/lead_scedule\" component={LeadSchedule} />\r\n          <PrivateRoute path=\"/user_report\" component={UserReport} />\r\n          <PrivateRoute path=\"/user_details\" component={UserDetails} />\r\n        </Switch>\r\n      </Router>\r\n    </Fragment>\r\n  );\r\n};\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGOUT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  user: [],\r\n  loading: true,\r\n  error: {},\r\n  isAuth: false\r\n};\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuth: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuth: false,\r\n        loading: false,\r\n        user: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAIL,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_MONTHLY_DETAILS_SUCCESS,\r\n  USER_MONTHLY_DETAILS_FAIL,\r\n  USER_WEEKLY_DETAILS_SUCCESS,\r\n  USER_WEEKLY_DETAILS_FAIL\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  monthlyuserData: [],\r\n  weeklyuserData: [],\r\n  error: {},\r\n  loading: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case USER_WEEKLY_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        weeklyuserData: payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case USER_MONTHLY_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        monthlyuserData: payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case USER_UPDATE_FAIL:\r\n    case USER_DELETE_FAIL:\r\n    case USER_MONTHLY_DETAILS_FAIL:\r\n    case USER_WEEKLY_DETAILS_FAIL:\r\n    case FETCH_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: true\r\n      };\r\n    case USER_UPDATE_SUCCESS:\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  JOB_ADD_SUCCESS,\r\n  JOB_ADD_FAIL,\r\n  FETCH_JOB_DATA_SUCCESS,\r\n  FETCH_JOB_DATA_FAIL,\r\n  JOB_DELETE_FAIL,\r\n  JOB_DELETE_SUCCESS,\r\n  JOB_UPDATE_SUCCESS,\r\n  JOB_UPDATE_FAIL,\r\n  LEAD_UPDATE_FAIL,\r\n  LEAD_UPDATE_SUCCESS\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  job: [],\r\n  error: {},\r\n  newjob: [],\r\n  loading: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case JOB_ADD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        newjob: null,\r\n        loading: false\r\n      };\r\n    case FETCH_JOB_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        job: payload,\r\n        loading: false\r\n      };\r\n    case LEAD_UPDATE_FAIL:\r\n    case JOB_UPDATE_FAIL:\r\n    case FETCH_JOB_DATA_FAIL:\r\n    case JOB_DELETE_FAIL:\r\n    case JOB_ADD_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: payload\r\n      };\r\n    case JOB_UPDATE_SUCCESS:\r\n    case LEAD_UPDATE_SUCCESS:\r\n    case JOB_DELETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport authReducer from \"../reducers/auth\";\r\nimport userReducer from \"../reducers/user\";\r\nimport alertReducer from \"../reducers/alert\";\r\nimport JobReducer from \"../reducers/job\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  authReducer,\r\n  userReducer,\r\n  alertReducer,\r\n  JobReducer\r\n});\r\nconst middel = [thunk];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(...middel))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nimport AppRouter from \"./routers/AppRouter\";\r\nimport setAuthToken from \"../src/utills/setAuthToken\";\r\nimport store from \"./store/store\";\r\nimport { loadUser } from \"./actions/auth\";\r\nimport { positions, Provider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst options = {\r\n  timeout: 5000,\r\n  position: positions.TOP_RIGHT\r\n};\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nexport default () => {\r\n  console.log(\"vvvvv\", BASE_URL);\r\n  React.useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n  return (\r\n    <Provider template={AlertTemplate} {...options}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./store/store\";\r\nimport * as serviceWorker from './serviceWorker';\r\n// import('dotenv').config();\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#8561c5\",\r\n      main: \"#673ab7\",\r\n      dark: \"#482880\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    secondary: deepOrange\r\n  }\r\n});\r\nconsole.log(process.env);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline>\r\n        <App />\r\n      </CssBaseline>\r\n    </MuiThemeProvider>\r\n  </Provider>,\r\n  document.getElementById(\"app\")\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}