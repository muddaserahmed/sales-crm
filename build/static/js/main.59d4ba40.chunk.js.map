{"version":3,"sources":["components/NavSide.js","actions/alert.js","actions/types.js","utills/setAuthToken.js","actions/auth.js","components/NavMain.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/SignInForm.js","pages/SignInPage.js","components/SignUpForm.js","pages/SignUpPage.js","pages/DashboardPage.js","components/PostForm.js","pages/AddPostPage.js","pages/Alert.js","actions/job.js","pages/sales/AddJob.js","pages/sales/JobList.js","pages/sales/exportCsv.js","pages/sales/adminJobList.js","pages/sales/JobEdit.js","pages/sales/salesDetail.js","actions/user.js","pages/sales/UserList.js","pages/sales/EditUser.js","pages/sales/leads/LeadList.js","pages/sales/leads/LeadDetails.js","pages/sales/leads/LeadEdit.js","pages/sales/leads/MyLead.js","pages/sales/leads/LeadCallList.js","pages/sales/user/UserReport.js","pages/sales/user/UserDetails.js","routers/AppRouter.js","reducers/auth.js","reducers/user.js","reducers/alert.js","reducers/job.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["compose","withStyles","theme","root","color","withTheme","user","classes","useState","open","setOpen","userOpen","setuserOpen","leadsOpen","setleadsOpen","i","length","raceName","role","name","ListItem","button","component","Link","to","ListItemIcon","className","ListItemText","primary","onClick","Collapse","in","timeout","unmountOnExit","List","disablePadding","Fragment","setAlert","msg","alert_type","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","logIn","registration_number","password","history","config","body","JSON","stringify","post","push","errors","response","forEach","error","NavMain","state","anchor","renderButtons","props","auth","profile","h4","Button","handleLogout","rightMostButton","pushRight","logout","handleDrawerOpen","setState","handleDrawerClose","handleChangeAnchor","event","target","value","this","children","registrationNumber","drawer","Drawer","variant","paper","drawerPaper","drawerHeader","header","IconButton","direction","Divider","before","after","appFrame","AppBar","classNames","appBar","appBarShift","Toolbar","disableGutters","aria-label","menuButton","hide","Typography","logoText","noWrap","content","contentShift","React","Component","flexGrow","fontSize","height","width","zIndex","overflow","position","display","backgroundColor","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","marginLeft","marginRight","textDecoration","alignItems","justifyContent","padding","mixins","toolbar","palette","background","default","spacing","unit","margin","withRouter","connect","authReducer","isAuth","rest","Route","render","Redirect","layout","breakpoints","up","marginTop","flexDirection","avatar","secondary","main","form","submit","formData","setFormData","onChangesHandler","e","Paper","Avatar","onSubmit","preventDefault","FormControl","fullWidth","InputLabel","htmlFor","Input","autoComplete","onChange","autoFocus","LoginPage","SignInForm","gutters","paddingTop","paddingBottom","minHeight","textField","signUp","designation","elevation","container","TextField","label","Select","MenuItem","SignUpPage","SignUpForm","h1","fontFamily","jumbo","ul","fontWeight","job","SetJob","lead","SetLead","goodLead","SetGoodLead","hotLead","SetHotLead","closedLead","SetClosedLead","rejectlead","SetRejectLead","mJob","SetMJob","mLead","SetMLead","mGoodLead","SetMGoodLead","mHotLead","SetMHotLead","mClosedLead","SetMClosedLead","mRejectlead","SetMRejectLead","useEffect","then","result","class","style","undefined","PostForm","align","placeholder","multiline","rows","size","marginBottom","AddPostPage","divStyle","opacity","top","left","border","borderRadius","alerts","alertReducer","key","alert","map","fetchJob","deleteJob","useStyles","makeStyles","modal","boxShadow","shadows","compExist","float","buttonform","typography","error1","right","error2","textAlign","addJob","company_name","job_title","url","location","salary","count","setExistComp","setCompExist","onChangeHandler","console","log","noValidate","for","exist","filter","item","companyName","toLowerCase","listStyleType","comp","index","createdAt","columns","minWidth","format","toLocaleString","toFixed","tableWrapper","jobHeader","JobReducer","useAlert","dailyJob","setDailyJob","setCount","page","setPage","rowsPerPage","setRowsPerPage","success","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","row","status","scope","TablePagination","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","CsvDataService","filename","keys","Object","csvContent","join","k","cell","Date","toString","replace","search","blob","Blob","navigator","msSaveBlob","link","document","createElement","download","URL","createObjectURL","setAttribute","visibility","appendChild","click","removeChild","desc","b","orderBy","headCells","numeric","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","Checkbox","indeterminate","checked","inputProps","headCell","sortDirection","TableSortLabel","active","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","text","dark","title","flex","EnhancedTableToolbar","exportData","clsx","Tooltip","table","overflowX","clip","setOrder","setOrderBy","selected","setSelected","dense","setDense","match","setMatch","setJob","handleChange","message","handleClose","handleOpen","emptyRows","Math","min","lists","newList","list","includes","window","confirm","filteredItems","exportItems","UserName","CompanyName","JobTitle","Profile","Status","exportToCsv","aria-labelledby","newSelecteds","n","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","isItemSelected","indexOf","labelId","selectedIndex","newSelected","concat","handleClick","aria-checked","tabIndex","jobId","onClose","onOpen","pathname","detail","colSpan","parseInt","FormControlLabel","control","updateJob","center","salesDetail","SetData","Total","reduce","prev","cur","Badge","badgeContent","userId","fetchUser","maxHeight","delete","users","userReducer","deleteUser","hover","updateUser","setRole","setProfile","disabled","assigToHandler","assignTo","callHandleChange","call_status","client_name","ref","createRef","li","listStyle","borderBottom","divider","flexWrap","toolbarTitle","heroContent","cardHeader","grey","cardPricing","card","maxWidth","cardHeader1","cardBody1","cardContentRight","borderRight","cardContentLeft","cardContentInner","Pricing","targetRef","toPdf","email","website","phone_number","call_time","time_zone","lead_status","updateLead","source","call_date","leadId","weeklyuserData","monthlyuserData","userDetails","createBrowserHistory","Router","Switch","exact","path","SignInPage","DashboardPage","UserList","EditUser","JobList","AdminJobList","EditJob","SalesDetails","LeadsList","LeadDetails","EditLead","MyLeads","LeadSchedule","UserReport","UserDetails","initialState","getItem","loading","newjob","rootReducer","combineReducers","action","setItem","removeItem","middel","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","options","positions","TOP_RIGHT","Boolean","hostname","createMuiTheme","contrastText","deepOrange","process","ReactDOM","CssBaseline","template","AlertTemplate","AppRouter","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.59d4ba40.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState}from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport compose from \"recompose/compose\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport List from \"@material-ui/core/List\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport WorkOutlineIcon from \"@material-ui/icons/WorkOutline\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    color: \"white\"\r\n  }\r\n});\r\nconst mailFolderListItems = ({ user, classes }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [userOpen, setuserOpen] = useState(false);\r\n  const [leadsOpen, setleadsOpen] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n  const userHandleClick = () => {\r\n    setuserOpen(!userOpen);\r\n  };\r\n\r\n  const leadsHandleClick = () => {\r\n    setleadsOpen(!leadsOpen);\r\n  };\r\n\r\n  if (user) {\r\n    for (var i = 0; i < user.length; i++) {\r\n      var raceName = user[i].role;\r\n      var name = user[i].name;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <ListItem button component={Link} to=\"/dashboard\">\r\n        <ListItemIcon>\r\n          <DashboardIcon className={classes.root} />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      {raceName == \"user\" || raceName == \"super_admin\" ? (\r\n        <ListItem button onClick={handleClick}>\r\n          <ListItemIcon>\r\n            <WorkOutlineIcon className={classes.root} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Sales\" />\r\n          {open ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {raceName == \"user\" || raceName == \"super_admin\" ? (\r\n            <ListItem button component={Link} to=\"/job_list\">\r\n              <ListItemIcon>\r\n                <ListIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Job List\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {raceName == \"super_admin\" ? (\r\n            <ListItem button component={Link} to=\"/admin_job_list\">\r\n              <ListItemIcon>\r\n                <SupervisorAccountIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Sales Admin\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {raceName == \"super_admin\" ? (\r\n            <ListItem button component={Link} to=\"/sales_daily_details\">\r\n              <ListItemIcon>\r\n                <WorkIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Daily Job\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n      {raceName == \"super_admin\" || raceName == \"admin\" ? (\r\n        <ListItem button onClick={userHandleClick}>\r\n          <ListItemIcon>\r\n            <PersonIcon className={classes.root} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"User\" />\r\n          {userOpen ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <Collapse in={userOpen} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {raceName == \"super_admin\" ? (\r\n            <ListItem button component={Link} to=\"/user_list\">\r\n              <ListItemIcon>\r\n                <ListIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"User List\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {raceName == \"admin\" && name == \"Muddasir Ahmed\" ? (\r\n            <ListItem button component={Link} to=\"/user_report\">\r\n              <ListItemIcon>\r\n                <ListIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"User Report\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n      {raceName == \"admin\" || raceName == \"super_admin\" ? (\r\n        <React.Fragment>\r\n          <ListItem button onClick={leadsHandleClick}>\r\n            <ListItemIcon>\r\n              <WorkOutlineIcon className={classes.root} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Leads\" />\r\n            {leadsOpen ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={leadsOpen} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {raceName == \"super_admin\" ? (\r\n                <ListItem button component={Link} to=\"/leads_list\">\r\n                  <ListItemIcon>\r\n                    <ListIcon className={classes.root} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Leads List\" />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {raceName == \"super_admin\" || raceName == \"admin\" ? (\r\n                <ListItem button component={Link} to=\"/my_leads\">\r\n                  <ListItemIcon>\r\n                    <ListIcon className={classes.root} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"My Leads\" />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {raceName == \"super_admin\" || raceName == \"admin\" ? (\r\n                <ListItem button component={Link} to=\"/lead_scedule\">\r\n                  <ListItemIcon>\r\n                    <ListIcon className={classes.root} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Lead Scheduler\" />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </List>\r\n          </Collapse>\r\n        </React.Fragment>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default compose(withStyles(styles, { withTheme: true }))(\r\n  mailFolderListItems\r\n);\r\n","import uuid from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\nexport const setAlert = (msg, alert_type) => dispatch => {\r\n  const id = uuid.v4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alert_type, id }\r\n  });\r\n\r\n  setTimeout(\r\n    () =>\r\n      dispatch({\r\n        type: REMOVE_ALERT,\r\n        payload: id\r\n      }),\r\n    2000\r\n  );\r\n};\r\n","export const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n//Job\r\nexport const JOB_ADD_SUCCESS = \"JOB_ADD_SUCCESS\";\r\nexport const JOB_ADD_FAIL = \"JOB_ADD_FAIL\";\r\nexport const FETCH_JOB_DATA_SUCCESS = \"FETCH_JOB_DATA_SUCCESS\";\r\nexport const FETCH_JOB_DATA_FAIL = \"FETCH_JOB_DATA_FAIL\";\r\nexport const JOB_DELETE_SUCCESS = \"JOB_DELETE_SUCCESS\";\r\nexport const JOB_DELETE_FAIL = \"JOB_DELETE_FAIL\";\r\nexport const JOB_UPDATE_SUCCESS = \"JOB_UPDATE_SUCCESS\";\r\nexport const JOB_UPDATE_FAIL = \"JOB_UPDATE_FAIL\";\r\n//User\r\nexport const FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\";\r\nexport const FETCH_USER_FAIL = \"FETCH_USER_FAIL\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_MONTHLY_DETAILS_SUCCESS = \"USER_MONTHLY_DETAILS_SUCCESS\";\r\nexport const USER_MONTHLY_DETAILS_FAIL = \"USER_MONTHLY_DETAILS_FAIL\";\r\nexport const USER_WEEKLY_DETAILS_SUCCESS = \"USER_WEEKLY_DETAILS_SUCCESS\";\r\nexport const USER_WEEKLY_DETAILS_FAIL = \"USER_WEEKLY_DETAILS_FAIL\";\r\n//Lead\r\nexport const LEAD_UPDATE_SUCCESS = \"LEAD_UPDATE_SUCCESS\";\r\nexport const LEAD_UPDATE_FAIL = \"LEAD_UPDATE_FAIL\";\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGOUT\r\n} from \"../actions/types\";\r\nimport setAuthToken from \"../utills/setAuthToken\";\r\n\r\n// const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get( \"/api/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\nexport const signUp = (\r\n  registration_number,\r\n  name,\r\n  designation,\r\n  password,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    registration_number,\r\n    name,\r\n    designation,\r\n    password\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post( \"/api/user\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n    history.push(\"/dashboard\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    const error1 = error.response.data.msg;\r\n    if (error1) {\r\n      dispatch(setAlert(error));\r\n    }\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const logIn = (\r\n  registration_number,\r\n  password,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    registration_number,\r\n    password\r\n  });\r\n  \r\n  \r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    const error1 = error.response.data.msg;\r\n    if (error1) {\r\n      dispatch(setAlert(error));\r\n    }\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport MailFolderListItemsfrom from \"./NavSide\";\r\n\r\nimport { logout } from \"../actions/auth\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  header: {\r\n    fontSize: \"12px\"\r\n  },\r\n  appFrame: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    zIndex: 1,\r\n    overflow: \"scroll\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    width: \"100%\"\r\n  },\r\n  appBar: {\r\n    position: \"absolute\",\r\n    width: \"100vw\",\r\n    backgroundColor: \"#1c304e\",\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  \"appBarShift-left\": {\r\n    marginLeft: drawerWidth\r\n  },\r\n  \"appBarShift-right\": {\r\n    marginRight: drawerWidth\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20\r\n  },\r\n  logoText: {\r\n    textDecoration: \"none\",\r\n    marginLeft: \"21px\"\r\n  },\r\n  rightMostButton: {\r\n    marginRight: 12\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    width: drawerWidth,\r\n    backgroundColor: \"#1c304e\",\r\n    color: \"white\"\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar\r\n  },\r\n  pushRight: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing.unit * 3,\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  \"content-left\": {\r\n    marginLeft: -drawerWidth\r\n  },\r\n  \"content-right\": {\r\n    marginRight: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  \"contentShift-left\": {\r\n    marginLeft: 0\r\n  },\r\n  \"contentShift-right\": {\r\n    marginRight: 0\r\n  },\r\n  color: {\r\n    color: \"white\"\r\n  },\r\n  h4: {\r\n    margin: \"0 auto\"\r\n  }\r\n});\r\n\r\nclass NavMain extends React.Component {\r\n  state = {\r\n    open: false,\r\n    anchor: \"left\"\r\n  };\r\n\r\n  renderButtons = () => {\r\n    const { auth, classes, user } = this.props;\r\n\r\n    if (user) {\r\n      for (var i = 0; i < user.length; i++) {\r\n        var name = user[i].name;\r\n        var profile = user[i].profile;\r\n      }\r\n    }\r\n    if (auth) {\r\n      return (\r\n        <React.Fragment>\r\n          <h4 className={classes.h4}>Profile name :{profile}</h4>\r\n\r\n          <Button\r\n            onClick={this.handleLogout}\r\n            color=\"inherit\"\r\n            to=\"/\"\r\n            component={Link}\r\n            className={classes.rightMostButton}\r\n          >\r\n            Log Out\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Button\r\n            color=\"inherit\"\r\n            to=\"/\"\r\n            component={Link}\r\n            className={classes.pushRight}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Button\r\n            to=\"/signup\"\r\n            component={Link}\r\n            color=\"inherit\"\r\n            className={classes.rightMostButton}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  handleLogout = () => {\r\n    this.props.logout();\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleChangeAnchor = event => {\r\n    this.setState({\r\n      anchor: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme, children, user, auth } = this.props;\r\n    const { anchor, open } = this.state;\r\n    if (user) {\r\n      for (var i = 0; i < user.length; i++) {\r\n        var name = user[i].name;\r\n        var profile = user[i].profile;\r\n        var registrer = user[i].registrationNumber;\r\n      }\r\n    }\r\n    var drawer = (\r\n      <Drawer\r\n        variant=\"persistent\"\r\n        anchor={anchor}\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <h4 className={classes.header}>{name}</h4>\r\n          <IconButton\r\n            className={classes.color}\r\n            onClick={this.handleDrawerClose}\r\n          >\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <MailFolderListItemsfrom user={user} />\r\n        </List>\r\n      </Drawer>\r\n    );\r\n\r\n    let before = null;\r\n    let after = null;\r\n\r\n    if (anchor === \"left\") {\r\n      before = drawer;\r\n    } else {\r\n      after = drawer;\r\n    }\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.appFrame}>\r\n          <AppBar\r\n            className={classNames(classes.appBar, {\r\n              [classes.appBarShift]: open,\r\n              [classes[`appBarShift-${anchor}`]]: open\r\n            })}\r\n          >\r\n            <Toolbar disableGutters={!open}>\r\n              {auth ? (\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"Open drawer\"\r\n                  onClick={this.handleDrawerOpen}\r\n                  className={classNames(\r\n                    classes.menuButton,\r\n                    open && classes.hide\r\n                  )}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              ) : (\r\n                \" \"\r\n              )}\r\n              <Typography\r\n                component={Link}\r\n                className={classes.logoText}\r\n                to=\"/\"\r\n                variant=\"title\"\r\n                color=\"inherit\"\r\n                noWrap\r\n              >\r\n                Cloud Tek\r\n              </Typography>\r\n\r\n              {this.renderButtons()}\r\n            </Toolbar>\r\n          </AppBar>\r\n          {before}\r\n          <main\r\n            className={classNames(\r\n              classes.content,\r\n              classes[`content-${anchor}`],\r\n              {\r\n                [classes.contentShift]: open,\r\n                [classes[`contentShift-${anchor}`]]: open\r\n              }\r\n            )}\r\n          >\r\n            <div className={classes.drawerHeader} />\r\n            {children}\r\n          </main>\r\n          {after}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNavMain.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  auth: PropTypes.bool.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n  user: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.authReducer.isAuth,\r\n  user: state.authReducer.user\r\n});\r\n\r\nexport default compose(\r\n  withStyles(styles, { withTheme: true }),\r\n  withRouter,\r\n  connect(mapStateToProps, { logout })\r\n)(NavMain);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport NavMain from \"../components/NavMain\";\r\n\r\nexport const PrivateRoute = ({ auth, component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth ? (\r\n        <NavMain>\r\n          <Component {...props} />\r\n        </NavMain>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.authReducer.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NavMain from \"../components/NavMain\";\r\n\r\nexport const PublicRoute = ({ isAuth, component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuth ? (\r\n        <Redirect to=\"/dashboard\" />\r\n      ) : (\r\n        <NavMain>\r\n          <Component {...props} />\r\n        </NavMain>\r\n      )\r\n    }\r\n  />\r\n);\r\nPublicRoute.propTypes = {\r\n  auth: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.authReducer.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport LockIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { logIn } from \"../actions/auth\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    display: \"block\", // Fix IE11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE11 issue.\r\n    marginTop: theme.spacing.unit\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3\r\n  }\r\n});\r\n\r\nconst SignIn = ({ logIn, history, classes, auth }) => {\r\n  // if (auth) {\r\n  //    return <Redirect to=\"/dashboard\" />;\r\n  // }\r\n  const [formData, setFormData] = useState({\r\n    registration_number: null,\r\n    password: null\r\n  });\r\n\r\n  const { registration_number, password } = formData;\r\n  const onChangesHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    logIn(registration_number, password, history);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockIcon />\r\n          </Avatar>\r\n          <Typography variant=\"headline\">Sign in</Typography>\r\n          <form onSubmit={submitHandler} className={classes.form}>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n              <InputLabel htmlFor=\"registration_number\">\r\n                Registration Number\r\n              </InputLabel>\r\n              <Input\r\n                id=\"registration_number\"\r\n                type=\"text\"\r\n                name=\"registration_number\"\r\n                autoComplete=\"registration_number\"\r\n                onChange={onChangesHandler}\r\n                autoFocus\r\n              />\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={onChangesHandler}\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"raised\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onChange={onChangesHandler}\r\n            >\r\n              Sign in\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  logIn: PropTypes.func.isRequired,\r\n  auth: PropTypes.bool.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.authReducer.isAuth\r\n});\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(mapStateToProps, { logIn })\r\n)(withRouter(SignIn));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SignInForm from \"../components/SignInForm\";\r\nimport { logIn } from \"../actions/auth\";\r\n\r\nexport class LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  // onSubmit = e => {\r\n  //   e.preventDefault();\r\n  //   this.props.login();\r\n  //   //this.props.history.push(\"/dashboard\");\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <SignInForm onSubmit={this.onSubmit} /> */}\r\n        <SignInForm />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { logIn })(LoginPage);\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport HowToReg from \"@material-ui/icons/HowToReg\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { signUp } from \"../actions/auth\";\r\nimport { withRouter } from \"react-router-dom\";\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    width: \"50%\",\r\n    margin: \"0 auto\",\r\n    minHeight: \"250px\"\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    display: \"block\", // Fix IE11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    marginTop: \"5%\",\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nconst PaperSheet = ({ signUp, classes, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    registration_number: null,\r\n    name: null,\r\n    designation: null,\r\n    password: null\r\n  });\r\n\r\n  const { registration_number, name, designation, password } = formData;\r\n  const onChangesHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const setSelectHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      designation: e.target.value\r\n    });\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    signUp(registration_number, name, designation, password, history);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper} elevation={1}>\r\n          <Avatar className={classes.avatar}>\r\n            <HowToReg />\r\n          </Avatar>\r\n          <Typography variant=\"headline\">Sign Up</Typography>\r\n          <form\r\n            onSubmit={submitHandler}\r\n            className={classes.container}\r\n            autoComplete=\"on\"\r\n          >\r\n            <TextField\r\n              autoFocus\r\n              id=\"registration_number\"\r\n              label=\"Registration Number\"\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              onChange={onChangesHandler}\r\n            />\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              onChange={onChangesHandler}\r\n            />\r\n            <br></br>\r\n            <br></br>\r\n            <Select\r\n              id=\"select\"\r\n              label=\"Designation\"\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              onChange={setSelectHandler}\r\n            >\r\n              <MenuItem value=\"Developer\">Developer</MenuItem>\r\n\r\n              <MenuItem value=\"Project Manger\">Project Manger</MenuItem>\r\n              <MenuItem value=\"Sales Manger\">Sales Manger</MenuItem>\r\n              <MenuItem value=\"Sales\">Sales User</MenuItem>\r\n            </Select>\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              onChange={onChangesHandler}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nPaperSheet.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  signUp: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(null, { signUp })\r\n)(withRouter(PaperSheet));\r\n","import React from \"react\";\r\n\r\nimport SignUpForm from \"../components/SignUpForm\";\r\n\r\nexport const SignUpPage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <SignUpForm />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst h1 = {\r\n  marginTop: \"-45px\",\r\n  fontFamily: \"serif\",\r\n  color: \"white\"\r\n};\r\n\r\nconst jumbo = {\r\n  backgroundColor: \"#285151\"\r\n};\r\nconst ul = {\r\n  fontWeight: \"bold\",\r\n  fontFamily: \"serif\",\r\n  fontSize: \"15px\"\r\n};\r\n\r\n// const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nconst DashboardPage = ({ user }) => {\r\n  //week state\r\n  const [job, SetJob] = React.useState([]);\r\n  const [lead, SetLead] = React.useState([]);\r\n  const [goodLead, SetGoodLead] = React.useState([]);\r\n  const [hotLead, SetHotLead] = React.useState([]);\r\n  const [closedLead, SetClosedLead] = React.useState([]);\r\n  const [rejectlead, SetRejectLead] = React.useState([]);\r\n\r\n  //month state\r\n  const [mJob, SetMJob] = React.useState([]);\r\n  const [mLead, SetMLead] = React.useState([]);\r\n  const [mGoodLead, SetMGoodLead] = React.useState([]);\r\n  const [mHotLead, SetMHotLead] = React.useState([]);\r\n  const [mClosedLead, SetMClosedLead] = React.useState([]);\r\n  const [mRejectlead, SetMRejectLead] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    // jobs count\r\n    axios.get( \"/api/job/status_job_count\").then(res => {\r\n      SetJob(res.data.result);\r\n    });\r\n    //leads count\r\n    axios.get( \"/api/job/status_lead_count\").then(res => {\r\n      SetLead(res.data.result);\r\n    });\r\n    // good leads count\r\n    axios.get( \"/api/job/status_good_lead_count\").then(res => {\r\n      SetGoodLead(res.data.result);\r\n    });\r\n    // hot leads count\r\n    axios.get( \"/api/job/status_hot_lead_count\").then(res => {\r\n      SetHotLead(res.data.result);\r\n    });\r\n    // closed lead count\r\n    axios.get( \"/api/job/status_closed_lead_count\").then(res => {\r\n      SetClosedLead(res.data.result);\r\n    });\r\n    //rejected lead count\r\n    axios.get( \"/api/job/status_rejected_lead_count\").then(res => {\r\n      SetRejectLead(res.data.result);\r\n    });\r\n\r\n    // Previous Monthly Job Report\r\n    axios.get( \"/api/job/status_job_monthly_count\").then(res => {\r\n      SetMJob(res.data.result);\r\n    });\r\n\r\n    // Previous Monthly Lead Report\r\n    axios.get( \"/api/job/status_lead_monthly_count\").then(res => {\r\n      SetMLead(res.data.result);\r\n    });\r\n\r\n    // Previous Monthly Good Lead Report\r\n    axios\r\n      .get( \"/api/job/status_good_lead_monthly_count\")\r\n      .then(res => {\r\n        SetMGoodLead(res.data.result);\r\n      });\r\n\r\n    // Previous Monthly Good Lead Report\r\n    axios.get( \"/api/job/status_hot_lead_month_count\").then(res => {\r\n      SetMHotLead(res.data.result);\r\n    });\r\n\r\n    // Previous Monthly Good Lead Report\r\n    axios\r\n      .get( \"/api/job/status_closed_lead_monthly_count\")\r\n      .then(res => {\r\n        SetMClosedLead(res.data.result);\r\n      });\r\n\r\n    // Previous Monthly Good Lead Report\r\n    axios\r\n      .get( \"/api/job/status_rejected_lead_monthly_count\")\r\n      .then(res => {\r\n        SetMRejectLead(res.data.result);\r\n      });\r\n  }, []);\r\n\r\n  if (user) {\r\n    for (var i = 0; i < user.length; i++) {\r\n      var raceName = user[i].role;\r\n      var name = user[i].name;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {raceName === \"super_admin\" ? (\r\n        <div class=\"row\">\r\n          <div class=\"col-md-5 offset-md-1\">\r\n            <div style={jumbo} class=\"jumbotron jumbotron-fluid\">\r\n              <h1 style={h1} class=\"text-center\">\r\n                Previous Week Report\r\n              </h1>\r\n              <ul style={ul} class=\"list-group\">\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Applied Job\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {job.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {lead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Good Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {goodLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Hot Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {hotLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Closed Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {closedLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Rejected Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {rejectlead.length}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-5\">\r\n            <div style={jumbo} class=\"jumbotron jumbotron-fluid\">\r\n              <h1 style={h1} class=\"text-center\">\r\n                Previous Month Report\r\n              </h1>\r\n              <ul style={ul} class=\"list-group\">\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Applied Job\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mJob.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Good Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mGoodLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Hot Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mHotLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Closed Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mClosedLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Rejected Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mRejectlead.length}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h1>Welcome \"{name}\" to Sales CRM</h1>\r\n      )}\r\n      {raceName === undefined ? (\r\n        <p>Thanks for Registration wait Untill an Admin Verified you</p>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.authReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(DashboardPage);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n  \r\n  layout: {\r\n    width: '100%',\r\n    display: 'block',\r\n    margin: '0 auto',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '80%'\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '65%'\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '45%'\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: '300px',\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    marginTop: '5%'\r\n  }\r\n});\r\n\r\nclass PostForm extends React.Component {\r\n  render() {\r\n    const { classes, children } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <Edit />\r\n            </Avatar>\r\n            <Typography align=\"center\" variant=\"headline\">Add Post</Typography>\r\n            <form>\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Title\"\r\n                placeholder=\"Enter a title\"\r\n           \r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Category\"\r\n                placeholder=\"Enter a category\"\r\n                \r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />{' '}\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Thumbnail URL\"\r\n                placeholder=\"http://www.website.com/thumbnail.jpg\"\r\n                \r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Main Image URL\"\r\n                \r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />{' '}\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Body\"\r\n                placeholder=\"Write your post here\"\r\n                multiline\r\n                rows={6}\r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />\r\n              <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              className={classes.button}\r\n              >Save Post</Button>\r\n            </form>\r\n          </Paper>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPostForm.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PostForm);\r\n","import React from 'react';\r\n\r\nimport PostForm from '../components/PostForm';\r\n\r\nexport const AddPostPage = () => {\r\n  return (\r\n    <div>\r\n      <PostForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddPostPage;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n//import \"./alert.css\";\r\n\r\nconst divStyle = {\r\n  padding: \"10px 0px 10px 28px\",\r\n  width: \"405px\",\r\n  opacity: \"0.9\",\r\n  color: \"white\",\r\n  background: \"red\",\r\n  position: \"absolute\",\r\n  top: \"34px\",\r\n  left: \"561px\",\r\n  zIndex: \"11111\",\r\n  border: \"5px solid #780c0c\",\r\n  borderRadius: \"20px\",\r\n  // zIndex: \"10000\"\r\n};\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 && (\r\n    <ul style={divStyle} key={alert.id}>\r\n      {alerts.map(alert => (\r\n        <li> {alert.msg}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  alerts: state.alertReducer\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"../actions/alert\";\r\n\r\nimport {\r\n  JOB_ADD_SUCCESS,\r\n  JOB_ADD_FAIL,\r\n  FETCH_JOB_DATA_SUCCESS,\r\n  FETCH_JOB_DATA_FAIL,\r\n  JOB_DELETE_SUCCESS,\r\n  JOB_DELETE_FAIL,\r\n  JOB_UPDATE_SUCCESS,\r\n  JOB_UPDATE_FAIL,\r\n  LEAD_UPDATE_SUCCESS,\r\n  LEAD_UPDATE_FAIL\r\n} from \"../actions/types\";\r\n\r\n// const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const fetchJob = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get( \"/api/job\");\r\n\r\n    dispatch({\r\n      type: FETCH_JOB_DATA_SUCCESS,\r\n      payload: res.data.result\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_JOB_DATA_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const addJob = (\r\n  company_name,\r\n  job_title,\r\n  url,\r\n  profile,\r\n  location,\r\n  salary,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    company_name,\r\n    job_title,\r\n    url,\r\n    profile,\r\n    location,\r\n    salary\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post( \"/api/job\", body, config);\r\n\r\n    dispatch({\r\n      type: JOB_ADD_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    return 1;\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_ADD_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteJob = id => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    id\r\n  });\r\n  try {\r\n    const res = await axios.post( \"/api/job/delete\", body, config);\r\n\r\n    dispatch({\r\n      type: JOB_DELETE_SUCCESS\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: JOB_DELETE_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateJob = (\r\n  id,\r\n  company_name,\r\n  url,\r\n  profile,\r\n  job_title,\r\n  salary,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    id,\r\n    company_name,\r\n    url,\r\n    profile,\r\n    job_title,\r\n    salary\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post( \"/api/job/edit\", body, config);\r\n\r\n    dispatch({\r\n      type: JOB_UPDATE_SUCCESS\r\n    });\r\n\r\n    history.push(\"/admin_job_list/\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_UPDATE_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n//update lead\r\n\r\nexport const updateLead = (\r\n  id,\r\n  profile,\r\n  job_title,\r\n  salary,\r\n  source,\r\n  email,\r\n  website,\r\n  client_name,\r\n  phone_number,\r\n  call_time,\r\n  time_zone,\r\n  call_date,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    id,\r\n    profile,\r\n    job_title,\r\n    salary,\r\n    source,\r\n    email,\r\n    website,\r\n    client_name,\r\n    phone_number,\r\n    call_time,\r\n    time_zone,\r\n    call_date\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post( \"/api/job/lead/edit\", body, config);\r\n\r\n    dispatch({\r\n      type: LEAD_UPDATE_SUCCESS\r\n    });\r\n\r\n    history.push(\"/leads_list/\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: LEAD_UPDATE_FAIL\r\n    });\r\n  }\r\n};\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport HowToReg from \"@material-ui/icons/HowToReg\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addJob } from \"../../actions/job\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid 6c697859\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    width: \"58%\"\r\n  },\r\n  compExist: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid 6c697859\",\r\n    boxShadow: theme.shadows[5],\r\n\r\n    width: \"41%\",\r\n    float: \"right\",\r\n    marginTop: \"-481px\"\r\n  },\r\n  button: {\r\n    position: \"relative\"\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: 200\r\n    }\r\n  },\r\n  h1: {\r\n    fontSize: \"25px\",\r\n    fontFamily: \"auto\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: \"31\"\r\n  },\r\n  buttonform: {\r\n    marginTop: \"5%\",\r\n    width: \"100%\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    margin: \" 0 auto\"\r\n  },\r\n  typography: {\r\n    fontFamily: \"initial\",\r\n    fontSize: \"25px\",\r\n    position: \"relative\",\r\n    left: \"260px\"\r\n  },\r\n  error1: {\r\n    position: \"absolute\",\r\n    right: \"777px\",\r\n    top: \"226px\",\r\n    color: \"red\"\r\n  },\r\n  error2: {\r\n    position: \"absolute\",\r\n    top: \"227px\",\r\n    color: \"red\"\r\n  },\r\n  profile: {\r\n    marginTop: \"24px\"\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n    fontSize: \"20px\",\r\n    color: \"red\"\r\n  }\r\n}));\r\n\r\nconst AddJob = ({ addJob, history, job, count }) => {\r\n  const [dailyJob, setDailyJob] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    job_title: null,\r\n    profile: null,\r\n    location: null,\r\n    salary: null,\r\n    company_name: null,\r\n    url: null\r\n  });\r\n\r\n  const [exist, setExist] = useState(\"\");\r\n  const [existComp, setExistComp] = useState(\"\");\r\n  const [compExist, setCompExist] = useState([]);\r\n\r\n  const { company_name, job_title, url, profile, location, salary } = formData;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onChangeHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const selectHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      profile: e.target.value\r\n    });\r\n  };\r\n\r\n  const searchHandler = e => {\r\n    if (e.target.value) {\r\n      setFormData({\r\n        ...formData,\r\n        company_name: e.target.value\r\n      });\r\n      const exist = job.filter(item => {\r\n        return item.companyName.toLowerCase() == e.target.value.toLowerCase();\r\n      });\r\n\r\n      if (exist.length > 0) {\r\n        setExistComp(\"Company Name Already Exist\");\r\n        setCompExist(exist);\r\n      } else {\r\n        setCompExist([]);\r\n        setExistComp(\"\");\r\n      }\r\n    } else {\r\n      setCompExist([]);\r\n      setExistComp(\"\");\r\n    }\r\n  };\r\n\r\n  const searchHandlerUrl = e => {\r\n    if (e.target.value) {\r\n      setFormData({\r\n        ...formData,\r\n        url: e.target.value\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    addJob(company_name, job_title, url, profile, location, salary, history);\r\n    count(company_name, job_title, url);\r\n  };\r\n\r\n  console.log(compExist, \"eeeeeeee\");\r\n  return (\r\n    <div>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <HowToReg />\r\n        </Avatar>\r\n        <Typography\r\n          className={classes.typography}\r\n          align=\"center\"\r\n          variant=\"headline\"\r\n        >\r\n          Add new Job\r\n        </Typography>\r\n\r\n        <form onSubmit={onSubmitHandler} noValidate autoComplete=\"off\">\r\n          <div className=\"form-group\">\r\n            <label for=\"company_name\">Company Name:</label>\r\n            <input\r\n              autoFocus\r\n              id=\"company_name\"\r\n              onChange={searchHandler}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"job_title\">Job Title:</label>\r\n            <input\r\n              id=\"job_title\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              onChange={onChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"url\">URL:</label>\r\n            <input\r\n              id=\"url\"\r\n              type=\"text\"\r\n              name=\"url\"\r\n              onChange={searchHandlerUrl}\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"location\">Location:</label>\r\n            <input\r\n              id=\"location\"\r\n              type=\"text\"\r\n              name=\"location\"\r\n              onChange={onChangeHandler}\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Add Job\r\n          </button>\r\n        </form>\r\n        {/* <form onSubmit={onSubmitHandler} noValidate autoComplete=\"off\">\r\n          <span className={classes.error2}>{existComp}</span>\r\n          <TextField\r\n            autoFocus\r\n            id=\"company_name\"\r\n            label=\"Company Name\"\r\n            margin=\"normal\"\r\n            onChange={searchHandler}\r\n          />\r\n          <TextField\r\n            id=\"job_title\"\r\n            label=\"Job Title\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            onChange={onChangeHandler}\r\n          />\r\n          <TextField\r\n            id=\"url\"\r\n            label=\"URL\"\r\n            type=\"text\"\r\n            name=\"url\"\r\n            margin=\"normal\"\r\n            onChange={searchHandlerUrl}\r\n          />\r\n          <span className={classes.error1}>{exist}</span>\r\n          <br></br>\r\n          <TextField\r\n            id=\"location\"\r\n            label=\"Location\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            onChange={onChangeHandler}\r\n          />\r\n          <TextField\r\n            id=\"salary\"\r\n            label=\"Salary\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            onChange={onChangeHandler}\r\n          />\r\n          <Button\r\n            className={classes.profile}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Add Job\r\n          </Button>\r\n        </form> */}\r\n      </div>\r\n      {compExist.length > 0 ? (\r\n        <div className={classes.compExist}>\r\n          <h1 className={classes.header}>Job Alredy Exist</h1>\r\n          <ul style={{ listStyleType: \"none\", textAlign: \"left\", margin: \"0\" }}>\r\n            {compExist.map((comp, index) => {\r\n              return (\r\n                <Fragment>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}>Company Name:</b>\r\n                    <span>{comp.companyName}</span>\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}>URL:</b>\r\n                    <span>{comp.url}</span>\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}>Job Title:</b>\r\n                    <span>{comp.job_title}</span>\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}>Profile:</b>{\" \"}\r\n                    <span>{comp.profile}</span>\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}> CreateAt:</b>\r\n                    <span>{comp.createdAt}</span>\r\n                  </li>\r\n                  <hr></hr>\r\n                </Fragment>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nAddJob.propTypes = {\r\n  addJob: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addJob })(withRouter(AddJob));\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport AddJob from \"./AddJob\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { fetchJob } from \"../../actions/job\";\r\nimport axios from \"axios\";\r\n\r\n// const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nconst columns = [\r\n  { id: \"name\", label: \"Company Name\", minWidth: 170 },\r\n  { id: \"code\", label: \"Job Title\", minWidth: 100, align: \"center\" },\r\n  { id: \"code\", label: \"URL\", minWidth: 100, align: \"center\" },\r\n  {\r\n    id: \"population\",\r\n    label: \"Profile\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"size\",\r\n    label: \"Location\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n\r\n  {\r\n    id: \"density\",\r\n    label: \"Status\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toFixed(2)\r\n  },\r\n  {\r\n    id: \"density\",\r\n    label: \"Applied Date\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toFixed(2)\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  tableWrapper: {\r\n    overflow: \"auto\"\r\n  },\r\n  jobHeader: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"initial\",\r\n    color: \"blue\"\r\n  }\r\n});\r\nconst jobList = ({ fetchJob, job }) => {\r\n  const alert = useAlert();\r\n  const [dailyJob, setDailyJob] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchJob();\r\n    axios.get( \"/api/job/user_daily_job_created\").then(res => {\r\n      setDailyJob(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  console.log(dailyJob, \"dailyyyyyyyy\");\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const countAdd = (company_name, job_title, url) => {\r\n    if (company_name && url) {\r\n      alert.success(\"Job Successfully Added !\");\r\n    }\r\n    setCount(count + 1);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <AddJob job={job} count={countAdd} />\r\n      <div className={classes.tableWrapper}>\r\n        <h1 className={classes.jobHeader}>Job List</h1>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {dailyJob\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => {\r\n                return (\r\n                  <TableRow\r\n                    className={\r\n                      row.status === \"job\"\r\n                        ? classes.job\r\n                        : row.status === \"lead\"\r\n                        ? classes.lead\r\n                        : \"\"\r\n                    }\r\n                    key={row.id}\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.companyName}\r\n                    </TableCell>\r\n\r\n                    <TableCell align=\"right\">{row.job_title}</TableCell>\r\n                    <TableCell align=\"right\">{row.url}</TableCell>\r\n                    <TableCell align=\"right\">{row.profile}</TableCell>\r\n                    <TableCell align=\"right\">{row.location}</TableCell>\r\n\r\n                    <TableCell align=\"right\">{row.status}</TableCell>\r\n                    <TableCell align=\"right\">{row.createdAt}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={dailyJob.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"previous page\"\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"next page\"\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  job: state.JobReducer.job\r\n});\r\njobList.propTypes = {\r\n  fetchJob: PropTypes.func.isRequired,\r\n  job: PropTypes.array.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchJob })(jobList);\r\n","export class CsvDataService {\r\n  static exportToCsv(filename, rows) {\r\n    if (!rows || !rows.length) {\r\n      return;\r\n    }\r\n    const separator = \",\";\r\n    const keys = Object.keys(rows[0]);\r\n    const csvContent =\r\n      keys.join(separator) +\r\n      \"\\n\" +\r\n      rows\r\n        .map(row => {\r\n          return keys\r\n            .map(k => {\r\n              let cell = row[k] === null || row[k] === undefined ? \"\" : row[k];\r\n              cell =\r\n                cell instanceof Date\r\n                  ? cell.toLocaleString()\r\n                  : cell.toString().replace(/\"/g, '\"\"');\r\n              if (cell.search(/(\"|,|\\n)/g) >= 0) {\r\n                cell = `\"${cell}\"`;\r\n              }\r\n              return cell;\r\n            })\r\n            .join(separator);\r\n        })\r\n        .join(\"\\n\");\r\n\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n    if (navigator.msSaveBlob) {\r\n      // IE 10+\r\n      navigator.msSaveBlob(blob, filename);\r\n    } else {\r\n      const link = document.createElement(\"a\");\r\n      if (link.download !== undefined) {\r\n        // Browsers that support HTML5 download attribute\r\n        const url = URL.createObjectURL(blob);\r\n        link.setAttribute(\"href\", url);\r\n        link.setAttribute(\"download\", filename);\r\n        link.style.visibility = \"hidden\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { CsvDataService } from \"./exportCsv\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { fetchJob } from \"../../actions/job\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteJob } from \"../../actions/job\";\r\nimport { useAlert } from \"react-alert\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n// const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Username\"\r\n  },\r\n  {\r\n    id: \"calories\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Company Name\"\r\n  },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"URL\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Status\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Action\" }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={order}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\"\r\n  }\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, deleteJob, exportData } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Job List\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Fragment>\r\n          <Tooltip title=\"Delete\" onClick={deleteJob}>\r\n            <IconButton aria-label=\"delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Export\" onClick={exportData}>\r\n            <IconButton aria-label=\"export\">\r\n              <GetAppIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Fragment>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  deleteJob: PropTypes.func.isRequired,\r\n  exportData: PropTypes.func.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 750\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1\r\n  },\r\n  textField: {\r\n    marginTop: \"12px\",\r\n    marginRight: \"22px\",\r\n    width: \"100%\"\r\n  },\r\n  job: {\r\n    backgroundColor: \"white\",\r\n    fontFamily: \"monospace\"\r\n  },\r\n  lead: {\r\n    backgroundColor: \"#008000bf\",\r\n    fontFamily: \"monospace\"\r\n  }\r\n}));\r\n\r\nconst adminjobList = ({ deleteJob, history }) => {\r\n  const alert = useAlert();\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"calories\");\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [dense, setDense] = useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [match, setMatch] = useState(\"Search\");\r\n  const [count, setCount] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [job, setJob] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get( \"/api/job\").then(res => {\r\n      setJob(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isDesc = orderBy === property && order === \"desc\";\r\n    setOrder(isDesc ? \"asc\" : \"desc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = job.map(n => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    var confirm = window.confirm(\"Do you want to Delete this Items ?\");\r\n    if (confirm == true) {\r\n      const filteredItems = job.filter(item => !selected.includes(item.id));\r\n      setJob(filteredItems);\r\n      deleteJob(selected);\r\n      alert.success(\"Job Successfully Deleted !\");\r\n    }\r\n  };\r\n\r\n  const ExportHandler = () => {\r\n    const exportItems = job.filter(item => selected.includes(item.id));\r\n    var download = [];\r\n\r\n    exportItems.forEach(user => {\r\n      download.push({\r\n        UserName: user.user.name,\r\n        CompanyName: user.companyName,\r\n        JobTitle: user.job_title,\r\n        URL: user.url,\r\n        Profile: user.profile,\r\n        Status: user.status\r\n      });\r\n    });\r\n\r\n    CsvDataService.exportToCsv(\"jobList.csv\", download);\r\n  };\r\n\r\n  const searchHandler = e => {\r\n    let lists = job;\r\n    console.log(\"search\", lists);\r\n    if (e.target.value) {\r\n      const newList = lists.filter(item => {\r\n        const list = item.companyName.toLowerCase();\r\n        const filter = e.target.value.toLowerCase();\r\n        return list.includes(filter);\r\n      });\r\n      if (newList.length > 0) {\r\n        console.log(\"in newlist\", lists);\r\n        setJob(newList);\r\n        setMatch(\"Match\");\r\n      } else {\r\n        setCount(count + 1);\r\n        setMatch(\"Does not Match\");\r\n      }\r\n    } else {\r\n      setCount(count + 1);\r\n      setMatch(\"Search\");\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      status: e.target.value\r\n    });\r\n    try {\r\n      const res = axios\r\n        .post( \"/api/job/changed_staus\", body, config)\r\n        .then(response => {\r\n          alert.success(\"Job Status Changed !\");\r\n          setCount(count + 1);\r\n          setSelected(\"\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const isSelected = id => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, job.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"search\"\r\n        label={match}\r\n        margin=\"normal\"\r\n        type=\"text\"\r\n        className={classes.textField}\r\n        placeholder=\"Search by Company Name ....\"\r\n        onChange={searchHandler}\r\n      />\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          deleteJob={handleDelete}\r\n          exportData={ExportHandler}\r\n        />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={job.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(job, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      onClick={event => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                      className={\r\n                        row.status == \"job\"\r\n                          ? classes.job\r\n                          : row.status === \"lead\"\r\n                          ? classes.lead\r\n                          : \" \"\r\n                      }\r\n                      key={row.id}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.jobId.name}\r\n                      </TableCell>\r\n                      <TableCell>{row.companyName}</TableCell>\r\n                      <TableCell>{row.url}</TableCell>\r\n                      <TableCell>\r\n                        <Select\r\n                          labelId=\"demo-controlled-open-select-label\"\r\n                          name={row.id}\r\n                          key={index}\r\n                          onClose={handleClose}\r\n                          onOpen={handleOpen}\r\n                          value={row.status}\r\n                          onChange={handleChange}\r\n                        >\r\n                          <MenuItem value=\"\"></MenuItem>\r\n                          <MenuItem value=\"job\">Job</MenuItem>\r\n                          <MenuItem value=\"lead\">Lead</MenuItem>\r\n                        </Select>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <IconButton aria-label=\"edit\">\r\n                          <EditIcon\r\n                            fontSize=\"large\"\r\n                            onClick={() =>\r\n                              history.push({\r\n                                pathname: \"/job_edit\",\r\n                                state: { detail: row }\r\n                              })\r\n                            }\r\n                          />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={job.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  job: state.JobReducer.job\r\n});\r\nadminjobList.propTypes = {\r\n  fetchJob: PropTypes.func,\r\n  deleteJob: PropTypes.func.isRequired,\r\n  fetchUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchJob, deleteJob })(adminjobList);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport compose from \"recompose/compose\";\r\nimport { updateJob } from \"../../actions/job\";\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"65%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"45%\"\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: \"300px\",\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    marginTop: \"5%\"\r\n  }\r\n});\r\n\r\nconst editJob = ({ classes, children, history, location, updateJob }) => {\r\n  const [formData, setFormData] = useState(location.state.detail);\r\n\r\n  const { id, companyName, url, profile, job_title, salary } = formData;\r\n  const onChangeHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    updateJob(id, companyName, url, profile, job_title, salary, history);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <IconButton aria-label=\"edit\">\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              onClick={() => history.push(\"/admin_job_list/\")}\r\n            />\r\n          </IconButton>\r\n          <Avatar className={classes.avatar}>\r\n            <Edit />\r\n          </Avatar>\r\n\r\n          <Typography align=\"center\" variant=\"headline\">\r\n            Edit Job\r\n          </Typography>\r\n          <form onSubmit={onSubmitHandler}>\r\n            <TextField\r\n              id=\"companyName\"\r\n              label=\"Company Name\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.companyName}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"job_title\"\r\n              label=\"Job Title\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.job_title}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"url\"\r\n              label=\"Url\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.url}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"profile\"\r\n              label=\"Profile\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.profile}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"salary\"\r\n              label=\"Salary\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.salary}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Update Job\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\neditJob.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  updateJob: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(null, { updateJob })\r\n)(editJob);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  text: {\r\n    padding: \"28px\",\r\n    fontFamily: \"initial\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n\r\nexport default function salesDetail() {\r\n  const [data, SetData] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    axios.get( \"/api/job/count\").then(res => {\r\n      SetData(res.data.result);\r\n    });\r\n  }, []);\r\n  if (data.length > 0) {\r\n    var Total = data.reduce(\r\n      (prev, cur) => parseInt(prev) + parseInt(cur.count),\r\n      0\r\n    );\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.center}>Daily Applied Job Details</h1>\r\n      <span className={classes.text}>Total Applied Job:</span>\r\n      <Badge badgeContent={Total} color=\"secondary\"></Badge>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Registration Number</TableCell>\r\n            <TableCell>Job Applied</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                User\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.userId}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Badge badgeContent={row.count} color=\"primary\"></Badge>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"../actions/alert\";\r\n\r\nimport {\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAIL,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_MONTHLY_DETAILS_SUCCESS,\r\n  USER_MONTHLY_DETAILS_FAIL,\r\n  USER_WEEKLY_DETAILS_SUCCESS,\r\n  USER_WEEKLY_DETAILS_FAIL\r\n} from \"../actions/types\";\r\n\r\n// const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const fetchUser = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get( \"/api/user\");\r\n\r\n    dispatch({\r\n      type: FETCH_USER_SUCCESS,\r\n      payload: res.data.result\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_USER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete( `/api/user/${id}`);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (\r\n  registration_number,\r\n  name,\r\n  designation,\r\n  id,\r\n  role,\r\n  profile,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    registration_number,\r\n    name,\r\n    designation,\r\n    id,\r\n    role,\r\n    profile\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post( \"/api/user/edit\", body, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS\r\n    });\r\n    history.push(\"/user_list/\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const userDetails = (registration_number, role) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    registration_number,\r\n    role\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post( \"/api/user/details\", body, config);\r\n\r\n    dispatch({\r\n      type: USER_WEEKLY_DETAILS_SUCCESS,\r\n      payload: res.data.result\r\n    });\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_WEEKLY_DETAILS_FAIL\r\n    });\r\n  }\r\n\r\n  //\r\n\r\n  try {\r\n    const res = await axios.post(\r\n       \"/api/user/monthly_details\",\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_MONTHLY_DETAILS_SUCCESS,\r\n      payload: res.data.result\r\n    });\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_MONTHLY_DETAILS_FAIL\r\n    });\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport AddJob from \"./AddJob\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser } from \"../../actions/user\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { deleteUser } from \"../../actions/user\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Registration Number\",\r\n    minWidth: 100,\r\n\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Name\",\r\n    minWidth: 100,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Designation\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Role\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Created At\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Action\",\r\n    label: \"Action\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  tableWrapper: {\r\n    maxHeight: 622,\r\n    overflow: \"auto\"\r\n  },\r\n  jobHeader: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"initial\",\r\n    color: \"blue\"\r\n  },\r\n  delete: {\r\n    backgroundColor: \"red,\"\r\n  }\r\n});\r\n\r\nconst userList = ({ fetchUser, users, deleteUser, history }) => {\r\n  //const alert = useAlert();\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [count]);\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const userDelete = id => {\r\n    deleteUser(id);\r\n    setCount(count + 1);\r\n    alert.success(\"User Deleted !\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.jobHeader}>User List</h1>\r\n      <div className={classes.tableWrapper}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => {\r\n                return (\r\n                  <TableRow hover key={row.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.registrationNumber}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{row.designation}</TableCell>\r\n                    <TableCell align=\"right\">{row.role}</TableCell>\r\n                    <TableCell align=\"right\">{row.createdAt}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon\r\n                          fontSize=\"large\"\r\n                          onClick={() => userDelete(row.registrationNumber)}\r\n                        />\r\n                      </IconButton>\r\n\r\n                      <IconButton aria-label=\"edit\">\r\n                        <EditIcon\r\n                          fontSize=\"large\"\r\n                          onClick={() =>\r\n                            history.push({\r\n                              pathname: \"/edit\",\r\n                              state: { detail: row }\r\n                            })\r\n                          }\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={users.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"previous page\"\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"next page\"\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.userReducer.users\r\n});\r\nuserList.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n  users: PropTypes.array.isRequired,\r\n  deleteUser: PropTypes.func.isRequired\r\n};\r\n//\r\nexport default connect(mapStateToProps, { fetchUser, deleteUser })(userList);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { updateUser } from \"../../actions/user\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"65%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"45%\"\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: \"300px\",\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    marginTop: \"5%\"\r\n  }\r\n});\r\n\r\nconst editUser = ({ classes, children, history, location, updateUser }) => {\r\n  //const alert = useAlert();\r\n  const [formData, setFormData] = useState(location.state.detail);\r\n  const [open, setOpen] = useState(false);\r\n  const { registrationNumber, name, designation, id } = formData;\r\n  const [role, setRole] = useState(formData.role);\r\n  const [profile, setProfile] = useState(formData.profile);\r\n  const onChangeHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    updateUser(\r\n      registrationNumber,\r\n      name,\r\n      designation,\r\n      id,\r\n      role,\r\n      profile,\r\n      history\r\n    );\r\n    alert.success(\"User Updated !\");\r\n  };\r\n\r\n  const roleHandler = e => {\r\n    console.log(\"roleHandler ::::::::::::: \", e.target.value);\r\n    setRole(e.target.value);\r\n  };\r\n\r\n  const profileHandler = e => {\r\n    setProfile(e.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <IconButton aria-label=\"edit\">\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              onClick={() => history.push(\"/user_list/\")}\r\n            />\r\n          </IconButton>\r\n          <Avatar className={classes.avatar}>\r\n            <Edit />\r\n          </Avatar>\r\n\r\n          <Typography align=\"center\" variant=\"headline\">\r\n            Edit User\r\n          </Typography>\r\n          <form onSubmit={onSubmitHandler}>\r\n            <TextField\r\n              disabled\r\n              id=\"registrationNumber\"\r\n              label=\"Registration Number\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.registrationNumber}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.name}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"designation\"\r\n              label=\"Designation\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.designation}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <InputLabel id=\"demo-controlled-open-select-label\">Role</InputLabel>\r\n            <Select\r\n              // open={open}\r\n              // onClose={handleClose}\r\n              // onOpen={handleOpen}\r\n              onChange={roleHandler}\r\n              className={classes.textField}\r\n              value={role}\r\n            >\r\n              <MenuItem value=\"None\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"super_admin\">Super Admin</MenuItem>\r\n              <MenuItem value=\"admin\">Admin</MenuItem>\r\n              <MenuItem value=\"user\">User</MenuItem>\r\n            </Select>\r\n\r\n            <InputLabel id=\"demo-controlled-open-select-label\">\r\n              Profile\r\n            </InputLabel>\r\n            <Select\r\n              // open={open}\r\n              // onClose={handleClose}\r\n              // onOpen={handleOpen}\r\n              onChange={profileHandler}\r\n              className={classes.textField}\r\n              value={profile}\r\n            >\r\n              <MenuItem value=\"None\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"Ali Muhammad\">Ali Muhammad</MenuItem>\r\n              <MenuItem value=\"Amir Khan\">Amir Khan</MenuItem>\r\n              <MenuItem value=\"Kevan Jay\">Kevn Jay</MenuItem>\r\n            </Select>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Update User\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\neditUser.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  updateUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(null, { updateUser })\r\n)(editUser);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { CsvDataService } from \"../exportCsv\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteJob } from \"../../../actions/job\";\r\nimport { useAlert } from \"react-alert\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { fetchUser } from \"../../../actions/user\";\r\n// import { Document, Page } from \"react-pdf\";\r\n\r\n// const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Client Name\"\r\n  },\r\n  {\r\n    id: \"calories\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Company Name\"\r\n  },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Job Title\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Assigned To\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Status\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Call\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Action\" }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={order}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\"\r\n  }\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, deleteJob, exportData } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Job List\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Fragment>\r\n          <Tooltip title=\"Delete\" onClick={deleteJob}>\r\n            <IconButton aria-label=\"delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Export\" onClick={exportData}>\r\n            <IconButton aria-label=\"export\">\r\n              <GetAppIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Fragment>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  deleteJob: PropTypes.func.isRequired,\r\n  exportData: PropTypes.func.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 750\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1\r\n  },\r\n  textField: {\r\n    marginTop: \"12px\",\r\n    marginRight: \"22px\",\r\n    width: \"100%\"\r\n  },\r\n  job: {\r\n    backgroundColor: \"#818675\",\r\n    fontFamily: \"monospace\"\r\n  },\r\n  lead: {\r\n    backgroundColor: \"#008000bf\",\r\n    fontFamily: \"monospace\"\r\n  }\r\n}));\r\n\r\nconst adminjobList = ({ deleteJob, history, fetchUser, users }) => {\r\n  const alert = useAlert();\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"calories\");\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [dense, setDense] = useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [match, setMatch] = useState(\"Search\");\r\n  const [count, setCount] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [job, setJob] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get( \"/api/job/leads\").then(res => {\r\n      setJob(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isDesc = orderBy === property && order === \"desc\";\r\n    setOrder(isDesc ? \"asc\" : \"desc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = job.map(n => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    var confirm = window.confirm(\"Do you want to Delete this Items ?\");\r\n    if (confirm == true) {\r\n      const filteredItems = job.filter(item => !selected.includes(item.id));\r\n      setJob(filteredItems);\r\n      deleteJob(selected);\r\n      alert.success(\"Job Successfully Deleted !\");\r\n    }\r\n  };\r\n\r\n  const ExportHandler = () => {\r\n    const exportItems = job.filter(item => selected.includes(item.id));\r\n    var download = [];\r\n\r\n    exportItems.forEach(user => {\r\n      download.push({\r\n        UserName: user.user.name,\r\n        CompanyName: user.companyName,\r\n        JobTitle: user.job_title,\r\n        URL: user.url,\r\n        Profile: user.profile,\r\n        Status: user.status\r\n      });\r\n    });\r\n\r\n    CsvDataService.exportToCsv(\"jobList.csv\", download);\r\n  };\r\n\r\n  const searchHandler = e => {\r\n    let lists = job;\r\n    console.log(\"search\", lists);\r\n    if (e.target.value) {\r\n      const newList = lists.filter(item => {\r\n        const list = item.companyName.toLowerCase();\r\n        const filter = e.target.value.toLowerCase();\r\n        return list.includes(filter);\r\n      });\r\n      if (newList.length > 0) {\r\n        console.log(\"in newlist\", lists);\r\n        setJob(newList);\r\n        setMatch(\"Match\");\r\n      } else {\r\n        setCount(count + 1);\r\n        setMatch(\"Does not Match\");\r\n      }\r\n    } else {\r\n      setCount(count + 1);\r\n      setMatch(\"Search\");\r\n    }\r\n  };\r\n\r\n  const assigToHandler = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      assignTo: e.target.value\r\n    });\r\n\r\n    try {\r\n      const res = axios\r\n        .post( \"/api/job/assign_to\", body, config)\r\n        .then(response => {\r\n          alert.success(\"Successfully Assigned !\");\r\n          setCount(count + 1);\r\n          setSelected(\"\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const callHandleChange = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      call_status: e.target.value\r\n    });\r\n    try {\r\n      const res = axios\r\n        .post( \"/api/job/call_status\", body, config)\r\n        .then(response => {\r\n          alert.success(\"Call Status Changed !\");\r\n          setCount(count + 1);\r\n          setSelected(\"\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      status: e.target.value\r\n    });\r\n    try {\r\n      const res = axios\r\n        .post( \"/api/job/changed_staus\", body, config)\r\n        .then(response => {\r\n          alert.success(\"Job Status Changed !\");\r\n          setCount(count + 1);\r\n          setSelected(\"\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const isSelected = id => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, job.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"search\"\r\n        label={match}\r\n        margin=\"normal\"\r\n        type=\"text\"\r\n        className={classes.textField}\r\n        placeholder=\"Search by Company Name ....\"\r\n        onChange={searchHandler}\r\n      />\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          deleteJob={handleDelete}\r\n          exportData={ExportHandler}\r\n        />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={job.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(job, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                      key={row.id}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                        onClick={() =>\r\n                          history.push({\r\n                            pathname: \"/lead_details\",\r\n                            state: { detail: row }\r\n                          })\r\n                        }\r\n                      >\r\n                        {row.client_name}\r\n                      </TableCell>\r\n                      <TableCell>{row.companyName}</TableCell>\r\n                      <TableCell>{row.job_title}</TableCell>\r\n\r\n                      <TableCell>\r\n                        <Select\r\n                          labelId=\"demo-controlled-open-select-label\"\r\n                          name={row.id}\r\n                          value={row.assignTo}\r\n                          key={index}\r\n                          onClose={handleClose}\r\n                          onOpen={handleOpen}\r\n                          onChange={assigToHandler}\r\n                        >\r\n                          <MenuItem value=\"\"></MenuItem>\r\n                          {users.map(user => {\r\n                            {\r\n                              return (\r\n                                <MenuItem value={user.registrationNumber}>\r\n                                  {user.name}\r\n                                </MenuItem>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </Select>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Select\r\n                          labelId=\"demo-controlled-open-select-label\"\r\n                          name={row.id}\r\n                          key={index}\r\n                          value={row.status}\r\n                          onClose={handleClose}\r\n                          onOpen={handleOpen}\r\n                          onChange={handleChange}\r\n                        >\r\n                          <MenuItem value=\"\"></MenuItem>\r\n                          <MenuItem value=\"job\">Job</MenuItem>\r\n                          <MenuItem value=\"lead\">Lead</MenuItem>\r\n                          <MenuItem value=\"good_lead\">Good Lead</MenuItem>\r\n                          <MenuItem value=\"hot\">Hot</MenuItem>\r\n                          <MenuItem value=\"rejected\">Rejected</MenuItem>\r\n                          <MenuItem value=\"closed\">Closed</MenuItem>\r\n                        </Select>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Select\r\n                          labelId=\"demo-controlled-open-select-label\"\r\n                          name={row.id}\r\n                          key={index}\r\n                          value={row.call_status}\r\n                          onClose={handleClose}\r\n                          onOpen={handleOpen}\r\n                          onChange={callHandleChange}\r\n                        >\r\n                          <MenuItem value=\"\"></MenuItem>\r\n                          <MenuItem value=\"first_interview\">\r\n                            First Interview\r\n                          </MenuItem>\r\n                          <MenuItem value=\"technical_interview\">\r\n                            Technical Interview\r\n                          </MenuItem>\r\n                          <MenuItem value=\"follow_up\">Follow Up</MenuItem>\r\n                        </Select>\r\n                      </TableCell>\r\n\r\n                      <TableCell>\r\n                        <IconButton aria-label=\"edit\">\r\n                          <EditIcon\r\n                            fontSize=\"large\"\r\n                            onClick={() =>\r\n                              history.push({\r\n                                pathname: \"/lead_edit\",\r\n                                state: { detail: row }\r\n                              })\r\n                            }\r\n                          />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={job.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  users: state.userReducer.users\r\n});\r\nadminjobList.propTypes = {\r\n  deleteJob: PropTypes.func.isRequired,\r\n  fetchUser: PropTypes.func.isRequired,\r\n  users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteJob, fetchUser })(adminjobList);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pdf from \"react-to-pdf\";\r\nconst ref = React.createRef();\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0\r\n    },\r\n    li: {\r\n      listStyle: \"none\"\r\n    }\r\n  },\r\n  appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`\r\n  },\r\n  toolbar: {\r\n    flexWrap: \"wrap\"\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5)\r\n  },\r\n  heroContent: {\r\n    padding: theme.spacing(8, 0, 6)\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.palette.grey[700]\r\n        : theme.palette.grey[200]\r\n  },\r\n  cardPricing: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"baseline\",\r\n    marginBottom: theme.spacing(2),\r\n    fontSize: \"2rem\"\r\n  },\r\n  card: {\r\n    maxWidth: \"623px\",\r\n    margin: \"0 auto\"\r\n  },\r\n  cardHeader1: {\r\n    border: \"2px solid #000\",\r\n    marginBottom: \"23px\",\r\n    padding: \"10px\"\r\n  },\r\n  cardBody1: {\r\n    border: \"1px solid #000\"\r\n  },\r\n  cardContentRight: {\r\n    padding: \"20px\",\r\n    borderRight: \"1px solid\"\r\n  },\r\n  cardContentLeft: {\r\n    padding: \"20px\"\r\n  },\r\n  cardContentInner: {\r\n    marginBottom: \"8px\"\r\n  }\r\n}));\r\n\r\nconst Pricing = ({ history, location }) => {\r\n  const classes = useStyles();\r\n\r\n  const [formData, setFormData] = React.useState(location.state.detail);\r\n  return (\r\n    <React.Fragment>\r\n      <div class=\"container\">\r\n        <Pdf targetRef={ref} filename=\"code-example.pdf\">\r\n          {({ toPdf }) => <button onClick={toPdf}>Generate Pdf</button>}\r\n        </Pdf>\r\n        <div class=\"card\" className={classes.card} ref={ref}>\r\n          <div class=\"card-header\" className={classes.cardHeader1}>\r\n            <strong>Appllied at :</strong>\r\n            {formData.createdAt}\r\n\r\n            <span class=\"float-right\">\r\n              <strong>Status:</strong> {formData.status}\r\n            </span>\r\n          </div>\r\n          <div class=\"card-body\" className={classes.cardBody1}>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <div className={classes.cardContentRight}>\r\n                  <div className={classes.cardContentInner}>\r\n                    <strong>Name :</strong>\r\n                    {formData.client_name}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Company Name :</b>\r\n                    {formData.companyName}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Location :</b>\r\n                    {formData.location}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Email:</b> {formData.email}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Website:</b> {formData.website}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-sm-6\">\r\n                <div className={classes.cardContentLeft}>\r\n                  <div className={classes.cardContentInner}>\r\n                    <strong>Phone Number:</strong>\r\n                    {formData.phone_number}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <strong>Call Time:</strong>\r\n                    {formData.call_time}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Time Zone:</b>\r\n                    {formData.time_zone}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Call Status:</b>\r\n                    {formData.call_status}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Lead Status:</b>\r\n                    {formData.lead_status}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pricing;\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport compose from \"recompose/compose\";\r\nimport { updateLead } from \"../../../actions/job\";\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"65%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"45%\"\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: \"300px\",\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n\r\n  button: {\r\n    width: \"100%\",\r\n    marginTop: \"5%\"\r\n  }\r\n});\r\n\r\nconst editLead = ({ classes, children, history, location, updateLead }) => {\r\n  const [formData, setFormData] = useState(location.state.detail);\r\n\r\n  const {\r\n    id,\r\n    profile,\r\n    job_title,\r\n    salary,\r\n    source,\r\n    email,\r\n    website,\r\n    client_name,\r\n    phone_number,\r\n    call_time,\r\n    time_zone,\r\n    call_date\r\n  } = formData;\r\n  const onChangeHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    updateLead(\r\n      id,\r\n      profile,\r\n      job_title,\r\n      salary,\r\n      source,\r\n      email,\r\n      website,\r\n      client_name,\r\n      phone_number,\r\n      call_time,\r\n      time_zone,\r\n      call_date,\r\n      history\r\n    );\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <IconButton aria-label=\"edit\">\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              onClick={() => history.push(\"/leads_list/\")}\r\n            />\r\n          </IconButton>\r\n          <Avatar className={classes.avatar}>\r\n            <Edit />\r\n          </Avatar>\r\n\r\n          <Typography align=\"center\" variant=\"headline\">\r\n            Edit Lead\r\n          </Typography>\r\n          <form onSubmit={onSubmitHandler}>\r\n            <TextField\r\n              id=\"job_title\"\r\n              label=\"Job Title\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.job_title}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <TextField\r\n              id=\"profile\"\r\n              label=\"Profile\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.profile}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"salary\"\r\n              label=\"Salary\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.salary}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"client_name\"\r\n              label=\"Client Name\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              placeholder=\"enter client name\"\r\n              className={classes.textField}\r\n              value={formData.client_name}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"source\"\r\n              label=\"Source\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              placeholder=\"enter source\"\r\n              className={classes.textField}\r\n              value={formData.source}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              placeholder=\"enter @mail\"\r\n              className={classes.textField}\r\n              value={formData.email}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"website\"\r\n              label=\"Website\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.website}\r\n              placeholder=\"enter website\"\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <TextField\r\n              id=\"phone_number\"\r\n              label=\"Phone Number\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.phone_number}\r\n              placeholder=\"enter phone number\"\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"call_time\"\r\n              label=\"Call Time\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.call_time}\r\n              placeholder=\"enter call time\"\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <TextField\r\n              id=\"time_zone\"\r\n              label=\"Time Zone\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.time_zone}\r\n              placeholder=\"enter time zone\"\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <TextField\r\n              id=\"call_date\"\r\n              margin=\"normal\"\r\n              type=\"date\"\r\n              className={classes.textField}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Update Lead\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\neditLead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  updateJob: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(null, { updateLead })\r\n)(editLead);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  text: {\r\n    padding: \"28px\",\r\n    fontFamily: \"initial\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n\r\nexport default function salesDetail({ history }) {\r\n  const [data, SetData] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const alert = useAlert();\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  useEffect(() => {\r\n    axios.get( \"/api/job/my_leads\").then(res => {\r\n      SetData(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  const callHandleChange = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      lead_status: e.target.value\r\n    });\r\n    try {\r\n      const res = axios\r\n        .post( \"/api/job/lead_status\", body, config)\r\n        .then(response => {\r\n          alert.success(\" Lead Status Changed !\");\r\n          setCount(count + 1);\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.center}>My Leads</h1>\r\n\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Company Name</TableCell>\r\n            <TableCell>Client Name</TableCell>\r\n            <TableCell>Profile</TableCell>\r\n            <TableCell>Call Date</TableCell>\r\n            <TableCell>Call Time</TableCell>\r\n            <TableCell>Time Zone</TableCell>\r\n            <TableCell>Call Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(row => (\r\n            <TableRow hover key={row.id}>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.companyName}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.client_name}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.profile}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.call_date}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.call_time}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.time_zone}\r\n              </TableCell>\r\n              <TableCell>\r\n                <Select\r\n                  labelId=\"demo-controlled-open-select-label\"\r\n                  name={row.id}\r\n                  value={row.lead_status}\r\n                  onClose={handleClose}\r\n                  onOpen={handleOpen}\r\n                  onChange={callHandleChange}\r\n                >\r\n                  <MenuItem value=\"\"></MenuItem>\r\n                  <MenuItem value=\"done\">Done</MenuItem>\r\n                  <MenuItem value=\"not done\">Not Done</MenuItem>\r\n                  <MenuItem value=\"Need to Rescedule\">\r\n                    Need To Reschedule\r\n                  </MenuItem>\r\n                </Select>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\n\r\n// const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  text: {\r\n    padding: \"28px\",\r\n    fontFamily: \"initial\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n\r\nexport default function salesDetail({ history }) {\r\n  const [data, SetData] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    axios.get( \"/api/job/lead_scedule\").then(res => {\r\n      SetData(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.center}>Leads Scheduler</h1>\r\n\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Call Time</TableCell>\r\n            <TableCell>Time Zone</TableCell>\r\n            <TableCell>Call Date</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(row => (\r\n            <TableRow>\r\n              <TableCell>{row.leadId.name}</TableCell>\r\n              <TableCell>{row.call_time}</TableCell>\r\n              <TableCell>{row.time_zone}</TableCell>\r\n\r\n              <TableCell>{row.call_date}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser } from \"../../../actions/user\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { deleteUser } from \"../../../actions/user\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Registration Number\",\r\n    minWidth: 100,\r\n\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Name\",\r\n    minWidth: 100,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Designation\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Role\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  tableWrapper: {\r\n    maxHeight: 622,\r\n    overflow: \"auto\"\r\n  },\r\n  jobHeader: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"initial\",\r\n    color: \"blue\"\r\n  },\r\n  delete: {\r\n    backgroundColor: \"red,\"\r\n  }\r\n});\r\n\r\nconst userList = ({ fetchUser, users, history }) => {\r\n  //const alert = useAlert();\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [count]);\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.jobHeader}>User List</h1>\r\n      <div className={classes.tableWrapper}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    key={row.id}\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: \"/user_details\",\r\n                        state: { detail: row }\r\n                      })\r\n                    }\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.registrationNumber}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{row.designation}</TableCell>\r\n                    <TableCell align=\"right\">{row.role}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={users.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"previous page\"\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"next page\"\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.userReducer.users\r\n});\r\nuserList.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n  users: PropTypes.array.isRequired\r\n};\r\n//\r\nexport default connect(mapStateToProps, { fetchUser })(userList);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { userDetails } from \"../../../actions/user\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport compose from \"recompose/compose\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"65%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"45%\"\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: \"300px\",\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    marginTop: \"5%\"\r\n  },\r\n  list: {\r\n    margin: \"0px -139px\"\r\n  }\r\n});\r\n\r\nconst userDetail = ({\r\n  classes,\r\n  children,\r\n  history,\r\n  location,\r\n  userDetails,\r\n  weeklyuserData,\r\n  monthlyuserData\r\n}) => {\r\n  //const alert = useAlert();\r\n  const [formData, setFormData] = useState(location.state.detail);\r\n\r\n  useEffect(() => {\r\n    console.log(\"user Details\");\r\n    userDetails(formData.registrationNumber, formData.role);\r\n  });\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <IconButton aria-label=\"edit\">\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              onClick={() => history.push(\"/user_report/\")}\r\n            />\r\n          </IconButton>\r\n          <Avatar className={classes.avatar}>\r\n            <Edit />\r\n          </Avatar>\r\n\r\n          <Typography align=\"center\" variant=\"headline\">\r\n            User Details\r\n            <h2>{formData.name}</h2>\r\n            {formData.role == \"user\" ? (\r\n              <ul class=\"list-group\" className={classes.list}>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Role\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {formData.role}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Previous Week Applied Job\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {weeklyuserData}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Previous Month Applied Job\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {monthlyuserData}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            ) : (\r\n              <ul class=\"list-group\" className={classes.list}>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Role\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {formData.role}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Previous Week Calls\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {weeklyuserData}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Previous Month Calls\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {monthlyuserData}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            )}\r\n          </Typography>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nuserDetail.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  userDetails: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  weeklyuserData: state.userReducer.weeklyuserData,\r\n  monthlyuserData: state.userReducer.monthlyuserData\r\n});\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(mapStateToProps, { userDetails })\r\n)(userDetail);\r\n","import React, { Fragment } from \"react\";\r\nimport { Router, Switch } from \"react-router-dom\";\r\nimport createBrowserHistory from \"history/createBrowserHistory\";\r\n\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport SignInPage from \"../pages/SignInPage\";\r\nimport SignUpPage from \"../pages/SignUpPage\";\r\nimport DashboardPage from \"../pages/DashboardPage\";\r\nimport AddPostPage from \"../pages/AddPostPage\";\r\nimport Alert from \"../pages/Alert\";\r\nimport JobList from \"../pages/sales/JobList\";\r\nimport AdminJobList from \"../pages/sales/adminJobList\";\r\nimport EditJob from \"../pages/sales/JobEdit\";\r\nimport SalesDetails from \"../pages/sales/salesDetail\";\r\nimport UserList from \"../pages/sales/UserList\";\r\nimport EditUser from \"../pages/sales/EditUser\";\r\nimport LeadsList from \"../pages/sales/leads/LeadList\";\r\nimport LeadDetails from \"../pages/sales/leads/LeadDetails\";\r\nimport EditLead from \"../pages/sales/leads/LeadEdit\";\r\nimport MyLeads from \"../pages/sales/leads/MyLead\";\r\nimport LeadSchedule from \"../pages/sales/leads/LeadCallList\";\r\nimport UserReport from \"../pages/sales/user/UserReport\";\r\nimport UserDetails from \"../pages/sales/user/UserDetails\";\r\nconst history = createBrowserHistory();\r\n\r\nexport default () => {\r\n  return (\r\n    <Fragment>\r\n      <Alert />\r\n      <Router history={history}>\r\n        <Switch>\r\n          <PublicRoute exact path=\"/\" component={SignInPage} />\r\n          <PublicRoute path=\"/signup\" component={SignUpPage} />\r\n          <PrivateRoute path=\"/dashboard\" component={DashboardPage} />\r\n          <PrivateRoute path=\"/addpost\" component={AddPostPage} />\r\n          <PrivateRoute path=\"/user_list\" component={UserList} />\r\n          <PrivateRoute path=\"/edit\" component={EditUser} />\r\n          <PrivateRoute path=\"/job_list\" component={JobList} />\r\n          <PrivateRoute path=\"/admin_job_list\" component={AdminJobList} />\r\n          <PrivateRoute path=\"/job_edit\" component={EditJob} />\r\n          <PrivateRoute path=\"/sales_daily_details\" component={SalesDetails} />\r\n          <PrivateRoute path=\"/leads_list\" component={LeadsList} />\r\n          <PrivateRoute path=\"/lead_details\" component={LeadDetails} />\r\n          <PrivateRoute path=\"/lead_edit\" component={EditLead} />\r\n          <PrivateRoute path=\"/my_leads\" component={MyLeads} />\r\n          <PrivateRoute path=\"/lead_scedule\" component={LeadSchedule} />\r\n          <PrivateRoute path=\"/user_report\" component={UserReport} />\r\n          <PrivateRoute path=\"/user_details\" component={UserDetails} />\r\n        </Switch>\r\n      </Router>\r\n    </Fragment>\r\n  );\r\n};\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGOUT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  user: [],\r\n  loading: true,\r\n  error: {},\r\n  isAuth: false\r\n};\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuth: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuth: false,\r\n        loading: false,\r\n        user: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAIL,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_MONTHLY_DETAILS_SUCCESS,\r\n  USER_MONTHLY_DETAILS_FAIL,\r\n  USER_WEEKLY_DETAILS_SUCCESS,\r\n  USER_WEEKLY_DETAILS_FAIL\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  monthlyuserData: [],\r\n  weeklyuserData: [],\r\n  error: {},\r\n  loading: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case USER_WEEKLY_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        weeklyuserData: payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case USER_MONTHLY_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        monthlyuserData: payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case USER_UPDATE_FAIL:\r\n    case USER_DELETE_FAIL:\r\n    case USER_MONTHLY_DETAILS_FAIL:\r\n    case USER_WEEKLY_DETAILS_FAIL:\r\n    case FETCH_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: true\r\n      };\r\n    case USER_UPDATE_SUCCESS:\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  JOB_ADD_SUCCESS,\r\n  JOB_ADD_FAIL,\r\n  FETCH_JOB_DATA_SUCCESS,\r\n  FETCH_JOB_DATA_FAIL,\r\n  JOB_DELETE_FAIL,\r\n  JOB_DELETE_SUCCESS,\r\n  JOB_UPDATE_SUCCESS,\r\n  JOB_UPDATE_FAIL,\r\n  LEAD_UPDATE_FAIL,\r\n  LEAD_UPDATE_SUCCESS\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  job: [],\r\n  error: {},\r\n  newjob: [],\r\n  loading: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case JOB_ADD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        newjob: null,\r\n        loading: false\r\n      };\r\n    case FETCH_JOB_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        job: payload,\r\n        loading: false\r\n      };\r\n    case LEAD_UPDATE_FAIL:\r\n    case JOB_UPDATE_FAIL:\r\n    case FETCH_JOB_DATA_FAIL:\r\n    case JOB_DELETE_FAIL:\r\n    case JOB_ADD_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: payload\r\n      };\r\n    case JOB_UPDATE_SUCCESS:\r\n    case LEAD_UPDATE_SUCCESS:\r\n    case JOB_DELETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport authReducer from \"../reducers/auth\";\r\nimport userReducer from \"../reducers/user\";\r\nimport alertReducer from \"../reducers/alert\";\r\nimport JobReducer from \"../reducers/job\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  authReducer,\r\n  userReducer,\r\n  alertReducer,\r\n  JobReducer\r\n});\r\nconst middel = [thunk];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(...middel))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nimport AppRouter from \"./routers/AppRouter\";\r\nimport setAuthToken from \"../src/utills/setAuthToken\";\r\nimport store from \"./store/store\";\r\nimport { loadUser } from \"./actions/auth\";\r\nimport { positions, Provider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst options = {\r\n  timeout: 5000,\r\n  position: positions.TOP_RIGHT\r\n};\r\nexport default () => {\r\n  React.useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n  return (\r\n    <Provider template={AlertTemplate} {...options}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./store/store\";\r\nimport * as serviceWorker from './serviceWorker';\r\n// import('dotenv').config();\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#8561c5\",\r\n      main: \"#673ab7\",\r\n      dark: \"#482880\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    secondary: deepOrange\r\n  }\r\n});\r\nconsole.log(process.env);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline>\r\n        <App />\r\n      </CssBaseline>\r\n    </MuiThemeProvider>\r\n  </Provider>,\r\n  document.getElementById(\"app\")\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}