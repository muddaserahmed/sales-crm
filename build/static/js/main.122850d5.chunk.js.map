{"version":3,"sources":["components/NavSide.js","actions/alert.js","actions/types.js","utills/setAuthToken.js","actions/auth.js","components/NavMain.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/SignInForm.js","pages/SignInPage.js","components/SignUpForm.js","pages/SignUpPage.js","pages/DashboardPage.js","components/PostForm.js","pages/AddPostPage.js","pages/Alert.js","actions/job.js","pages/sales/AddJob.js","pages/sales/JobList.js","pages/sales/exportCsv.js","pages/sales/adminJobList.js","pages/sales/JobEdit.js","pages/sales/salesDetail.js","actions/user.js","pages/sales/UserList.js","pages/sales/EditUser.js","pages/sales/leads/LeadList.js","pages/sales/leads/LeadDetails.js","pages/sales/leads/LeadEdit.js","pages/sales/leads/MyLead.js","pages/sales/leads/LeadCallList.js","pages/sales/user/UserReport.js","pages/sales/user/UserDetails.js","routers/AppRouter.js","reducers/auth.js","reducers/user.js","reducers/alert.js","reducers/job.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["compose","withStyles","theme","root","color","withTheme","user","classes","useState","open","setOpen","userOpen","setuserOpen","leadsOpen","setleadsOpen","i","length","raceName","role","name","ListItem","button","component","Link","to","ListItemIcon","className","ListItemText","primary","onClick","Collapse","in","timeout","unmountOnExit","List","disablePadding","Fragment","setAlert","msg","alert_type","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","BASE_URL","process","loadUser","a","localStorage","get","res","data","logIn","registration_number","password","history","config","body","JSON","stringify","console","log","post","push","errors","response","forEach","error","NavMain","state","anchor","renderButtons","props","auth","profile","h4","Button","handleLogout","rightMostButton","pushRight","logout","handleDrawerOpen","setState","handleDrawerClose","handleChangeAnchor","event","target","value","this","children","registrationNumber","drawer","Drawer","variant","paper","drawerPaper","drawerHeader","header","IconButton","direction","Divider","before","after","appFrame","AppBar","classNames","appBar","appBarShift","Toolbar","disableGutters","aria-label","menuButton","hide","Typography","logoText","noWrap","content","contentShift","React","Component","flexGrow","fontSize","height","width","zIndex","overflow","position","display","backgroundColor","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","marginLeft","marginRight","textDecoration","alignItems","justifyContent","padding","mixins","toolbar","palette","background","default","spacing","unit","margin","withRouter","connect","authReducer","isAuth","rest","Route","render","Redirect","layout","breakpoints","up","marginTop","flexDirection","avatar","secondary","main","form","submit","formData","setFormData","onChangesHandler","e","Paper","Avatar","onSubmit","preventDefault","FormControl","fullWidth","InputLabel","htmlFor","Input","autoComplete","onChange","autoFocus","LoginPage","SignInForm","gutters","paddingTop","paddingBottom","minHeight","textField","signUp","designation","elevation","container","TextField","label","Select","MenuItem","SignUpPage","SignUpForm","h1","fontFamily","jumbo","ul","fontWeight","job","SetJob","lead","SetLead","goodLead","SetGoodLead","hotLead","SetHotLead","closedLead","SetClosedLead","rejectlead","SetRejectLead","mJob","SetMJob","mLead","SetMLead","mGoodLead","SetMGoodLead","mHotLead","SetMHotLead","mClosedLead","SetMClosedLead","mRejectlead","SetMRejectLead","useEffect","then","result","class","style","undefined","PostForm","align","placeholder","multiline","rows","size","marginBottom","AddPostPage","divStyle","opacity","top","left","border","borderRadius","alerts","alertReducer","key","alert","map","fetchJob","deleteJob","useStyles","makeStyles","modal","boxShadow","shadows","compExist","float","buttonform","typography","error1","right","error2","textAlign","addJob","company_name","job_title","url","location","salary","count","elementType","elementConfig","validation","required","valid","touched","fromIsInvalid","setFromIsInvalid","exist","setExist","setExistComp","setCompExist","onChangeHandler","elementIdentifier","updatedForm","updatedElement","rules","isValid","trim","validityCheck","formIsValid","elemIdentifier","companyName","filter","item","toLowerCase","searchCompany","orderHandler","fromElementArray","noValidate","elem","for","disabled","formElementLoop","listStyleType","comp","index","createdAt","columns","minWidth","format","toLocaleString","toFixed","tableWrapper","jobHeader","JobReducer","useAlert","dailyJob","setDailyJob","setCount","page","setPage","rowsPerPage","setRowsPerPage","success","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","row","status","scope","TablePagination","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","CsvDataService","filename","keys","Object","csvContent","join","k","cell","Date","toString","replace","search","blob","Blob","navigator","msSaveBlob","link","document","createElement","download","URL","createObjectURL","setAttribute","visibility","appendChild","click","removeChild","desc","b","orderBy","headCells","numeric","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","Checkbox","indeterminate","checked","inputProps","headCell","sortDirection","TableSortLabel","active","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","text","dark","title","flex","EnhancedTableToolbar","exportData","clsx","Tooltip","table","overflowX","clip","setOrder","setOrderBy","selected","setSelected","dense","setDense","match","setMatch","setJob","handleChange","message","handleClose","handleOpen","emptyRows","Math","min","lists","newList","list","includes","window","confirm","filteredItems","exportItems","UserName","CompanyName","JobTitle","Profile","Status","exportToCsv","aria-labelledby","newSelecteds","n","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","isItemSelected","indexOf","labelId","selectedIndex","newSelected","concat","handleClick","aria-checked","tabIndex","jobId","onClose","onOpen","pathname","detail","colSpan","parseInt","FormControlLabel","control","updateJob","center","salesDetail","SetData","Total","reduce","prev","cur","Badge","badgeContent","userId","fetchUser","maxHeight","delete","users","userReducer","deleteUser","hover","updateUser","setRole","setProfile","assigToHandler","assignTo","callHandleChange","call_status","client_name","ref","createRef","li","listStyle","borderBottom","divider","flexWrap","toolbarTitle","heroContent","cardHeader","grey","cardPricing","card","maxWidth","cardHeader1","cardBody1","cardContentRight","borderRight","cardContentLeft","cardContentInner","Pricing","targetRef","toPdf","email","website","phone_number","call_time","time_zone","lead_status","updateLead","source","call_date","leadId","weeklyuserData","monthlyuserData","userDetails","createBrowserHistory","Router","Switch","exact","path","SignInPage","DashboardPage","UserList","EditUser","JobList","AdminJobList","EditJob","SalesDetails","LeadsList","LeadDetails","EditLead","MyLeads","LeadSchedule","UserReport","UserDetails","initialState","getItem","loading","newjob","rootReducer","combineReducers","action","setItem","removeItem","middel","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","options","positions","TOP_RIGHT","Boolean","hostname","createMuiTheme","contrastText","deepOrange","ReactDOM","CssBaseline","template","AlertTemplate","AppRouter","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.122850d5.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState}from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport compose from \"recompose/compose\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport List from \"@material-ui/core/List\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport WorkOutlineIcon from \"@material-ui/icons/WorkOutline\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    color: \"white\"\r\n  }\r\n});\r\nconst mailFolderListItems = ({ user, classes }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [userOpen, setuserOpen] = useState(false);\r\n  const [leadsOpen, setleadsOpen] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n  const userHandleClick = () => {\r\n    setuserOpen(!userOpen);\r\n  };\r\n\r\n  const leadsHandleClick = () => {\r\n    setleadsOpen(!leadsOpen);\r\n  };\r\n\r\n  if (user) {\r\n    for (var i = 0; i < user.length; i++) {\r\n      var raceName = user[i].role;\r\n      var name = user[i].name;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <ListItem button component={Link} to=\"/dashboard\">\r\n        <ListItemIcon>\r\n          <DashboardIcon className={classes.root} />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      {raceName == \"user\" || raceName == \"super_admin\" ? (\r\n        <ListItem button onClick={handleClick}>\r\n          <ListItemIcon>\r\n            <WorkOutlineIcon className={classes.root} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Sales\" />\r\n          {open ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {raceName == \"user\" || raceName == \"super_admin\" ? (\r\n            <ListItem button component={Link} to=\"/job_list\">\r\n              <ListItemIcon>\r\n                <ListIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Job List\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {raceName == \"super_admin\" ? (\r\n            <ListItem button component={Link} to=\"/admin_job_list\">\r\n              <ListItemIcon>\r\n                <SupervisorAccountIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Sales Admin\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {raceName == \"super_admin\" ? (\r\n            <ListItem button component={Link} to=\"/sales_daily_details\">\r\n              <ListItemIcon>\r\n                <WorkIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Daily Job\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n      {raceName == \"super_admin\" || raceName == \"admin\" ? (\r\n        <ListItem button onClick={userHandleClick}>\r\n          <ListItemIcon>\r\n            <PersonIcon className={classes.root} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"User\" />\r\n          {userOpen ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <Collapse in={userOpen} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {raceName == \"super_admin\" ? (\r\n            <ListItem button component={Link} to=\"/user_list\">\r\n              <ListItemIcon>\r\n                <ListIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"User List\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {raceName == \"admin\" && name == \"Muddasir Ahmed\" ? (\r\n            <ListItem button component={Link} to=\"/user_report\">\r\n              <ListItemIcon>\r\n                <ListIcon className={classes.root} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"User Report\" />\r\n            </ListItem>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </List>\r\n      </Collapse>\r\n      {raceName == \"admin\" || raceName == \"super_admin\" ? (\r\n        <React.Fragment>\r\n          <ListItem button onClick={leadsHandleClick}>\r\n            <ListItemIcon>\r\n              <WorkOutlineIcon className={classes.root} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Leads\" />\r\n            {leadsOpen ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={leadsOpen} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {raceName == \"super_admin\" ? (\r\n                <ListItem button component={Link} to=\"/leads_list\">\r\n                  <ListItemIcon>\r\n                    <ListIcon className={classes.root} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Leads List\" />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {raceName == \"super_admin\" || raceName == \"admin\" ? (\r\n                <ListItem button component={Link} to=\"/my_leads\">\r\n                  <ListItemIcon>\r\n                    <ListIcon className={classes.root} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"My Leads\" />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {raceName == \"super_admin\" || raceName == \"admin\" ? (\r\n                <ListItem button component={Link} to=\"/lead_scedule\">\r\n                  <ListItemIcon>\r\n                    <ListIcon className={classes.root} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Lead Scheduler\" />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </List>\r\n          </Collapse>\r\n        </React.Fragment>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default compose(withStyles(styles, { withTheme: true }))(\r\n  mailFolderListItems\r\n);\r\n","import uuid from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\nexport const setAlert = (msg, alert_type) => dispatch => {\r\n  const id = uuid.v4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alert_type, id }\r\n  });\r\n\r\n  setTimeout(\r\n    () =>\r\n      dispatch({\r\n        type: REMOVE_ALERT,\r\n        payload: id\r\n      }),\r\n    2000\r\n  );\r\n};\r\n","export const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n//Job\r\nexport const JOB_ADD_SUCCESS = \"JOB_ADD_SUCCESS\";\r\nexport const JOB_ADD_FAIL = \"JOB_ADD_FAIL\";\r\nexport const FETCH_JOB_DATA_SUCCESS = \"FETCH_JOB_DATA_SUCCESS\";\r\nexport const FETCH_JOB_DATA_FAIL = \"FETCH_JOB_DATA_FAIL\";\r\nexport const JOB_DELETE_SUCCESS = \"JOB_DELETE_SUCCESS\";\r\nexport const JOB_DELETE_FAIL = \"JOB_DELETE_FAIL\";\r\nexport const JOB_UPDATE_SUCCESS = \"JOB_UPDATE_SUCCESS\";\r\nexport const JOB_UPDATE_FAIL = \"JOB_UPDATE_FAIL\";\r\n//User\r\nexport const FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\";\r\nexport const FETCH_USER_FAIL = \"FETCH_USER_FAIL\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_MONTHLY_DETAILS_SUCCESS = \"USER_MONTHLY_DETAILS_SUCCESS\";\r\nexport const USER_MONTHLY_DETAILS_FAIL = \"USER_MONTHLY_DETAILS_FAIL\";\r\nexport const USER_WEEKLY_DETAILS_SUCCESS = \"USER_WEEKLY_DETAILS_SUCCESS\";\r\nexport const USER_WEEKLY_DETAILS_FAIL = \"USER_WEEKLY_DETAILS_FAIL\";\r\n//Lead\r\nexport const LEAD_UPDATE_SUCCESS = \"LEAD_UPDATE_SUCCESS\";\r\nexport const LEAD_UPDATE_FAIL = \"LEAD_UPDATE_FAIL\";\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGOUT\r\n} from \"../actions/types\";\r\nimport setAuthToken from \"../utills/setAuthToken\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get ( BASE_URL + \"/api/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\nexport const signUp = (\r\n  registration_number,\r\n  name,\r\n  designation,\r\n  password,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    registration_number,\r\n    name,\r\n    designation,\r\n    password\r\n  });\r\n  try {\r\n    const res = await axios.post ( BASE_URL + \"/api/user\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n    history.push(\"/dashboard\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    const error1 = error.response.data.msg;\r\n    if (error1) {\r\n      dispatch(setAlert(error));\r\n    }\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const logIn = (\r\n  registration_number,\r\n  password,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    registration_number,\r\n    password\r\n  });\r\n  \r\n  console.log(BASE_URL);  \r\n  try {\r\n    const res = await axios.post( BASE_URL + \"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    const error1 = error.response.data.msg;\r\n    if (error1) {\r\n      dispatch(setAlert(error));\r\n    }\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport MailFolderListItemsfrom from \"./NavSide\";\r\n\r\nimport { logout } from \"../actions/auth\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  header: {\r\n    fontSize: \"12px\"\r\n  },\r\n  appFrame: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    zIndex: 1,\r\n    overflow: \"scroll\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    width: \"100%\"\r\n  },\r\n  appBar: {\r\n    position: \"absolute\",\r\n    width: \"100vw\",\r\n    backgroundColor: \"#1c304e\",\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  \"appBarShift-left\": {\r\n    marginLeft: drawerWidth\r\n  },\r\n  \"appBarShift-right\": {\r\n    marginRight: drawerWidth\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20\r\n  },\r\n  logoText: {\r\n    textDecoration: \"none\",\r\n    marginLeft: \"21px\"\r\n  },\r\n  rightMostButton: {\r\n    marginRight: 12\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    width: drawerWidth,\r\n    backgroundColor: \"#1c304e\",\r\n    color: \"white\"\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar\r\n  },\r\n  pushRight: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing.unit * 3,\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  \"content-left\": {\r\n    marginLeft: -drawerWidth\r\n  },\r\n  \"content-right\": {\r\n    marginRight: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  \"contentShift-left\": {\r\n    marginLeft: 0\r\n  },\r\n  \"contentShift-right\": {\r\n    marginRight: 0\r\n  },\r\n  color: {\r\n    color: \"white\"\r\n  },\r\n  h4: {\r\n    margin: \"0 auto\"\r\n  }\r\n});\r\n\r\nclass NavMain extends React.Component {\r\n  state = {\r\n    open: false,\r\n    anchor: \"left\"\r\n  };\r\n\r\n  renderButtons = () => {\r\n    const { auth, classes, user } = this.props;\r\n\r\n    if (user) {\r\n      for (var i = 0; i < user.length; i++) {\r\n        var name = user[i].name;\r\n        var profile = user[i].profile;\r\n      }\r\n    }\r\n    if (auth) {\r\n      return (\r\n        <React.Fragment>\r\n          <h4 className={classes.h4}>Profile name :{profile}</h4>\r\n\r\n          <Button\r\n            onClick={this.handleLogout}\r\n            color=\"inherit\"\r\n            to=\"/\"\r\n            component={Link}\r\n            className={classes.rightMostButton}\r\n          >\r\n            Log Out\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Button\r\n            color=\"inherit\"\r\n            to=\"/\"\r\n            component={Link}\r\n            className={classes.pushRight}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Button\r\n            to=\"/signup\"\r\n            component={Link}\r\n            color=\"inherit\"\r\n            className={classes.rightMostButton}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  handleLogout = () => {\r\n    this.props.logout();\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleChangeAnchor = event => {\r\n    this.setState({\r\n      anchor: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme, children, user, auth } = this.props;\r\n    const { anchor, open } = this.state;\r\n    if (user) {\r\n      for (var i = 0; i < user.length; i++) {\r\n        var name = user[i].name;\r\n        var profile = user[i].profile;\r\n        var registrer = user[i].registrationNumber;\r\n      }\r\n    }\r\n    var drawer = (\r\n      <Drawer\r\n        variant=\"persistent\"\r\n        anchor={anchor}\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <h4 className={classes.header}>{name}</h4>\r\n          <IconButton\r\n            className={classes.color}\r\n            onClick={this.handleDrawerClose}\r\n          >\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <MailFolderListItemsfrom user={user} />\r\n        </List>\r\n      </Drawer>\r\n    );\r\n\r\n    let before = null;\r\n    let after = null;\r\n\r\n    if (anchor === \"left\") {\r\n      before = drawer;\r\n    } else {\r\n      after = drawer;\r\n    }\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.appFrame}>\r\n          <AppBar\r\n            className={classNames(classes.appBar, {\r\n              [classes.appBarShift]: open,\r\n              [classes[`appBarShift-${anchor}`]]: open\r\n            })}\r\n          >\r\n            <Toolbar disableGutters={!open}>\r\n              {auth ? (\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"Open drawer\"\r\n                  onClick={this.handleDrawerOpen}\r\n                  className={classNames(\r\n                    classes.menuButton,\r\n                    open && classes.hide\r\n                  )}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              ) : (\r\n                \" \"\r\n              )}\r\n              <Typography\r\n                component={Link}\r\n                className={classes.logoText}\r\n                to=\"/\"\r\n                variant=\"title\"\r\n                color=\"inherit\"\r\n                noWrap\r\n              >\r\n                Cloud Tek\r\n              </Typography>\r\n\r\n              {this.renderButtons()}\r\n            </Toolbar>\r\n          </AppBar>\r\n          {before}\r\n          <main\r\n            className={classNames(\r\n              classes.content,\r\n              classes[`content-${anchor}`],\r\n              {\r\n                [classes.contentShift]: open,\r\n                [classes[`contentShift-${anchor}`]]: open\r\n              }\r\n            )}\r\n          >\r\n            <div className={classes.drawerHeader} />\r\n            {children}\r\n          </main>\r\n          {after}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNavMain.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  auth: PropTypes.bool.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n  user: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.authReducer.isAuth,\r\n  user: state.authReducer.user\r\n});\r\n\r\nexport default compose(\r\n  withStyles(styles, { withTheme: true }),\r\n  withRouter,\r\n  connect(mapStateToProps, { logout })\r\n)(NavMain);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport NavMain from \"../components/NavMain\";\r\n\r\nexport const PrivateRoute = ({ auth, component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth ? (\r\n        <NavMain>\r\n          <Component {...props} />\r\n        </NavMain>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.authReducer.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NavMain from \"../components/NavMain\";\r\n\r\nexport const PublicRoute = ({ isAuth, component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuth ? (\r\n        <Redirect to=\"/dashboard\" />\r\n      ) : (\r\n        <NavMain>\r\n          <Component {...props} />\r\n        </NavMain>\r\n      )\r\n    }\r\n  />\r\n);\r\nPublicRoute.propTypes = {\r\n  auth: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.authReducer.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport LockIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { logIn } from \"../actions/auth\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    display: \"block\", // Fix IE11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE11 issue.\r\n    marginTop: theme.spacing.unit\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3\r\n  }\r\n});\r\n\r\nconst SignIn = ({ logIn, history, classes, auth }) => {\r\n  // if (auth) {\r\n  //    return <Redirect to=\"/dashboard\" />;\r\n  // }\r\n  const [formData, setFormData] = useState({\r\n    registration_number: null,\r\n    password: null\r\n  });\r\n\r\n  const { registration_number, password } = formData;\r\n  const onChangesHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    logIn(registration_number, password, history);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockIcon />\r\n          </Avatar>\r\n          <Typography variant=\"headline\">Sign in</Typography>\r\n          <form onSubmit={submitHandler} className={classes.form}>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n              <InputLabel htmlFor=\"registration_number\">\r\n                Registration Number\r\n              </InputLabel>\r\n              <Input\r\n                id=\"registration_number\"\r\n                type=\"text\"\r\n                name=\"registration_number\"\r\n                autoComplete=\"registration_number\"\r\n                onChange={onChangesHandler}\r\n                autoFocus\r\n              />\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" fullWidth>\r\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={onChangesHandler}\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"raised\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onChange={onChangesHandler}\r\n            >\r\n              Sign in\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  logIn: PropTypes.func.isRequired,\r\n  auth: PropTypes.bool.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.authReducer.isAuth\r\n});\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(mapStateToProps, { logIn })\r\n)(withRouter(SignIn));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SignInForm from \"../components/SignInForm\";\r\nimport { logIn } from \"../actions/auth\";\r\n\r\nexport class LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  // onSubmit = e => {\r\n  //   e.preventDefault();\r\n  //   this.props.login();\r\n  //   //this.props.history.push(\"/dashboard\");\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <SignInForm onSubmit={this.onSubmit} /> */}\r\n        <SignInForm />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { logIn })(LoginPage);\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport HowToReg from \"@material-ui/icons/HowToReg\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { signUp } from \"../actions/auth\";\r\nimport { withRouter } from \"react-router-dom\";\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    width: \"50%\",\r\n    margin: \"0 auto\",\r\n    minHeight: \"250px\"\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    display: \"block\", // Fix IE11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    marginTop: \"5%\",\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nconst PaperSheet = ({ signUp, classes, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    registration_number: null,\r\n    name: null,\r\n    designation: null,\r\n    password: null\r\n  });\r\n\r\n  const { registration_number, name, designation, password } = formData;\r\n  const onChangesHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const setSelectHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      designation: e.target.value\r\n    });\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    signUp(registration_number, name, designation, password, history);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper} elevation={1}>\r\n          <Avatar className={classes.avatar}>\r\n            <HowToReg />\r\n          </Avatar>\r\n          <Typography variant=\"headline\">Sign Up</Typography>\r\n          <form\r\n            onSubmit={submitHandler}\r\n            className={classes.container}\r\n            autoComplete=\"on\"\r\n          >\r\n            <TextField\r\n              autoFocus\r\n              id=\"registration_number\"\r\n              label=\"Registration Number\"\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              onChange={onChangesHandler}\r\n            />\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              onChange={onChangesHandler}\r\n            />\r\n            <br></br>\r\n            <br></br>\r\n            <Select\r\n              id=\"select\"\r\n              label=\"Designation\"\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              onChange={setSelectHandler}\r\n            >\r\n              <MenuItem value=\"Developer\">Developer</MenuItem>\r\n\r\n              <MenuItem value=\"Project Manger\">Project Manger</MenuItem>\r\n              <MenuItem value=\"Sales Manger\">Sales Manger</MenuItem>\r\n              <MenuItem value=\"Sales\">Sales User</MenuItem>\r\n            </Select>\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              onChange={onChangesHandler}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nPaperSheet.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  signUp: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(null, { signUp })\r\n)(withRouter(PaperSheet));\r\n","import React from \"react\";\r\n\r\nimport SignUpForm from \"../components/SignUpForm\";\r\n\r\nexport const SignUpPage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <SignUpForm />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst h1 = {\r\n  marginTop: \"-45px\",\r\n  fontFamily: \"serif\",\r\n  color: \"white\"\r\n};\r\n\r\nconst jumbo = {\r\n  backgroundColor: \"#285151\"\r\n};\r\nconst ul = {\r\n  fontWeight: \"bold\",\r\n  fontFamily: \"serif\",\r\n  fontSize: \"15px\"\r\n};\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nconst DashboardPage = ({ user }) => {\r\n  //week state\r\n  const [job, SetJob] = React.useState([]);\r\n  const [lead, SetLead] = React.useState([]);\r\n  const [goodLead, SetGoodLead] = React.useState([]);\r\n  const [hotLead, SetHotLead] = React.useState([]);\r\n  const [closedLead, SetClosedLead] = React.useState([]);\r\n  const [rejectlead, SetRejectLead] = React.useState([]);\r\n\r\n  //month state\r\n  const [mJob, SetMJob] = React.useState([]);\r\n  const [mLead, SetMLead] = React.useState([]);\r\n  const [mGoodLead, SetMGoodLead] = React.useState([]);\r\n  const [mHotLead, SetMHotLead] = React.useState([]);\r\n  const [mClosedLead, SetMClosedLead] = React.useState([]);\r\n  const [mRejectlead, SetMRejectLead] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    // jobs count\r\n    axios.get ( BASE_URL + \"/api/job/status_job_count\").then(res => {\r\n      SetJob(res.data.result);\r\n    });\r\n    //leads count\r\n    axios.get ( BASE_URL + \"/api/job/status_lead_count\").then(res => {\r\n      SetLead(res.data.result);\r\n    });\r\n    // good leads count\r\n    axios.get ( BASE_URL + \"/api/job/status_good_lead_count\").then(res => {\r\n      SetGoodLead(res.data.result);\r\n    });\r\n    // hot leads count\r\n    axios.get ( BASE_URL + \"/api/job/status_hot_lead_count\").then(res => {\r\n      SetHotLead(res.data.result);\r\n    });\r\n    // closed lead count\r\n    axios.get ( BASE_URL + \"/api/job/status_closed_lead_count\").then(res => {\r\n      SetClosedLead(res.data.result);\r\n    });\r\n    //rejected lead count\r\n    axios.get ( BASE_URL + \"/api/job/status_rejected_lead_count\").then(res => {\r\n      SetRejectLead(res.data.result);\r\n    });\r\n\r\n    // Previous Monthly Job Report\r\n    axios.get ( BASE_URL + \"/api/job/status_job_monthly_count\").then(res => {\r\n      SetMJob(res.data.result);\r\n    });\r\n\r\n    // Previous Monthly Lead Report\r\n    axios.get ( BASE_URL + \"/api/job/status_lead_monthly_count\").then(res => {\r\n      SetMLead(res.data.result);\r\n    });\r\n\r\n    // Previous Monthly Good Lead Report\r\n    axios\r\n      .get ( BASE_URL + \"/api/job/status_good_lead_monthly_count\")\r\n      .then(res => {\r\n        SetMGoodLead(res.data.result);\r\n      });\r\n\r\n    // Previous Monthly Good Lead Report\r\n    axios.get ( BASE_URL + \"/api/job/status_hot_lead_month_count\").then(res => {\r\n      SetMHotLead(res.data.result);\r\n    });\r\n\r\n    // Previous Monthly Good Lead Report\r\n    axios\r\n      .get ( BASE_URL + \"/api/job/status_closed_lead_monthly_count\")\r\n      .then(res => {\r\n        SetMClosedLead(res.data.result);\r\n      });\r\n\r\n    // Previous Monthly Good Lead Report\r\n    axios\r\n      .get ( BASE_URL + \"/api/job/status_rejected_lead_monthly_count\")\r\n      .then(res => {\r\n        SetMRejectLead(res.data.result);\r\n      });\r\n  }, []);\r\n\r\n  if (user) {\r\n    for (var i = 0; i < user.length; i++) {\r\n      var raceName = user[i].role;\r\n      var name = user[i].name;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {raceName === \"super_admin\" ? (\r\n        <div class=\"row\">\r\n          <div class=\"col-md-5 offset-md-1\">\r\n            <div style={jumbo} class=\"jumbotron jumbotron-fluid\">\r\n              <h1 style={h1} class=\"text-center\">\r\n                Previous Week Report\r\n              </h1>\r\n              <ul style={ul} class=\"list-group\">\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Applied Job\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {job.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {lead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Good Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {goodLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Hot Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {hotLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Closed Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {closedLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Rejected Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {rejectlead.length}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-5\">\r\n            <div style={jumbo} class=\"jumbotron jumbotron-fluid\">\r\n              <h1 style={h1} class=\"text-center\">\r\n                Previous Month Report\r\n              </h1>\r\n              <ul style={ul} class=\"list-group\">\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Applied Job\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mJob.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Good Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mGoodLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Hot Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mHotLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Closed Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mClosedLead.length}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Total Rejected Leads\r\n                  <span class=\"badge badge-primary badge-pill\">\r\n                    {mRejectlead.length}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h1>Welcome \"{name}\" to Sales CRM</h1>\r\n      )}\r\n      {raceName === undefined ? (\r\n        <p>Thanks for Registration wait Untill an Admin Verified you</p>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.authReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(DashboardPage);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n  \r\n  layout: {\r\n    width: '100%',\r\n    display: 'block',\r\n    margin: '0 auto',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '80%'\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '65%'\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '45%'\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: '300px',\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    marginTop: '5%'\r\n  }\r\n});\r\n\r\nclass PostForm extends React.Component {\r\n  render() {\r\n    const { classes, children } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <Edit />\r\n            </Avatar>\r\n            <Typography align=\"center\" variant=\"headline\">Add Post</Typography>\r\n            <form>\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Title\"\r\n                placeholder=\"Enter a title\"\r\n           \r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Category\"\r\n                placeholder=\"Enter a category\"\r\n                \r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />{' '}\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Thumbnail URL\"\r\n                placeholder=\"http://www.website.com/thumbnail.jpg\"\r\n                \r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Main Image URL\"\r\n                \r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />{' '}\r\n              <TextField\r\n                id=\"full-width\"\r\n                label=\"Body\"\r\n                placeholder=\"Write your post here\"\r\n                multiline\r\n                rows={6}\r\n                margin=\"normal\"\r\n                className={classes.textField}\r\n              />\r\n              <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              className={classes.button}\r\n              >Save Post</Button>\r\n            </form>\r\n          </Paper>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPostForm.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PostForm);\r\n","import React from 'react';\r\n\r\nimport PostForm from '../components/PostForm';\r\n\r\nexport const AddPostPage = () => {\r\n  return (\r\n    <div>\r\n      <PostForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddPostPage;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n//import \"./alert.css\";\r\n\r\nconst divStyle = {\r\n  padding: \"10px 0px 10px 28px\",\r\n  width: \"405px\",\r\n  opacity: \"0.9\",\r\n  color: \"white\",\r\n  background: \"red\",\r\n  position: \"absolute\",\r\n  top: \"34px\",\r\n  left: \"561px\",\r\n  zIndex: \"11111\",\r\n  border: \"5px solid #780c0c\",\r\n  borderRadius: \"20px\",\r\n  // zIndex: \"10000\"\r\n};\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 && (\r\n    <ul style={divStyle} key={alert.id}>\r\n      {alerts.map(alert => (\r\n        <li> {alert.msg}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  alerts: state.alertReducer\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"../actions/alert\";\r\n\r\nimport {\r\n  JOB_ADD_SUCCESS,\r\n  JOB_ADD_FAIL,\r\n  FETCH_JOB_DATA_SUCCESS,\r\n  FETCH_JOB_DATA_FAIL,\r\n  JOB_DELETE_SUCCESS,\r\n  JOB_DELETE_FAIL,\r\n  JOB_UPDATE_SUCCESS,\r\n  JOB_UPDATE_FAIL,\r\n  LEAD_UPDATE_SUCCESS,\r\n  LEAD_UPDATE_FAIL\r\n} from \"../actions/types\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const fetchJob = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get ( BASE_URL + \"/api/job\");\r\n\r\n    dispatch({\r\n      type: FETCH_JOB_DATA_SUCCESS,\r\n      payload: res.data.result\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_JOB_DATA_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const addJob = (\r\n  company_name,\r\n  job_title,\r\n  url,\r\n  profile,\r\n  location,\r\n  salary,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    company_name,\r\n    job_title,\r\n    url,\r\n    profile,\r\n    location,\r\n    salary\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post ( BASE_URL + \"/api/job\", body, config);\r\n\r\n    dispatch({\r\n      type: JOB_ADD_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    return 1;\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_ADD_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteJob = id => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    id\r\n  });\r\n  try {\r\n    const res = await axios.post ( BASE_URL + \"/api/job/delete\", body, config);\r\n\r\n    dispatch({\r\n      type: JOB_DELETE_SUCCESS\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: JOB_DELETE_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateJob = (\r\n  id,\r\n  company_name,\r\n  url,\r\n  profile,\r\n  job_title,\r\n  salary,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    id,\r\n    company_name,\r\n    url,\r\n    profile,\r\n    job_title,\r\n    salary\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post ( BASE_URL + \"/api/job/edit\", body, config);\r\n\r\n    dispatch({\r\n      type: JOB_UPDATE_SUCCESS\r\n    });\r\n\r\n    history.push(\"/admin_job_list/\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_UPDATE_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n//update lead\r\n\r\nexport const updateLead = (\r\n  id,\r\n  profile,\r\n  job_title,\r\n  salary,\r\n  source,\r\n  email,\r\n  website,\r\n  client_name,\r\n  phone_number,\r\n  call_time,\r\n  time_zone,\r\n  call_date,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    id,\r\n    profile,\r\n    job_title,\r\n    salary,\r\n    source,\r\n    email,\r\n    website,\r\n    client_name,\r\n    phone_number,\r\n    call_time,\r\n    time_zone,\r\n    call_date\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post ( BASE_URL + \"/api/job/lead/edit\", body, config);\r\n\r\n    dispatch({\r\n      type: LEAD_UPDATE_SUCCESS\r\n    });\r\n\r\n    history.push(\"/leads_list/\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: LEAD_UPDATE_FAIL\r\n    });\r\n  }\r\n};\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport HowToReg from \"@material-ui/icons/HowToReg\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addJob } from \"../../actions/job\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid 6c697859\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    width: \"58%\"\r\n  },\r\n  compExist: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid 6c697859\",\r\n    boxShadow: theme.shadows[5],\r\n\r\n    width: \"41%\",\r\n    float: \"right\",\r\n    marginTop: \"-481px\"\r\n  },\r\n  button: {\r\n    position: \"relative\"\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: 200\r\n    }\r\n  },\r\n  h1: {\r\n    fontSize: \"25px\",\r\n    fontFamily: \"auto\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: \"31\"\r\n  },\r\n  buttonform: {\r\n    marginTop: \"5%\",\r\n    width: \"100%\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    margin: \" 0 auto\"\r\n  },\r\n  typography: {\r\n    fontFamily: \"initial\",\r\n    fontSize: \"25px\",\r\n    position: \"relative\",\r\n    left: \"260px\"\r\n  },\r\n  error1: {\r\n    position: \"absolute\",\r\n    right: \"777px\",\r\n    top: \"226px\",\r\n    color: \"red\"\r\n  },\r\n  error2: {\r\n    position: \"absolute\",\r\n    top: \"227px\",\r\n    color: \"red\"\r\n  },\r\n  profile: {\r\n    marginTop: \"24px\"\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n    fontSize: \"20px\",\r\n    color: \"red\"\r\n  }\r\n}));\r\n\r\nconst AddJob = ({ addJob, history, job, count }) => {\r\n  const [dailyJob, setDailyJob] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n      job_title: {\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type: 'text',\r\n          placeholder: 'Job Title'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      location: {\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type: 'text',\r\n          placeholder: 'Location'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      company_name: {\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type: 'text',\r\n          placeholder: 'Company Name'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },  \r\n      url: {\r\n        elementType: 'input',\r\n        elementConfig:{\r\n          type: 'text',\r\n          placeholder: 'URL'\r\n        },\r\n        value: '',\r\n        validation: {\r\n            required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n    // profile: null,\r\n    // salary: '',\r\n  });\r\n  const [fromIsInvalid, setFromIsInvalid] = useState(true);\r\n  const [exist, setExist] = useState(\"\");\r\n  const [existComp, setExistComp] = useState(\"\");\r\n  const [compExist, setCompExist] = useState([]);\r\n\r\n  // const { company_name, job_title, url, profile, location, salary } = formData;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const searchCompany = (companyName) => {\r\n    const exist = job.filter(item => {\r\n      return item.companyName.toLowerCase() === companyName.toLowerCase();\r\n    });\r\n\r\n    if (exist.length > 0) {\r\n      setExistComp(\"Company Name Already Exist\");\r\n      setCompExist(exist);\r\n      setExist(true);\r\n    } else {\r\n      setCompExist([]);\r\n      setExistComp(\"\");\r\n      setExist(false);\r\n    }\r\n  };\r\n  \r\n  \r\n  const validityCheck = (value, rules) => {\r\n    let isValid = true;\r\n    if(rules){\r\n      if(rules.required){\r\n          isValid = value.trim() !== '' && isValid;\r\n      };   \r\n    }\r\n    return isValid;\r\n  }\r\n  \r\n  const onChangeHandler = (e, elementIdentifier) => {\r\n    const updatedForm = {\r\n      ...formData\r\n    }\r\n    const updatedElement = {\r\n      ...updatedForm[elementIdentifier]\r\n    }\r\n    updatedElement.value = e.target.value;\r\n    updatedElement.valid = validityCheck(updatedElement.value, updatedElement.validation);\r\n    updatedElement.touched = true;\r\n    updatedForm[elementIdentifier] = updatedElement;\r\n    \r\n    let formIsValid = true;\r\n    for (let elemIdentifier in updatedForm){\r\n        formIsValid = updatedForm[elemIdentifier].valid && formIsValid;\r\n    }\r\n    \r\n    if(elementIdentifier === 'company_name'){\r\n      searchCompany(e.target.value);\r\n    }\r\n    setFormData(updatedForm);\r\n    setFromIsInvalid(!formIsValid);\r\n  }\r\n  const orderHandler = (e) => {\r\n    e.preventDefault(); \r\n    addJob(\r\n      formData.company_name.value, \r\n      formData.job_title.value, \r\n      formData.url.value, \r\n      null, //profile\r\n      formData.location.value,\r\n      null,//salary \r\n      history\r\n      );\r\n    count(      \r\n      formData.company_name.value, \r\n      formData.job_title.value, \r\n      formData.url.value, \r\n      );\r\n  }\r\n\r\n  const formElementLoop = () => {\r\n    const fromElementArray = [];\r\n    for (let key in formData){\r\n      fromElementArray.push({\r\n          id: key,\r\n          config: formData[key]\r\n      });\r\n    };\r\n    let form = (\r\n      <form onSubmit={orderHandler} noValidate autoComplete=\"off\">\r\n          {\r\n            fromElementArray.map( elem => (\r\n              <div className=\"form-group\">\r\n                <label for={elem.id}>{elem.config.elementConfig.placeholder}</label>\r\n                <input\r\n                  id={elem.id}\r\n                  className=\"form-control\"\r\n                  type={elem.config.elementConfig.type}\r\n                  value={elem.config.value}\r\n                  onChange={(event) => {onChangeHandler(event, elem.id)}}\r\n                />\r\n              </div>\r\n            ))\r\n          }\r\n          <button type=\"submit\" disabled={exist || fromIsInvalid} className=\"btn btn-primary\">Add Job</button>\r\n      </form>\r\n      );\r\n    return form;\r\n  }\r\n    return (\r\n      <div>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <HowToReg />\r\n        </Avatar>\r\n        <Typography\r\n          className={classes.typography}\r\n          align=\"center\"\r\n          variant=\"headline\"\r\n          >\r\n          Add new Job\r\n        </Typography>\r\n\r\n          {formElementLoop()}\r\n      </div>\r\n      {compExist.length > 0 ? (\r\n        <div className={classes.compExist}>\r\n          <h1 className={classes.header}>Job Alredy Exist</h1>\r\n          <ul style={{ listStyleType: \"none\", textAlign: \"left\", margin: \"0\" }}>\r\n            {compExist.map((comp, index) => {\r\n              return (\r\n                <Fragment>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}>Company Name:</b>\r\n                    <span>{comp.companyName}</span>\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}>URL:</b>\r\n                    <span>{comp.url}</span>\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}>Job Title:</b>\r\n                    <span>{comp.job_title}</span>\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}>Profile:</b>{\" \"}\r\n                    <span>{comp.profile}</span>\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      marginBottom: \"5px\",\r\n                      fontSize: \"15px\",\r\n                      display: \"inline-block\",\r\n                      width: \"50%\"\r\n                    }}\r\n                  >\r\n                    <b style={{ marginRight: \"10px\" }}> CreateAt:</b>\r\n                    <span>{comp.createdAt}</span>\r\n                  </li>\r\n                  <hr></hr>\r\n                </Fragment>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nAddJob.propTypes = {\r\n  addJob: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addJob })(withRouter(AddJob));\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport AddJob from \"./AddJob\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { fetchJob } from \"../../actions/job\";\r\nimport axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nconst columns = [\r\n  { id: \"name\", label: \"Company Name\", minWidth: 170 },\r\n  { id: \"code\", label: \"Job Title\", minWidth: 100, align: \"center\" },\r\n  { id: \"code\", label: \"URL\", minWidth: 100, align: \"center\" },\r\n  {\r\n    id: \"population\",\r\n    label: \"Profile\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"size\",\r\n    label: \"Location\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n\r\n  {\r\n    id: \"density\",\r\n    label: \"Status\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toFixed(2)\r\n  },\r\n  {\r\n    id: \"density\",\r\n    label: \"Applied Date\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toFixed(2)\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  tableWrapper: {\r\n    overflow: \"auto\"\r\n  },\r\n  jobHeader: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"initial\",\r\n    color: \"blue\"\r\n  }\r\n});\r\nconst jobList = ({ fetchJob, job }) => {\r\n  const alert = useAlert();\r\n  const [dailyJob, setDailyJob] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchJob();\r\n    axios.get ( BASE_URL + \"/api/job/user_daily_job_created\").then(res => {\r\n      setDailyJob(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const countAdd = (company_name, job_title, url) => {\r\n    \r\n    if (company_name && url) {\r\n      alert.success(\"Job Successfully Added !\");\r\n    }\r\n    setCount(count + 1);\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      <AddJob job={dailyJob} count={countAdd} />\r\n      <div className={classes.tableWrapper}>\r\n        <h1 className={classes.jobHeader}>Job List</h1>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {dailyJob\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => {\r\n                return (\r\n                  <TableRow\r\n                    className={\r\n                      row.status === \"job\"\r\n                        ? classes.job\r\n                        : row.status === \"lead\"\r\n                        ? classes.lead\r\n                        : \"\"\r\n                    }\r\n                    key={row.id}\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.companyName}\r\n                    </TableCell>\r\n\r\n                    <TableCell align=\"right\">{row.job_title}</TableCell>\r\n                    <TableCell align=\"right\">{row.url}</TableCell>\r\n                    <TableCell align=\"right\">{row.profile}</TableCell>\r\n                    <TableCell align=\"right\">{row.location}</TableCell>\r\n\r\n                    <TableCell align=\"right\">{row.status}</TableCell>\r\n                    <TableCell align=\"right\">{row.createdAt}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={dailyJob.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"previous page\"\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"next page\"\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  job: state.JobReducer.job\r\n});\r\njobList.propTypes = {\r\n  fetchJob: PropTypes.func.isRequired,\r\n  job: PropTypes.array.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchJob })(jobList);\r\n","export class CsvDataService {\r\n  static exportToCsv(filename, rows) {\r\n    if (!rows || !rows.length) {\r\n      return;\r\n    }\r\n    const separator = \",\";\r\n    const keys = Object.keys(rows[0]);\r\n    const csvContent =\r\n      keys.join(separator) +\r\n      \"\\n\" +\r\n      rows\r\n        .map(row => {\r\n          return keys\r\n            .map(k => {\r\n              let cell = row[k] === null || row[k] === undefined ? \"\" : row[k];\r\n              cell =\r\n                cell instanceof Date\r\n                  ? cell.toLocaleString()\r\n                  : cell.toString().replace(/\"/g, '\"\"');\r\n              if (cell.search(/(\"|,|\\n)/g) >= 0) {\r\n                cell = `\"${cell}\"`;\r\n              }\r\n              return cell;\r\n            })\r\n            .join(separator);\r\n        })\r\n        .join(\"\\n\");\r\n\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n    if (navigator.msSaveBlob) {\r\n      // IE 10+\r\n      navigator.msSaveBlob(blob, filename);\r\n    } else {\r\n      const link = document.createElement(\"a\");\r\n      if (link.download !== undefined) {\r\n        // Browsers that support HTML5 download attribute\r\n        const url = URL.createObjectURL(blob);\r\n        link.setAttribute(\"href\", url);\r\n        link.setAttribute(\"download\", filename);\r\n        link.style.visibility = \"hidden\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { CsvDataService } from \"./exportCsv\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { fetchJob } from \"../../actions/job\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteJob } from \"../../actions/job\";\r\nimport { useAlert } from \"react-alert\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Username\"\r\n  },\r\n  {\r\n    id: \"calories\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Company Name\"\r\n  },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"URL\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Status\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Action\" }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={order}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\"\r\n  }\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, deleteJob, exportData } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Job List\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Fragment>\r\n          <Tooltip title=\"Delete\" onClick={deleteJob}>\r\n            <IconButton aria-label=\"delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Export\" onClick={exportData}>\r\n            <IconButton aria-label=\"export\">\r\n              <GetAppIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Fragment>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  deleteJob: PropTypes.func.isRequired,\r\n  exportData: PropTypes.func.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 750\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1\r\n  },\r\n  textField: {\r\n    marginTop: \"12px\",\r\n    marginRight: \"22px\",\r\n    width: \"100%\"\r\n  },\r\n  job: {\r\n    backgroundColor: \"white\",\r\n    fontFamily: \"monospace\"\r\n  },\r\n  lead: {\r\n    backgroundColor: \"#008000bf\",\r\n    fontFamily: \"monospace\"\r\n  }\r\n}));\r\n\r\nconst adminjobList = ({ deleteJob, history }) => {\r\n  const alert = useAlert();\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"calories\");\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [dense, setDense] = useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [match, setMatch] = useState(\"Search\");\r\n  const [count, setCount] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [job, setJob] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get ( BASE_URL + \"/api/job\").then(res => {\r\n      setJob(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isDesc = orderBy === property && order === \"desc\";\r\n    setOrder(isDesc ? \"asc\" : \"desc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = job.map(n => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    var confirm = window.confirm(\"Do you want to Delete this Items ?\");\r\n    if (confirm === true) {\r\n      const filteredItems = job.filter(item => !selected.includes(item.id));\r\n      setJob(filteredItems);\r\n      deleteJob(selected);\r\n      alert.success(\"Job Successfully Deleted !\");\r\n    }\r\n  };\r\n\r\n  const ExportHandler = () => {\r\n    const exportItems = job.filter(item => selected.includes(item.id));\r\n    var download = [];\r\n\r\n    exportItems.forEach(user => {\r\n      download.push({\r\n        UserName: user.user.name,\r\n        CompanyName: user.companyName,\r\n        JobTitle: user.job_title,\r\n        URL: user.url,\r\n        Profile: user.profile,\r\n        Status: user.status\r\n      });\r\n    });\r\n\r\n    CsvDataService.exportToCsv(\"jobList.csv\", download);\r\n  };\r\n\r\n  const searchHandler = e => {\r\n    let lists = job;\r\n    console.log(\"search\", lists);\r\n    if (e.target.value) {\r\n      const newList = lists.filter(item => {\r\n        const list = item.companyName.toLowerCase();\r\n        const filter = e.target.value.toLowerCase();\r\n        return list.includes(filter);\r\n      });\r\n      if (newList.length > 0) {\r\n        console.log(\"in newlist\", lists);\r\n        setJob(newList);\r\n        setMatch(\"Match\");\r\n      } else {\r\n        setCount(count + 1);\r\n        setMatch(\"Does not Match\");\r\n      }\r\n    } else {\r\n      setCount(count + 1);\r\n      setMatch(\"Search\");\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      status: e.target.value\r\n    });\r\n    try {\r\n      const res = axios\r\n        .post ( BASE_URL + \"/api/job/changed_staus\", body, config)\r\n        .then(response => {\r\n          alert.success(\"Job Status Changed !\");\r\n          setCount(count + 1);\r\n          setSelected(\"\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const isSelected = id => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, job.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"search\"\r\n        label={match}\r\n        margin=\"normal\"\r\n        type=\"text\"\r\n        className={classes.textField}\r\n        placeholder=\"Search by Company Name ....\"\r\n        onChange={searchHandler}\r\n      />\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          deleteJob={handleDelete}\r\n          exportData={ExportHandler}\r\n        />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={job.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(job, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      onClick={event => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                      className={\r\n                        row.status == \"job\"\r\n                          ? classes.job\r\n                          : row.status === \"lead\"\r\n                          ? classes.lead\r\n                          : \" \"\r\n                      }\r\n                      key={row.id}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.jobId.name}\r\n                      </TableCell>\r\n                      <TableCell>{row.companyName}</TableCell>\r\n                      <TableCell>{row.url}</TableCell>\r\n                      <TableCell>\r\n                        <Select\r\n                          labelId=\"demo-controlled-open-select-label\"\r\n                          name={row.id}\r\n                          key={index}\r\n                          onClose={handleClose}\r\n                          onOpen={handleOpen}\r\n                          value={row.status}\r\n                          onChange={handleChange}\r\n                        >\r\n                          <MenuItem value=\"\"></MenuItem>\r\n                          <MenuItem value=\"job\">Job</MenuItem>\r\n                          <MenuItem value=\"lead\">Lead</MenuItem>\r\n                        </Select>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <IconButton aria-label=\"edit\">\r\n                          <EditIcon\r\n                            fontSize=\"large\"\r\n                            onClick={() =>\r\n                              history.push({\r\n                                pathname: \"/job_edit\",\r\n                                state: { detail: row }\r\n                              })\r\n                            }\r\n                          />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={job.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  job: state.JobReducer.job\r\n});\r\n\r\nadminjobList.propTypes = {\r\n  fetchJob: PropTypes.func,\r\n  deleteJob: PropTypes.func.isRequired,\r\n  fetchUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchJob, deleteJob })(adminjobList);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport compose from \"recompose/compose\";\r\nimport { updateJob } from \"../../actions/job\";\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"65%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"45%\"\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: \"300px\",\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    marginTop: \"5%\"\r\n  }\r\n});\r\n\r\nconst editJob = ({ classes, children, history, location, updateJob }) => {\r\n  const [formData, setFormData] = useState(location.state.detail);\r\n\r\n  const { id, companyName, url, profile, job_title, salary } = formData;\r\n  const onChangeHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    updateJob(id, companyName, url, profile, job_title, salary, history);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <IconButton aria-label=\"edit\">\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              onClick={() => history.push(\"/admin_job_list/\")}\r\n            />\r\n          </IconButton>\r\n          <Avatar className={classes.avatar}>\r\n            <Edit />\r\n          </Avatar>\r\n\r\n          <Typography align=\"center\" variant=\"headline\">\r\n            Edit Job\r\n          </Typography>\r\n          <form onSubmit={onSubmitHandler}>\r\n            <TextField\r\n              id=\"companyName\"\r\n              label=\"Company Name\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.companyName}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"job_title\"\r\n              label=\"Job Title\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.job_title}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"url\"\r\n              label=\"Url\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.url}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"profile\"\r\n              label=\"Profile\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.profile}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"salary\"\r\n              label=\"Salary\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.salary}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Update Job\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\neditJob.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  updateJob: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(null, { updateJob })\r\n)(editJob);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  text: {\r\n    padding: \"28px\",\r\n    fontFamily: \"initial\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n\r\nexport default function salesDetail() {\r\n  const [data, SetData] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    axios.get ( BASE_URL + \"/api/job/count\").then(res => {\r\n      SetData(res.data.result);\r\n    });\r\n  }, []);\r\n  if (data.length > 0) {\r\n    var Total = data.reduce(\r\n      (prev, cur) => parseInt(prev) + parseInt(cur.count),\r\n      0\r\n    );\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.center}>Daily Applied Job Details</h1>\r\n      <span className={classes.text}>Total Applied Job:</span>\r\n      <Badge badgeContent={Total} color=\"secondary\"></Badge>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Registration Number</TableCell>\r\n            <TableCell>Job Applied</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                User\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.userId}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Badge badgeContent={row.count} color=\"primary\"></Badge>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"../actions/alert\";\r\n\r\nimport {\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAIL,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_MONTHLY_DETAILS_SUCCESS,\r\n  USER_MONTHLY_DETAILS_FAIL,\r\n  USER_WEEKLY_DETAILS_SUCCESS,\r\n  USER_WEEKLY_DETAILS_FAIL\r\n} from \"../actions/types\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const fetchUser = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get ( BASE_URL + \"/api/user\");\r\n\r\n    dispatch({\r\n      type: FETCH_USER_SUCCESS,\r\n      payload: res.data.result\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_USER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete( `/api/user/${id}`);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (\r\n  registration_number,\r\n  name,\r\n  designation,\r\n  id,\r\n  role,\r\n  profile,\r\n  history\r\n) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    registration_number,\r\n    name,\r\n    designation,\r\n    id,\r\n    role,\r\n    profile\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post ( BASE_URL + \"/api/user/edit\", body, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS\r\n    });\r\n    history.push(\"/user_list/\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const userDetails = (registration_number, role) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    registration_number,\r\n    role\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post ( BASE_URL + \"/api/user/details\", body, config);\r\n\r\n    dispatch({\r\n      type: USER_WEEKLY_DETAILS_SUCCESS,\r\n      payload: res.data.result\r\n    });\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_WEEKLY_DETAILS_FAIL\r\n    });\r\n  }\r\n\r\n  //\r\n\r\n  try {\r\n    const res = await axios.post(\r\n       \"/api/user/monthly_details\",\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_MONTHLY_DETAILS_SUCCESS,\r\n      payload: res.data.result\r\n    });\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_MONTHLY_DETAILS_FAIL\r\n    });\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport AddJob from \"./AddJob\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser } from \"../../actions/user\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { deleteUser } from \"../../actions/user\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Registration Number\",\r\n    minWidth: 100,\r\n\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Name\",\r\n    minWidth: 100,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Designation\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Role\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Created At\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Action\",\r\n    label: \"Action\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  tableWrapper: {\r\n    maxHeight: 622,\r\n    overflow: \"auto\"\r\n  },\r\n  jobHeader: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"initial\",\r\n    color: \"blue\"\r\n  },\r\n  delete: {\r\n    backgroundColor: \"red,\"\r\n  }\r\n});\r\n\r\nconst userList = ({ fetchUser, users, deleteUser, history }) => {\r\n  const alert = useAlert();\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [count]);\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const userDelete = id => {\r\n    deleteUser(id);\r\n    setCount(count + 1);\r\n    alert.success(\"User Deleted !\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.jobHeader}>User List</h1>\r\n      <div className={classes.tableWrapper}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => {\r\n                return (\r\n                  <TableRow hover key={row.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.registrationNumber}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{row.designation}</TableCell>\r\n                    <TableCell align=\"right\">{row.role}</TableCell>\r\n                    <TableCell align=\"right\">{row.createdAt}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton aria-label=\"delete\">\r\n                        <DeleteIcon\r\n                          fontSize=\"large\"\r\n                          onClick={() => userDelete(row.registrationNumber)}\r\n                        />\r\n                      </IconButton>\r\n\r\n                      <IconButton aria-label=\"edit\">\r\n                        <EditIcon\r\n                          fontSize=\"large\"\r\n                          onClick={() =>\r\n                            history.push({\r\n                              pathname: \"/edit\",\r\n                              state: { detail: row }\r\n                            })\r\n                          }\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={users.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"previous page\"\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"next page\"\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.userReducer.users\r\n});\r\nuserList.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n  users: PropTypes.array.isRequired,\r\n  deleteUser: PropTypes.func.isRequired\r\n};\r\n//\r\nexport default connect(mapStateToProps, { fetchUser, deleteUser })(userList);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { updateUser } from \"../../actions/user\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"65%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"45%\"\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: \"300px\",\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    marginTop: \"5%\"\r\n  }\r\n});\r\n\r\nconst editUser = ({ classes, children, history, location, updateUser }) => {\r\n  const alert = useAlert();\r\n  const [formData, setFormData] = useState(location.state.detail);\r\n  const [open, setOpen] = useState(false);\r\n  const { registrationNumber, name, designation, id } = formData;\r\n  const [role, setRole] = useState(formData.role);\r\n  const [profile, setProfile] = useState(formData.profile);\r\n  const onChangeHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    updateUser(\r\n      registrationNumber,\r\n      name,\r\n      designation,\r\n      id,\r\n      role,\r\n      profile,\r\n      history\r\n    );\r\n    alert.success(\"User Updated !\");\r\n  };\r\n\r\n  const roleHandler = e => {\r\n    console.log(\"roleHandler ::::::::::::: \", e.target.value);\r\n    setRole(e.target.value);\r\n  };\r\n\r\n  const profileHandler = e => {\r\n    setProfile(e.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <IconButton aria-label=\"edit\">\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              onClick={() => history.push(\"/user_list/\")}\r\n            />\r\n          </IconButton>\r\n          <Avatar className={classes.avatar}>\r\n            <Edit />\r\n          </Avatar>\r\n\r\n          <Typography align=\"center\" variant=\"headline\">\r\n            Edit User\r\n          </Typography>\r\n          <form onSubmit={onSubmitHandler}>\r\n            <TextField\r\n              disabled\r\n              id=\"registrationNumber\"\r\n              label=\"Registration Number\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.registrationNumber}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.name}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"designation\"\r\n              label=\"Designation\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.designation}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <InputLabel id=\"demo-controlled-open-select-label\">Role</InputLabel>\r\n            <Select\r\n              // open={open}\r\n              // onClose={handleClose}\r\n              // onOpen={handleOpen}\r\n              onChange={roleHandler}\r\n              className={classes.textField}\r\n              value={role}\r\n            >\r\n              <MenuItem value=\"None\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"super_admin\">Super Admin</MenuItem>\r\n              <MenuItem value=\"admin\">Admin</MenuItem>\r\n              <MenuItem value=\"user\">User</MenuItem>\r\n            </Select>\r\n\r\n            <InputLabel id=\"demo-controlled-open-select-label\">\r\n              Profile\r\n            </InputLabel>\r\n            <Select\r\n              // open={open}\r\n              // onClose={handleClose}\r\n              // onOpen={handleOpen}\r\n              onChange={profileHandler}\r\n              className={classes.textField}\r\n              value={profile}\r\n            >\r\n              <MenuItem value=\"None\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"Ali Muhammad\">Ali Muhammad</MenuItem>\r\n              <MenuItem value=\"Amir Khan\">Amir Khan</MenuItem>\r\n              <MenuItem value=\"Kevan Jay\">Kevn Jay</MenuItem>\r\n            </Select>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Update User\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\neditUser.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  updateUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(null, { updateUser })\r\n)(editUser);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { CsvDataService } from \"../exportCsv\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteJob } from \"../../../actions/job\";\r\nimport { useAlert } from \"react-alert\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { fetchUser } from \"../../../actions/user\";\r\n// import { Document, Page } from \"react-pdf\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Client Name\"\r\n  },\r\n  {\r\n    id: \"calories\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Company Name\"\r\n  },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Job Title\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Assigned To\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Status\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Call\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Action\" }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={order}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\"\r\n  }\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, deleteJob, exportData } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Job List\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Fragment>\r\n          <Tooltip title=\"Delete\" onClick={deleteJob}>\r\n            <IconButton aria-label=\"delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Export\" onClick={exportData}>\r\n            <IconButton aria-label=\"export\">\r\n              <GetAppIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Fragment>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  deleteJob: PropTypes.func.isRequired,\r\n  exportData: PropTypes.func.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 750\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1\r\n  },\r\n  textField: {\r\n    marginTop: \"12px\",\r\n    marginRight: \"22px\",\r\n    width: \"100%\"\r\n  },\r\n  job: {\r\n    backgroundColor: \"#818675\",\r\n    fontFamily: \"monospace\"\r\n  },\r\n  lead: {\r\n    backgroundColor: \"#008000bf\",\r\n    fontFamily: \"monospace\"\r\n  }\r\n}));\r\n\r\nconst adminjobList = ({ deleteJob, history, fetchUser, users }) => {\r\n  const alert = useAlert();\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"calories\");\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [dense, setDense] = useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [match, setMatch] = useState(\"Search\");\r\n  const [count, setCount] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [job, setJob] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get ( BASE_URL + \"/api/job/leads\").then(res => {\r\n      setJob(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isDesc = orderBy === property && order === \"desc\";\r\n    setOrder(isDesc ? \"asc\" : \"desc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = job.map(n => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    var confirm = window.confirm(\"Do you want to Delete this Items ?\");\r\n    if (confirm == true) {\r\n      const filteredItems = job.filter(item => !selected.includes(item.id));\r\n      setJob(filteredItems);\r\n      deleteJob(selected);\r\n      alert.success(\"Job Successfully Deleted !\");\r\n    }\r\n  };\r\n\r\n  const ExportHandler = () => {\r\n    const exportItems = job.filter(item => selected.includes(item.id));\r\n    var download = [];\r\n\r\n    exportItems.forEach(user => {\r\n      download.push({\r\n        UserName: user.user.name,\r\n        CompanyName: user.companyName,\r\n        JobTitle: user.job_title,\r\n        URL: user.url,\r\n        Profile: user.profile,\r\n        Status: user.status\r\n      });\r\n    });\r\n\r\n    CsvDataService.exportToCsv(\"jobList.csv\", download);\r\n  };\r\n\r\n  const searchHandler = e => {\r\n    let lists = job;\r\n    console.log(\"search\", lists);\r\n    if (e.target.value) {\r\n      const newList = lists.filter(item => {\r\n        const list = item.companyName.toLowerCase();\r\n        const filter = e.target.value.toLowerCase();\r\n        return list.includes(filter);\r\n      });\r\n      if (newList.length > 0) {\r\n        console.log(\"in newlist\", lists);\r\n        setJob(newList);\r\n        setMatch(\"Match\");\r\n      } else {\r\n        setCount(count + 1);\r\n        setMatch(\"Does not Match\");\r\n      }\r\n    } else {\r\n      setCount(count + 1);\r\n      setMatch(\"Search\");\r\n    }\r\n  };\r\n\r\n  const assigToHandler = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      assignTo: e.target.value\r\n    });\r\n\r\n    try {\r\n      const res = axios\r\n        .post ( BASE_URL + \"/api/job/assign_to\", body, config)\r\n        .then(response => {\r\n          alert.success(\"Successfully Assigned !\");\r\n          setCount(count + 1);\r\n          setSelected(\"\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const callHandleChange = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      call_status: e.target.value\r\n    });\r\n    try {\r\n      const res = axios\r\n        .post ( BASE_URL + \"/api/job/call_status\", body, config)\r\n        .then(response => {\r\n          alert.success(\"Call Status Changed !\");\r\n          setCount(count + 1);\r\n          setSelected(\"\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      status: e.target.value\r\n    });\r\n    try {\r\n      const res = axios\r\n        .post ( BASE_URL + \"/api/job/changed_staus\", body, config)\r\n        .then(response => {\r\n          alert.success(\"Job Status Changed !\");\r\n          setCount(count + 1);\r\n          setSelected(\"\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const isSelected = id => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, job.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"search\"\r\n        label={match}\r\n        margin=\"normal\"\r\n        type=\"text\"\r\n        className={classes.textField}\r\n        placeholder=\"Search by Company Name ....\"\r\n        onChange={searchHandler}\r\n      />\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          deleteJob={handleDelete}\r\n          exportData={ExportHandler}\r\n        />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={job.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(job, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                      key={row.id}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                        onClick={() =>\r\n                          history.push({\r\n                            pathname: \"/lead_details\",\r\n                            state: { detail: row }\r\n                          })\r\n                        }\r\n                      >\r\n                        {row.client_name}\r\n                      </TableCell>\r\n                      <TableCell>{row.companyName}</TableCell>\r\n                      <TableCell>{row.job_title}</TableCell>\r\n\r\n                      <TableCell>\r\n                        <Select\r\n                          labelId=\"demo-controlled-open-select-label\"\r\n                          name={row.id}\r\n                          value={row.assignTo}\r\n                          key={index}\r\n                          onClose={handleClose}\r\n                          onOpen={handleOpen}\r\n                          onChange={assigToHandler}\r\n                        >\r\n                          <MenuItem value=\"\"></MenuItem>\r\n                          {users.map(user => {\r\n                            {\r\n                              return (\r\n                                <MenuItem value={user.registrationNumber}>\r\n                                  {user.name}\r\n                                </MenuItem>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </Select>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Select\r\n                          labelId=\"demo-controlled-open-select-label\"\r\n                          name={row.id}\r\n                          key={index}\r\n                          value={row.status}\r\n                          onClose={handleClose}\r\n                          onOpen={handleOpen}\r\n                          onChange={handleChange}\r\n                        >\r\n                          <MenuItem value=\"\"></MenuItem>\r\n                          <MenuItem value=\"job\">Job</MenuItem>\r\n                          <MenuItem value=\"lead\">Lead</MenuItem>\r\n                          <MenuItem value=\"good_lead\">Good Lead</MenuItem>\r\n                          <MenuItem value=\"hot\">Hot</MenuItem>\r\n                          <MenuItem value=\"rejected\">Rejected</MenuItem>\r\n                          <MenuItem value=\"closed\">Closed</MenuItem>\r\n                        </Select>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Select\r\n                          labelId=\"demo-controlled-open-select-label\"\r\n                          name={row.id}\r\n                          key={index}\r\n                          value={row.call_status}\r\n                          onClose={handleClose}\r\n                          onOpen={handleOpen}\r\n                          onChange={callHandleChange}\r\n                        >\r\n                          <MenuItem value=\"\"></MenuItem>\r\n                          <MenuItem value=\"first_interview\">\r\n                            First Interview\r\n                          </MenuItem>\r\n                          <MenuItem value=\"technical_interview\">\r\n                            Technical Interview\r\n                          </MenuItem>\r\n                          <MenuItem value=\"follow_up\">Follow Up</MenuItem>\r\n                        </Select>\r\n                      </TableCell>\r\n\r\n                      <TableCell>\r\n                        <IconButton aria-label=\"edit\">\r\n                          <EditIcon\r\n                            fontSize=\"large\"\r\n                            onClick={() =>\r\n                              history.push({\r\n                                pathname: \"/lead_edit\",\r\n                                state: { detail: row }\r\n                              })\r\n                            }\r\n                          />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={job.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  users: state.userReducer.users\r\n});\r\nadminjobList.propTypes = {\r\n  deleteJob: PropTypes.func.isRequired,\r\n  fetchUser: PropTypes.func.isRequired,\r\n  users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteJob, fetchUser })(adminjobList);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pdf from \"react-to-pdf\";\r\nconst ref = React.createRef();\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0\r\n    },\r\n    li: {\r\n      listStyle: \"none\"\r\n    }\r\n  },\r\n  appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`\r\n  },\r\n  toolbar: {\r\n    flexWrap: \"wrap\"\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5)\r\n  },\r\n  heroContent: {\r\n    padding: theme.spacing(8, 0, 6)\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.palette.grey[700]\r\n        : theme.palette.grey[200]\r\n  },\r\n  cardPricing: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"baseline\",\r\n    marginBottom: theme.spacing(2),\r\n    fontSize: \"2rem\"\r\n  },\r\n  card: {\r\n    maxWidth: \"623px\",\r\n    margin: \"0 auto\"\r\n  },\r\n  cardHeader1: {\r\n    border: \"2px solid #000\",\r\n    marginBottom: \"23px\",\r\n    padding: \"10px\"\r\n  },\r\n  cardBody1: {\r\n    border: \"1px solid #000\"\r\n  },\r\n  cardContentRight: {\r\n    padding: \"20px\",\r\n    borderRight: \"1px solid\"\r\n  },\r\n  cardContentLeft: {\r\n    padding: \"20px\"\r\n  },\r\n  cardContentInner: {\r\n    marginBottom: \"8px\"\r\n  }\r\n}));\r\n\r\nconst Pricing = ({ history, location }) => {\r\n  const classes = useStyles();\r\n\r\n  const [formData, setFormData] = React.useState(location.state.detail);\r\n  return (\r\n    <React.Fragment>\r\n      <div class=\"container\">\r\n        <Pdf targetRef={ref} filename=\"code-example.pdf\">\r\n          {({ toPdf }) => <button onClick={toPdf}>Generate Pdf</button>}\r\n        </Pdf>\r\n        <div class=\"card\" className={classes.card} ref={ref}>\r\n          <div class=\"card-header\" className={classes.cardHeader1}>\r\n            <strong>Appllied at :</strong>\r\n            {formData.createdAt}\r\n\r\n            <span class=\"float-right\">\r\n              <strong>Status:</strong> {formData.status}\r\n            </span>\r\n          </div>\r\n          <div class=\"card-body\" className={classes.cardBody1}>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <div className={classes.cardContentRight}>\r\n                  <div className={classes.cardContentInner}>\r\n                    <strong>Name :</strong>\r\n                    {formData.client_name}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Company Name :</b>\r\n                    {formData.companyName}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Location :</b>\r\n                    {formData.location}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Email:</b> {formData.email}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Website:</b> {formData.website}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-sm-6\">\r\n                <div className={classes.cardContentLeft}>\r\n                  <div className={classes.cardContentInner}>\r\n                    <strong>Phone Number:</strong>\r\n                    {formData.phone_number}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <strong>Call Time:</strong>\r\n                    {formData.call_time}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Time Zone:</b>\r\n                    {formData.time_zone}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Call Status:</b>\r\n                    {formData.call_status}\r\n                  </div>\r\n                  <div className={classes.cardContentInner}>\r\n                    <b>Lead Status:</b>\r\n                    {formData.lead_status}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pricing;\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport compose from \"recompose/compose\";\r\nimport { updateLead } from \"../../../actions/job\";\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"65%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"45%\"\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: \"300px\",\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n\r\n  button: {\r\n    width: \"100%\",\r\n    marginTop: \"5%\"\r\n  }\r\n});\r\n\r\nconst editLead = ({ classes, children, history, location, updateLead }) => {\r\n  const [formData, setFormData] = useState(location.state.detail);\r\n\r\n  const {\r\n    id,\r\n    profile,\r\n    job_title,\r\n    salary,\r\n    source,\r\n    email,\r\n    website,\r\n    client_name,\r\n    phone_number,\r\n    call_time,\r\n    time_zone,\r\n    call_date\r\n  } = formData;\r\n  const onChangeHandler = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    updateLead(\r\n      id,\r\n      profile,\r\n      job_title,\r\n      salary,\r\n      source,\r\n      email,\r\n      website,\r\n      client_name,\r\n      phone_number,\r\n      call_time,\r\n      time_zone,\r\n      call_date,\r\n      history\r\n    );\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <IconButton aria-label=\"edit\">\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              onClick={() => history.push(\"/leads_list/\")}\r\n            />\r\n          </IconButton>\r\n          <Avatar className={classes.avatar}>\r\n            <Edit />\r\n          </Avatar>\r\n\r\n          <Typography align=\"center\" variant=\"headline\">\r\n            Edit Lead\r\n          </Typography>\r\n          <form onSubmit={onSubmitHandler}>\r\n            <TextField\r\n              id=\"job_title\"\r\n              label=\"Job Title\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.job_title}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <TextField\r\n              id=\"profile\"\r\n              label=\"Profile\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.profile}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"salary\"\r\n              label=\"Salary\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.salary}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"client_name\"\r\n              label=\"Client Name\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              placeholder=\"enter client name\"\r\n              className={classes.textField}\r\n              value={formData.client_name}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"source\"\r\n              label=\"Source\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              placeholder=\"enter source\"\r\n              className={classes.textField}\r\n              value={formData.source}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              placeholder=\"enter @mail\"\r\n              className={classes.textField}\r\n              value={formData.email}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"website\"\r\n              label=\"Website\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.website}\r\n              placeholder=\"enter website\"\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <TextField\r\n              id=\"phone_number\"\r\n              label=\"Phone Number\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.phone_number}\r\n              placeholder=\"enter phone number\"\r\n              onChange={onChangeHandler}\r\n            />\r\n            <TextField\r\n              id=\"call_time\"\r\n              label=\"Call Time\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.call_time}\r\n              placeholder=\"enter call time\"\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <TextField\r\n              id=\"time_zone\"\r\n              label=\"Time Zone\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              value={formData.time_zone}\r\n              placeholder=\"enter time zone\"\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <TextField\r\n              id=\"call_date\"\r\n              margin=\"normal\"\r\n              type=\"date\"\r\n              className={classes.textField}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Update Lead\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\neditLead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  updateJob: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(null, { updateLead })\r\n)(editLead);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  text: {\r\n    padding: \"28px\",\r\n    fontFamily: \"initial\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n\r\nexport default function salesDetail({ history }) {\r\n  const [data, SetData] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const alert = useAlert();\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  useEffect(() => {\r\n    axios.get ( BASE_URL + \"/api/job/my_leads\").then(res => {\r\n      SetData(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  const callHandleChange = e => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      id: e.target.name,\r\n      lead_status: e.target.value\r\n    });\r\n    try {\r\n      const res = axios\r\n        .post ( BASE_URL + \"/api/job/lead_status\", body, config)\r\n        .then(response => {\r\n          alert.success(\" Lead Status Changed !\");\r\n          setCount(count + 1);\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.center}>My Leads</h1>\r\n\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Company Name</TableCell>\r\n            <TableCell>Client Name</TableCell>\r\n            <TableCell>Profile</TableCell>\r\n            <TableCell>Call Date</TableCell>\r\n            <TableCell>Call Time</TableCell>\r\n            <TableCell>Time Zone</TableCell>\r\n            <TableCell>Call Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(row => (\r\n            <TableRow hover key={row.id}>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.companyName}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.client_name}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.profile}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.call_date}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.call_time}\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/lead_details\",\r\n                    state: { detail: row }\r\n                  })\r\n                }\r\n              >\r\n                {row.time_zone}\r\n              </TableCell>\r\n              <TableCell>\r\n                <Select\r\n                  labelId=\"demo-controlled-open-select-label\"\r\n                  name={row.id}\r\n                  value={row.lead_status}\r\n                  onClose={handleClose}\r\n                  onOpen={handleOpen}\r\n                  onChange={callHandleChange}\r\n                >\r\n                  <MenuItem value=\"\"></MenuItem>\r\n                  <MenuItem value=\"done\">Done</MenuItem>\r\n                  <MenuItem value=\"not done\">Not Done</MenuItem>\r\n                  <MenuItem value=\"Need to Rescedule\">\r\n                    Need To Reschedule\r\n                  </MenuItem>\r\n                </Select>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  text: {\r\n    padding: \"28px\",\r\n    fontFamily: \"initial\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n\r\nexport default function salesDetail({ history }) {\r\n  const [data, SetData] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    axios.get ( BASE_URL + \"/api/job/lead_scedule\").then(res => {\r\n      SetData(res.data.result);\r\n    });\r\n  }, [count]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.center}>Leads Scheduler</h1>\r\n\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Call Time</TableCell>\r\n            <TableCell>Time Zone</TableCell>\r\n            <TableCell>Call Date</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(row => (\r\n            <TableRow>\r\n              <TableCell>{row.leadId.name}</TableCell>\r\n              <TableCell>{row.call_time}</TableCell>\r\n              <TableCell>{row.time_zone}</TableCell>\r\n\r\n              <TableCell>{row.call_date}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser } from \"../../../actions/user\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { deleteUser } from \"../../../actions/user\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Registration Number\",\r\n    minWidth: 100,\r\n\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Name\",\r\n    minWidth: 100,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Designation\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Designation\",\r\n    label: \"Role\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  tableWrapper: {\r\n    maxHeight: 622,\r\n    overflow: \"auto\"\r\n  },\r\n  jobHeader: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"initial\",\r\n    color: \"blue\"\r\n  },\r\n  delete: {\r\n    backgroundColor: \"red,\"\r\n  }\r\n});\r\n\r\nconst userList = ({ fetchUser, users, history }) => {\r\n  //const alert = useAlert();\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [count]);\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h1 className={classes.jobHeader}>User List</h1>\r\n      <div className={classes.tableWrapper}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    key={row.id}\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: \"/user_details\",\r\n                        state: { detail: row }\r\n                      })\r\n                    }\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.registrationNumber}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{row.designation}</TableCell>\r\n                    <TableCell align=\"right\">{row.role}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={users.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"previous page\"\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"next page\"\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.userReducer.users\r\n});\r\nuserList.propTypes = {\r\n  fetchUser: PropTypes.func.isRequired,\r\n  users: PropTypes.array.isRequired\r\n};\r\n//\r\nexport default connect(mapStateToProps, { fetchUser })(userList);\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { userDetails } from \"../../../actions/user\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport compose from \"recompose/compose\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"80%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"65%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"45%\"\r\n    }\r\n  },\r\n  paper: {\r\n    minHeight: \"300px\",\r\n    marginTop: theme.spacing.unit * 8,\r\n    marginBottom: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    marginTop: \"5%\"\r\n  },\r\n  list: {\r\n    margin: \"0px -139px\"\r\n  }\r\n});\r\n\r\nconst userDetail = ({\r\n  classes,\r\n  children,\r\n  history,\r\n  location,\r\n  userDetails,\r\n  weeklyuserData,\r\n  monthlyuserData\r\n}) => {\r\n  //const alert = useAlert();\r\n  const [formData, setFormData] = useState(location.state.detail);\r\n\r\n  useEffect(() => {\r\n    console.log(\"user Details\");\r\n    userDetails(formData.registrationNumber, formData.role);\r\n  });\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <IconButton aria-label=\"edit\">\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              onClick={() => history.push(\"/user_report/\")}\r\n            />\r\n          </IconButton>\r\n          <Avatar className={classes.avatar}>\r\n            <Edit />\r\n          </Avatar>\r\n\r\n          <Typography align=\"center\" variant=\"headline\">\r\n            User Details\r\n            <h2>{formData.name}</h2>\r\n            {formData.role == \"user\" ? (\r\n              <ul class=\"list-group\" className={classes.list}>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Role\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {formData.role}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Previous Week Applied Job\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {weeklyuserData}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Previous Month Applied Job\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {monthlyuserData}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            ) : (\r\n              <ul class=\"list-group\" className={classes.list}>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Role\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {formData.role}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Previous Week Calls\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {weeklyuserData}\r\n                  </span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  Previous Month Calls\r\n                  <span class=\"badge badge-success badge-pill\">\r\n                    {monthlyuserData}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            )}\r\n          </Typography>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nuserDetail.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  userDetails: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  weeklyuserData: state.userReducer.weeklyuserData,\r\n  monthlyuserData: state.userReducer.monthlyuserData\r\n});\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(mapStateToProps, { userDetails })\r\n)(userDetail);\r\n","import React, { Fragment } from \"react\";\r\nimport { Router, Switch } from \"react-router-dom\";\r\nimport createBrowserHistory from \"history/createBrowserHistory\";\r\n\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport SignInPage from \"../pages/SignInPage\";\r\nimport SignUpPage from \"../pages/SignUpPage\";\r\nimport DashboardPage from \"../pages/DashboardPage\";\r\nimport AddPostPage from \"../pages/AddPostPage\";\r\nimport Alert from \"../pages/Alert\";\r\nimport JobList from \"../pages/sales/JobList\";\r\nimport AdminJobList from \"../pages/sales/adminJobList\";\r\nimport EditJob from \"../pages/sales/JobEdit\";\r\nimport SalesDetails from \"../pages/sales/salesDetail\";\r\nimport UserList from \"../pages/sales/UserList\";\r\nimport EditUser from \"../pages/sales/EditUser\";\r\nimport LeadsList from \"../pages/sales/leads/LeadList\";\r\nimport LeadDetails from \"../pages/sales/leads/LeadDetails\";\r\nimport EditLead from \"../pages/sales/leads/LeadEdit\";\r\nimport MyLeads from \"../pages/sales/leads/MyLead\";\r\nimport LeadSchedule from \"../pages/sales/leads/LeadCallList\";\r\nimport UserReport from \"../pages/sales/user/UserReport\";\r\nimport UserDetails from \"../pages/sales/user/UserDetails\";\r\nconst history = createBrowserHistory();\r\n\r\nexport default () => {\r\n  return (\r\n    <Fragment>\r\n      <Alert />\r\n      <Router history={history}>\r\n        <Switch>\r\n          <PublicRoute exact path=\"/\" component={SignInPage} />\r\n          <PublicRoute path=\"/signup\" component={SignUpPage} />\r\n          <PrivateRoute path=\"/dashboard\" component={DashboardPage} />\r\n          <PrivateRoute path=\"/addpost\" component={AddPostPage} />\r\n          <PrivateRoute path=\"/user_list\" component={UserList} />\r\n          <PrivateRoute path=\"/edit\" component={EditUser} />\r\n          <PrivateRoute path=\"/job_list\" component={JobList} />\r\n          <PrivateRoute path=\"/admin_job_list\" component={AdminJobList} />\r\n          <PrivateRoute path=\"/job_edit\" component={EditJob} />\r\n          <PrivateRoute path=\"/sales_daily_details\" component={SalesDetails} />\r\n          <PrivateRoute path=\"/leads_list\" component={LeadsList} />\r\n          <PrivateRoute path=\"/lead_details\" component={LeadDetails} />\r\n          <PrivateRoute path=\"/lead_edit\" component={EditLead} />\r\n          <PrivateRoute path=\"/my_leads\" component={MyLeads} />\r\n          <PrivateRoute path=\"/lead_scedule\" component={LeadSchedule} />\r\n          <PrivateRoute path=\"/user_report\" component={UserReport} />\r\n          <PrivateRoute path=\"/user_details\" component={UserDetails} />\r\n        </Switch>\r\n      </Router>\r\n    </Fragment>\r\n  );\r\n};\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGOUT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  user: [],\r\n  loading: true,\r\n  error: {},\r\n  isAuth: false\r\n};\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuth: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuth: false,\r\n        loading: false,\r\n        user: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAIL,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_MONTHLY_DETAILS_SUCCESS,\r\n  USER_MONTHLY_DETAILS_FAIL,\r\n  USER_WEEKLY_DETAILS_SUCCESS,\r\n  USER_WEEKLY_DETAILS_FAIL\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  monthlyuserData: [],\r\n  weeklyuserData: [],\r\n  error: {},\r\n  loading: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case USER_WEEKLY_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        weeklyuserData: payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case USER_MONTHLY_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        monthlyuserData: payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case USER_UPDATE_FAIL:\r\n    case USER_DELETE_FAIL:\r\n    case USER_MONTHLY_DETAILS_FAIL:\r\n    case USER_WEEKLY_DETAILS_FAIL:\r\n    case FETCH_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: true\r\n      };\r\n    case USER_UPDATE_SUCCESS:\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  JOB_ADD_SUCCESS,\r\n  JOB_ADD_FAIL,\r\n  FETCH_JOB_DATA_SUCCESS,\r\n  FETCH_JOB_DATA_FAIL,\r\n  JOB_DELETE_FAIL,\r\n  JOB_DELETE_SUCCESS,\r\n  JOB_UPDATE_SUCCESS,\r\n  JOB_UPDATE_FAIL,\r\n  LEAD_UPDATE_FAIL,\r\n  LEAD_UPDATE_SUCCESS\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  job: [],\r\n  error: {},\r\n  newjob: [],\r\n  loading: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case JOB_ADD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        newjob: null,\r\n        loading: false\r\n      };\r\n    case FETCH_JOB_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        job: payload,\r\n        loading: false\r\n      };\r\n    case LEAD_UPDATE_FAIL:\r\n    case JOB_UPDATE_FAIL:\r\n    case FETCH_JOB_DATA_FAIL:\r\n    case JOB_DELETE_FAIL:\r\n    case JOB_ADD_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: payload\r\n      };\r\n    case JOB_UPDATE_SUCCESS:\r\n    case LEAD_UPDATE_SUCCESS:\r\n    case JOB_DELETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport authReducer from \"../reducers/auth\";\r\nimport userReducer from \"../reducers/user\";\r\nimport alertReducer from \"../reducers/alert\";\r\nimport JobReducer from \"../reducers/job\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  authReducer,\r\n  userReducer,\r\n  alertReducer,\r\n  JobReducer\r\n});\r\nconst middel = [thunk];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(...middel))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nimport AppRouter from \"./routers/AppRouter\";\r\nimport setAuthToken from \"../src/utills/setAuthToken\";\r\nimport store from \"./store/store\";\r\nimport { loadUser } from \"./actions/auth\";\r\nimport { positions, Provider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst options = {\r\n  timeout: 5000,\r\n  position: positions.TOP_RIGHT\r\n};\r\nexport default () => {\r\n  React.useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n  return (\r\n    <Provider template={AlertTemplate} {...options}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./store/store\";\r\nimport * as serviceWorker from './serviceWorker';\r\n// import('dotenv').config();\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#8561c5\",\r\n      main: \"#673ab7\",\r\n      dark: \"#482880\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    secondary: deepOrange\r\n  }\r\n});\r\nconsole.log(process.env);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline>\r\n        <App />\r\n      </CssBaseline>\r\n    </MuiThemeProvider>\r\n  </Provider>,\r\n  document.getElementById(\"app\")\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}